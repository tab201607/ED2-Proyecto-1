

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Mar 10 22:52:23 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	dabs	1,0x7E,2
    53     0000                     
    54                           ; Version 2.40
    55                           ; Generated 04/07/2022 GMT
    56                           ; 
    57                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F887 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89     0000                     	;# 
    90     0001                     	;# 
    91     0002                     	;# 
    92     0003                     	;# 
    93     0004                     	;# 
    94     0005                     	;# 
    95     0006                     	;# 
    96     0007                     	;# 
    97     0008                     	;# 
    98     0009                     	;# 
    99     000A                     	;# 
   100     000B                     	;# 
   101     000C                     	;# 
   102     000D                     	;# 
   103     000E                     	;# 
   104     000E                     	;# 
   105     000F                     	;# 
   106     0010                     	;# 
   107     0011                     	;# 
   108     0012                     	;# 
   109     0013                     	;# 
   110     0014                     	;# 
   111     0015                     	;# 
   112     0015                     	;# 
   113     0016                     	;# 
   114     0017                     	;# 
   115     0018                     	;# 
   116     0019                     	;# 
   117     001A                     	;# 
   118     001B                     	;# 
   119     001B                     	;# 
   120     001C                     	;# 
   121     001D                     	;# 
   122     001E                     	;# 
   123     001F                     	;# 
   124     0081                     	;# 
   125     0085                     	;# 
   126     0086                     	;# 
   127     0087                     	;# 
   128     0088                     	;# 
   129     0089                     	;# 
   130     008C                     	;# 
   131     008D                     	;# 
   132     008E                     	;# 
   133     008F                     	;# 
   134     0090                     	;# 
   135     0091                     	;# 
   136     0092                     	;# 
   137     0093                     	;# 
   138     0093                     	;# 
   139     0093                     	;# 
   140     0094                     	;# 
   141     0095                     	;# 
   142     0096                     	;# 
   143     0097                     	;# 
   144     0098                     	;# 
   145     0099                     	;# 
   146     009A                     	;# 
   147     009B                     	;# 
   148     009C                     	;# 
   149     009D                     	;# 
   150     009E                     	;# 
   151     009F                     	;# 
   152     0105                     	;# 
   153     0107                     	;# 
   154     0108                     	;# 
   155     0109                     	;# 
   156     010C                     	;# 
   157     010C                     	;# 
   158     010D                     	;# 
   159     010E                     	;# 
   160     010F                     	;# 
   161     0185                     	;# 
   162     0187                     	;# 
   163     0188                     	;# 
   164     0189                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     0000                     	;# 
   168     0001                     	;# 
   169     0002                     	;# 
   170     0003                     	;# 
   171     0004                     	;# 
   172     0005                     	;# 
   173     0006                     	;# 
   174     0007                     	;# 
   175     0008                     	;# 
   176     0009                     	;# 
   177     000A                     	;# 
   178     000B                     	;# 
   179     000C                     	;# 
   180     000D                     	;# 
   181     000E                     	;# 
   182     000E                     	;# 
   183     000F                     	;# 
   184     0010                     	;# 
   185     0011                     	;# 
   186     0012                     	;# 
   187     0013                     	;# 
   188     0014                     	;# 
   189     0015                     	;# 
   190     0015                     	;# 
   191     0016                     	;# 
   192     0017                     	;# 
   193     0018                     	;# 
   194     0019                     	;# 
   195     001A                     	;# 
   196     001B                     	;# 
   197     001B                     	;# 
   198     001C                     	;# 
   199     001D                     	;# 
   200     001E                     	;# 
   201     001F                     	;# 
   202     0081                     	;# 
   203     0085                     	;# 
   204     0086                     	;# 
   205     0087                     	;# 
   206     0088                     	;# 
   207     0089                     	;# 
   208     008C                     	;# 
   209     008D                     	;# 
   210     008E                     	;# 
   211     008F                     	;# 
   212     0090                     	;# 
   213     0091                     	;# 
   214     0092                     	;# 
   215     0093                     	;# 
   216     0093                     	;# 
   217     0093                     	;# 
   218     0094                     	;# 
   219     0095                     	;# 
   220     0096                     	;# 
   221     0097                     	;# 
   222     0098                     	;# 
   223     0099                     	;# 
   224     009A                     	;# 
   225     009B                     	;# 
   226     009C                     	;# 
   227     009D                     	;# 
   228     009E                     	;# 
   229     009F                     	;# 
   230     0105                     	;# 
   231     0107                     	;# 
   232     0108                     	;# 
   233     0109                     	;# 
   234     010C                     	;# 
   235     010C                     	;# 
   236     010D                     	;# 
   237     010E                     	;# 
   238     010F                     	;# 
   239     0185                     	;# 
   240     0187                     	;# 
   241     0188                     	;# 
   242     0189                     	;# 
   243     018C                     	;# 
   244     018D                     	;# 
   245     0000                     	;# 
   246     0001                     	;# 
   247     0002                     	;# 
   248     0003                     	;# 
   249     0004                     	;# 
   250     0005                     	;# 
   251     0006                     	;# 
   252     0007                     	;# 
   253     0008                     	;# 
   254     0009                     	;# 
   255     000A                     	;# 
   256     000B                     	;# 
   257     000C                     	;# 
   258     000D                     	;# 
   259     000E                     	;# 
   260     000E                     	;# 
   261     000F                     	;# 
   262     0010                     	;# 
   263     0011                     	;# 
   264     0012                     	;# 
   265     0013                     	;# 
   266     0014                     	;# 
   267     0015                     	;# 
   268     0015                     	;# 
   269     0016                     	;# 
   270     0017                     	;# 
   271     0018                     	;# 
   272     0019                     	;# 
   273     001A                     	;# 
   274     001B                     	;# 
   275     001B                     	;# 
   276     001C                     	;# 
   277     001D                     	;# 
   278     001E                     	;# 
   279     001F                     	;# 
   280     0081                     	;# 
   281     0085                     	;# 
   282     0086                     	;# 
   283     0087                     	;# 
   284     0088                     	;# 
   285     0089                     	;# 
   286     008C                     	;# 
   287     008D                     	;# 
   288     008E                     	;# 
   289     008F                     	;# 
   290     0090                     	;# 
   291     0091                     	;# 
   292     0092                     	;# 
   293     0093                     	;# 
   294     0093                     	;# 
   295     0093                     	;# 
   296     0094                     	;# 
   297     0095                     	;# 
   298     0096                     	;# 
   299     0097                     	;# 
   300     0098                     	;# 
   301     0099                     	;# 
   302     009A                     	;# 
   303     009B                     	;# 
   304     009C                     	;# 
   305     009D                     	;# 
   306     009E                     	;# 
   307     009F                     	;# 
   308     0105                     	;# 
   309     0107                     	;# 
   310     0108                     	;# 
   311     0109                     	;# 
   312     010C                     	;# 
   313     010C                     	;# 
   314     010D                     	;# 
   315     010E                     	;# 
   316     010F                     	;# 
   317     0185                     	;# 
   318     0187                     	;# 
   319     0188                     	;# 
   320     0189                     	;# 
   321     018C                     	;# 
   322     018D                     	;# 
   323     0000                     	;# 
   324     0001                     	;# 
   325     0002                     	;# 
   326     0003                     	;# 
   327     0004                     	;# 
   328     0005                     	;# 
   329     0006                     	;# 
   330     0007                     	;# 
   331     0008                     	;# 
   332     0009                     	;# 
   333     000A                     	;# 
   334     000B                     	;# 
   335     000C                     	;# 
   336     000D                     	;# 
   337     000E                     	;# 
   338     000E                     	;# 
   339     000F                     	;# 
   340     0010                     	;# 
   341     0011                     	;# 
   342     0012                     	;# 
   343     0013                     	;# 
   344     0014                     	;# 
   345     0015                     	;# 
   346     0015                     	;# 
   347     0016                     	;# 
   348     0017                     	;# 
   349     0018                     	;# 
   350     0019                     	;# 
   351     001A                     	;# 
   352     001B                     	;# 
   353     001B                     	;# 
   354     001C                     	;# 
   355     001D                     	;# 
   356     001E                     	;# 
   357     001F                     	;# 
   358     0081                     	;# 
   359     0085                     	;# 
   360     0086                     	;# 
   361     0087                     	;# 
   362     0088                     	;# 
   363     0089                     	;# 
   364     008C                     	;# 
   365     008D                     	;# 
   366     008E                     	;# 
   367     008F                     	;# 
   368     0090                     	;# 
   369     0091                     	;# 
   370     0092                     	;# 
   371     0093                     	;# 
   372     0093                     	;# 
   373     0093                     	;# 
   374     0094                     	;# 
   375     0095                     	;# 
   376     0096                     	;# 
   377     0097                     	;# 
   378     0098                     	;# 
   379     0099                     	;# 
   380     009A                     	;# 
   381     009B                     	;# 
   382     009C                     	;# 
   383     009D                     	;# 
   384     009E                     	;# 
   385     009F                     	;# 
   386     0105                     	;# 
   387     0107                     	;# 
   388     0108                     	;# 
   389     0109                     	;# 
   390     010C                     	;# 
   391     010C                     	;# 
   392     010D                     	;# 
   393     010E                     	;# 
   394     010F                     	;# 
   395     0185                     	;# 
   396     0187                     	;# 
   397     0188                     	;# 
   398     0189                     	;# 
   399     018C                     	;# 
   400     018D                     	;# 
   401     0000                     	;# 
   402     0001                     	;# 
   403     0002                     	;# 
   404     0003                     	;# 
   405     0004                     	;# 
   406     0005                     	;# 
   407     0006                     	;# 
   408     0007                     	;# 
   409     0008                     	;# 
   410     0009                     	;# 
   411     000A                     	;# 
   412     000B                     	;# 
   413     000C                     	;# 
   414     000D                     	;# 
   415     000E                     	;# 
   416     000E                     	;# 
   417     000F                     	;# 
   418     0010                     	;# 
   419     0011                     	;# 
   420     0012                     	;# 
   421     0013                     	;# 
   422     0014                     	;# 
   423     0015                     	;# 
   424     0015                     	;# 
   425     0016                     	;# 
   426     0017                     	;# 
   427     0018                     	;# 
   428     0019                     	;# 
   429     001A                     	;# 
   430     001B                     	;# 
   431     001B                     	;# 
   432     001C                     	;# 
   433     001D                     	;# 
   434     001E                     	;# 
   435     001F                     	;# 
   436     0081                     	;# 
   437     0085                     	;# 
   438     0086                     	;# 
   439     0087                     	;# 
   440     0088                     	;# 
   441     0089                     	;# 
   442     008C                     	;# 
   443     008D                     	;# 
   444     008E                     	;# 
   445     008F                     	;# 
   446     0090                     	;# 
   447     0091                     	;# 
   448     0092                     	;# 
   449     0093                     	;# 
   450     0093                     	;# 
   451     0093                     	;# 
   452     0094                     	;# 
   453     0095                     	;# 
   454     0096                     	;# 
   455     0097                     	;# 
   456     0098                     	;# 
   457     0099                     	;# 
   458     009A                     	;# 
   459     009B                     	;# 
   460     009C                     	;# 
   461     009D                     	;# 
   462     009E                     	;# 
   463     009F                     	;# 
   464     0105                     	;# 
   465     0107                     	;# 
   466     0108                     	;# 
   467     0109                     	;# 
   468     010C                     	;# 
   469     010C                     	;# 
   470     010D                     	;# 
   471     010E                     	;# 
   472     010F                     	;# 
   473     0185                     	;# 
   474     0187                     	;# 
   475     0188                     	;# 
   476     0189                     	;# 
   477     018C                     	;# 
   478     018D                     	;# 
   479     0000                     	;# 
   480     0001                     	;# 
   481     0002                     	;# 
   482     0003                     	;# 
   483     0004                     	;# 
   484     0005                     	;# 
   485     0006                     	;# 
   486     0007                     	;# 
   487     0008                     	;# 
   488     0009                     	;# 
   489     000A                     	;# 
   490     000B                     	;# 
   491     000C                     	;# 
   492     000D                     	;# 
   493     000E                     	;# 
   494     000E                     	;# 
   495     000F                     	;# 
   496     0010                     	;# 
   497     0011                     	;# 
   498     0012                     	;# 
   499     0013                     	;# 
   500     0014                     	;# 
   501     0015                     	;# 
   502     0015                     	;# 
   503     0016                     	;# 
   504     0017                     	;# 
   505     0018                     	;# 
   506     0019                     	;# 
   507     001A                     	;# 
   508     001B                     	;# 
   509     001B                     	;# 
   510     001C                     	;# 
   511     001D                     	;# 
   512     001E                     	;# 
   513     001F                     	;# 
   514     0081                     	;# 
   515     0085                     	;# 
   516     0086                     	;# 
   517     0087                     	;# 
   518     0088                     	;# 
   519     0089                     	;# 
   520     008C                     	;# 
   521     008D                     	;# 
   522     008E                     	;# 
   523     008F                     	;# 
   524     0090                     	;# 
   525     0091                     	;# 
   526     0092                     	;# 
   527     0093                     	;# 
   528     0093                     	;# 
   529     0093                     	;# 
   530     0094                     	;# 
   531     0095                     	;# 
   532     0096                     	;# 
   533     0097                     	;# 
   534     0098                     	;# 
   535     0099                     	;# 
   536     009A                     	;# 
   537     009B                     	;# 
   538     009C                     	;# 
   539     009D                     	;# 
   540     009E                     	;# 
   541     009F                     	;# 
   542     0105                     	;# 
   543     0107                     	;# 
   544     0108                     	;# 
   545     0109                     	;# 
   546     010C                     	;# 
   547     010C                     	;# 
   548     010D                     	;# 
   549     010E                     	;# 
   550     010F                     	;# 
   551     0185                     	;# 
   552     0187                     	;# 
   553     0188                     	;# 
   554     0189                     	;# 
   555     018C                     	;# 
   556     018D                     	;# 
   557     0000                     	;# 
   558     0001                     	;# 
   559     0002                     	;# 
   560     0003                     	;# 
   561     0004                     	;# 
   562     0005                     	;# 
   563     0006                     	;# 
   564     0007                     	;# 
   565     0008                     	;# 
   566     0009                     	;# 
   567     000A                     	;# 
   568     000B                     	;# 
   569     000C                     	;# 
   570     000D                     	;# 
   571     000E                     	;# 
   572     000E                     	;# 
   573     000F                     	;# 
   574     0010                     	;# 
   575     0011                     	;# 
   576     0012                     	;# 
   577     0013                     	;# 
   578     0014                     	;# 
   579     0015                     	;# 
   580     0015                     	;# 
   581     0016                     	;# 
   582     0017                     	;# 
   583     0018                     	;# 
   584     0019                     	;# 
   585     001A                     	;# 
   586     001B                     	;# 
   587     001B                     	;# 
   588     001C                     	;# 
   589     001D                     	;# 
   590     001E                     	;# 
   591     001F                     	;# 
   592     0081                     	;# 
   593     0085                     	;# 
   594     0086                     	;# 
   595     0087                     	;# 
   596     0088                     	;# 
   597     0089                     	;# 
   598     008C                     	;# 
   599     008D                     	;# 
   600     008E                     	;# 
   601     008F                     	;# 
   602     0090                     	;# 
   603     0091                     	;# 
   604     0092                     	;# 
   605     0093                     	;# 
   606     0093                     	;# 
   607     0093                     	;# 
   608     0094                     	;# 
   609     0095                     	;# 
   610     0096                     	;# 
   611     0097                     	;# 
   612     0098                     	;# 
   613     0099                     	;# 
   614     009A                     	;# 
   615     009B                     	;# 
   616     009C                     	;# 
   617     009D                     	;# 
   618     009E                     	;# 
   619     009F                     	;# 
   620     0105                     	;# 
   621     0107                     	;# 
   622     0108                     	;# 
   623     0109                     	;# 
   624     010C                     	;# 
   625     010C                     	;# 
   626     010D                     	;# 
   627     010E                     	;# 
   628     010F                     	;# 
   629     0185                     	;# 
   630     0187                     	;# 
   631     0188                     	;# 
   632     0189                     	;# 
   633     018C                     	;# 
   634     018D                     	;# 
   635                           
   636                           	psect	strings
   637     0800                     __pstrings:
   638     0800                     stringtab:
   639     0800                     __stringtab:
   640                           
   641                           ;	String table - string pointers are 1 byte each
   642     0800  1BFF               	btfsc	btemp+1,7
   643     0801  280A               	ljmp	stringcode
   644     0802  1383               	bcf	3,7
   645     0803  187F               	btfsc	btemp+1,0
   646     0804  1783               	bsf	3,7
   647     0805  0800               	movf	0,w
   648     0806  0A84               	incf	4,f
   649     0807  1903               	skipnz
   650     0808  0AFF               	incf	btemp+1,f
   651     0809  0008               	return
   652     080A                     stringcode:
   653     080A                     stringdir:
   654     080A  3008               	movlw	high stringdir
   655     080B  008A               	movwf	10
   656     080C  0804               	movf	4,w
   657     080D  0A84               	incf	4,f
   658     080E  0782               	addwf	2,f
   659     080F                     __stringbase:
   660     080F  3400               	retlw	0
   661     0810                     __end_of__stringtab:
   662     0810                     _dpowers:
   663     0810  3401               	retlw	1
   664     0811  3400               	retlw	0
   665     0812  340A               	retlw	10
   666     0813  3400               	retlw	0
   667     0814  3464               	retlw	100
   668     0815  3400               	retlw	0
   669     0816  34E8               	retlw	232
   670     0817  3403               	retlw	3
   671     0818  3410               	retlw	16
   672     0819  3427               	retlw	39
   673     081A                     __end_of_dpowers:
   674     0005                     _PORTAbits	set	5
   675     0001                     _TMR0	set	1
   676     001A                     _RCREG	set	26
   677     0019                     _TXREG	set	25
   678     0018                     _RCSTAbits	set	24
   679     001E                     _ADRESH	set	30
   680     001F                     _ADCON0bits	set	31
   681     0014                     _SSPCONbits	set	20
   682     0013                     _SSPBUF	set	19
   683     0014                     _SSPCON	set	20
   684     0008                     _PORTDbits	set	8
   685     0008                     _PORTD	set	8
   686     0007                     _PORTC	set	7
   687     000B                     _INTCONbits	set	11
   688     000C                     _PIR1bits	set	12
   689     0063                     _SSPIF	set	99
   690     005E                     _PEIE	set	94
   691     005F                     _GIE	set	95
   692     0043                     _RD3	set	67
   693     0047                     _RD7	set	71
   694     0046                     _RD6	set	70
   695     0045                     _RD5	set	69
   696     0044                     _RD4	set	68
   697     0081                     _OPTION_REGbits	set	129
   698     009A                     _SPBRGH	set	154
   699     0099                     _SPBRG	set	153
   700     0098                     _TXSTAbits	set	152
   701     0086                     _TRISBbits	set	134
   702     0089                     _TRISEbits	set	137
   703     0085                     _TRISAbits	set	133
   704     009F                     _ADCON1bits	set	159
   705     0094                     _SSPSTATbits	set	148
   706     0091                     _SSPCON2bits	set	145
   707     0094                     _SSPSTAT	set	148
   708     0093                     _SSPADD	set	147
   709     0091                     _SSPCON2	set	145
   710     0088                     _TRISD	set	136
   711     0087                     _TRISCbits	set	135
   712     008C                     _PIE1bits	set	140
   713     008F                     _OSCCONbits	set	143
   714     04A0                     _BF	set	1184
   715     0463                     _SSPIE	set	1123
   716     043C                     _TRISC4	set	1084
   717     043B                     _TRISC3	set	1083
   718     0187                     _BAUDCTLbits	set	391
   719     0189                     _ANSELHbits	set	393
   720     0188                     _ANSELbits	set	392
   721     0189                     _ANSELH	set	393
   722     0188                     _ANSEL	set	392
   723     081A                     STR_2:
   724     081A  3441               	retlw	65	;'A'
   725     081B  346C               	retlw	108	;'l'
   726     081C  3463               	retlw	99	;'c'
   727     081D  346F               	retlw	111	;'o'
   728     081E  3468               	retlw	104	;'h'
   729     081F  346F               	retlw	111	;'o'
   730     0820  346C               	retlw	108	;'l'
   731     0821  343A               	retlw	58	;':'
   732     0822  3400               	retlw	0
   733     0823                     STR_1:
   734     0823  3442               	retlw	66	;'B'
   735     0824  3450               	retlw	80	;'P'
   736     0825  344D               	retlw	77	;'M'
   737     0826  343A               	retlw	58	;':'
   738     0827  3400               	retlw	0
   739     0828                     STR_4:
   740     0828  3425               	retlw	37	;'%'
   741     0829  3433               	retlw	51	;'3'
   742     082A  3475               	retlw	117	;'u'
   743     082B  3400               	retlw	0
   744     082C                     STR_3:
   745     082C  3454               	retlw	84	;'T'
   746     082D  343A               	retlw	58	;':'
   747     082E  3400               	retlw	0
   748     0828                     
   749                           	psect	cinit
   750     000F                     start_initialization:	
   751                           ; #config settings
   752                           
   753     000F                     __initialization:
   754                           
   755                           ; Clear objects allocated to COMMON
   756     000F  01F8               	clrf	__pbssCOMMON& (0+127)
   757     0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   758                           
   759                           ; Clear objects allocated to BANK0
   760     0011  1283               	bcf	3,5	;RP0=0, select bank0
   761     0012  1303               	bcf	3,6	;RP1=0, select bank0
   762     0013  01D6               	clrf	__pbssBANK0& (0+127)
   763     0014  01D7               	clrf	(__pbssBANK0+1)& (0+127)
   764     0015  01D8               	clrf	(__pbssBANK0+2)& (0+127)
   765     0016  01D9               	clrf	(__pbssBANK0+3)& (0+127)
   766     0017  01DA               	clrf	(__pbssBANK0+4)& (0+127)
   767     0018  01DB               	clrf	(__pbssBANK0+5)& (0+127)
   768                           
   769                           ; Clear objects allocated to BANK1
   770     0019  1683               	bsf	3,5	;RP0=1, select bank1
   771     001A  1303               	bcf	3,6	;RP1=0, select bank1
   772     001B  01C7               	clrf	__pbssBANK1& (0+127)
   773     001C  01C8               	clrf	(__pbssBANK1+1)& (0+127)
   774     001D  01C9               	clrf	(__pbssBANK1+2)& (0+127)
   775     001E  01CA               	clrf	(__pbssBANK1+3)& (0+127)
   776     001F  01CB               	clrf	(__pbssBANK1+4)& (0+127)
   777     0020                     end_of_initialization:	
   778                           ;End of C runtime variable initialization code
   779                           
   780     0020                     __end_of__initialization:
   781     0020  0183               	clrf	3
   782     0021  120A  118A  2A7C   	ljmp	_main	;jump to C main() function
   783                           
   784                           	psect	bssCOMMON
   785     0078                     __pbssCOMMON:
   786     0078                     _errno:
   787     0078                     	ds	2
   788                           
   789                           	psect	bssBANK0
   790     0056                     __pbssBANK0:
   791     0056                     _dht11_byte:
   792     0056                     	ds	5
   793     005B                     _dht11_aux:
   794     005B                     	ds	1
   795                           
   796                           	psect	bssBANK1
   797     00C7                     __pbssBANK1:
   798     00C7                     _bpm:
   799     00C7                     	ds	2
   800     00C9                     _alcohol:
   801     00C9                     	ds	1
   802     00CA                     _temp:
   803     00CA                     	ds	1
   804     00CB                     _humid:
   805     00CB                     	ds	1
   806                           
   807                           	psect	cstackBANK1
   808     00A0                     __pcstackBANK1:
   809     00A0                     main@display_alc:
   810                           
   811                           ; 10 bytes @ 0x0
   812     00A0                     	ds	10
   813     00AA                     main@display_bpm:
   814                           
   815                           ; 10 bytes @ 0xA
   816     00AA                     	ds	10
   817     00B4                     main@display_temp:
   818                           
   819                           ; 10 bytes @ 0x14
   820     00B4                     	ds	10
   821     00BE                     _main$1773:
   822                           
   823                           ; 4 bytes @ 0x1E
   824     00BE                     	ds	4
   825     00C2                     _main$1774:
   826                           
   827                           ; 4 bytes @ 0x22
   828     00C2                     	ds	4
   829     00C6                     main@temperature:
   830                           
   831                           ; 1 bytes @ 0x26
   832     00C6                     	ds	1
   833                           
   834                           	psect	cstackCOMMON
   835     0070                     __pcstackCOMMON:
   836     0070                     ?_isdigit:
   837     0070                     ?_dht11_read_byte:	
   838                           ; 1 bit 
   839                           
   840     0070                     ?_dht11_config:	
   841                           ; 1 bit 
   842                           
   843     0070                     ?_adc_setup:	
   844                           ; 1 bytes @ 0x0
   845                           
   846     0070                     ?_Lcd_Init:	
   847                           ; 1 bytes @ 0x0
   848                           
   849     0070                     ?_Lcd_Clear:	
   850                           ; 1 bytes @ 0x0
   851                           
   852     0070                     ?_adc_RO:	
   853                           ; 1 bytes @ 0x0
   854                           
   855     0070                     ?_UART_write_char:	
   856                           ; 1 bytes @ 0x0
   857                           
   858     0070                     ?_isr:	
   859                           ; 1 bytes @ 0x0
   860                           
   861     0070                     ?_main:	
   862                           ; 1 bytes @ 0x0
   863                           
   864     0070                     ?_Lcd_Port:	
   865                           ; 1 bytes @ 0x0
   866                           
   867     0070                     ?_Lcd_Cmd:	
   868                           ; 1 bytes @ 0x0
   869                           
   870     0070                     ?_Lcd_Write_Char:	
   871                           ; 1 bytes @ 0x0
   872                           
   873     0070                     ?_adc_read:	
   874                           ; 1 bytes @ 0x0
   875                           
   876     0070                     ?_adc_output:	
   877                           ; 1 bytes @ 0x0
   878                           
   879     0070                     ?_UART_read_char:	
   880                           ; 1 bytes @ 0x0
   881                           
   882                           
   883                           ; 2 bytes @ 0x0
   884     0070                     	ds	2
   885     0072                     ??_UART_read_char:
   886                           
   887                           ; 1 bytes @ 0x2
   888     0072                     	ds	2
   889     0074                     ??_isr:
   890                           
   891                           ; 1 bytes @ 0x4
   892     0074                     	ds	4
   893                           
   894                           	psect	cstackBANK0
   895     0020                     __pcstackBANK0:
   896     0020                     ?___fleq:
   897     0020                     ?_UART_RX_config:	
   898                           ; 1 bit 
   899                           
   900     0020                     ?_UART_TX_config:	
   901                           ; 1 bytes @ 0x0
   902                           
   903     0020                     ??_dht11_config:	
   904                           ; 1 bytes @ 0x0
   905                           
   906     0020                     ??_adc_setup:	
   907                           ; 1 bytes @ 0x0
   908                           
   909     0020                     ?_adc_channel:	
   910                           ; 1 bytes @ 0x0
   911                           
   912     0020                     ??_UART_write_char:	
   913                           ; 1 bytes @ 0x0
   914                           
   915     0020                     ??_isdigit:	
   916                           ; 1 bytes @ 0x0
   917                           
   918     0020                     ??_Lcd_Port:	
   919                           ; 1 bytes @ 0x0
   920                           
   921     0020                     ??_adc_read:	
   922                           ; 1 bytes @ 0x0
   923                           
   924     0020                     ??_adc_output:	
   925                           ; 1 bytes @ 0x0
   926                           
   927     0020                     ??_dht11_read_byte:	
   928                           ; 1 bytes @ 0x0
   929                           
   930     0020                     ?___bmul:	
   931                           ; 1 bytes @ 0x0
   932                           
   933     0020                     ?___wmul:	
   934                           ; 1 bytes @ 0x0
   935                           
   936     0020                     ?___lwdiv:	
   937                           ; 2 bytes @ 0x0
   938                           
   939     0020                     ?___lldiv:	
   940                           ; 2 bytes @ 0x0
   941                           
   942     0020                     ?___fladd:	
   943                           ; 4 bytes @ 0x0
   944                           
   945     0020                     ?___xxtofl:	
   946                           ; 4 bytes @ 0x0
   947                           
   948     0020                     Lcd_Port@a:	
   949                           ; 4 bytes @ 0x0
   950                           
   951     0020                     UART_write_char@character:	
   952                           ; 1 bytes @ 0x0
   953                           
   954     0020                     ___bmul@multiplicand:	
   955                           ; 1 bytes @ 0x0
   956                           
   957     0020                     _isdigit$1515:	
   958                           ; 1 bytes @ 0x0
   959                           
   960     0020                     adc_channel@channel:	
   961                           ; 1 bytes @ 0x0
   962                           
   963     0020                     UART_RX_config@baudrate:	
   964                           ; 2 bytes @ 0x0
   965                           
   966     0020                     UART_TX_config@baudrate:	
   967                           ; 2 bytes @ 0x0
   968                           
   969     0020                     ___wmul@multiplier:	
   970                           ; 2 bytes @ 0x0
   971                           
   972     0020                     ___lwdiv@divisor:	
   973                           ; 2 bytes @ 0x0
   974                           
   975     0020                     ___lldiv@divisor:	
   976                           ; 2 bytes @ 0x0
   977                           
   978     0020                     ___fleq@ff1:	
   979                           ; 4 bytes @ 0x0
   980                           
   981     0020                     ___fladd@b:	
   982                           ; 4 bytes @ 0x0
   983                           
   984     0020                     ___xxtofl@val:	
   985                           ; 4 bytes @ 0x0
   986                           
   987                           
   988                           ; 4 bytes @ 0x0
   989     0020                     	ds	1
   990     0021                     ??_Lcd_Cmd:
   991     0021                     ??_Lcd_Write_Char:	
   992                           ; 1 bytes @ 0x1
   993                           
   994     0021                     ??___bmul:	
   995                           ; 1 bytes @ 0x1
   996                           
   997     0021                     adc_setup@inter:	
   998                           ; 1 bytes @ 0x1
   999                           
  1000     0021                     adc_read@channel:	
  1001                           ; 1 bytes @ 0x1
  1002                           
  1003     0021                     dht11_read_byte@i:	
  1004                           ; 1 bytes @ 0x1
  1005                           
  1006     0021                     isdigit@c:	
  1007                           ; 1 bytes @ 0x1
  1008                           
  1009                           
  1010                           ; 1 bytes @ 0x1
  1011     0021                     	ds	1
  1012     0022                     ??_UART_RX_config:
  1013     0022                     ??_UART_TX_config:	
  1014                           ; 1 bytes @ 0x2
  1015                           
  1016     0022                     ??_adc_channel:	
  1017                           ; 1 bytes @ 0x2
  1018                           
  1019     0022                     ??_adc_RO:	
  1020                           ; 1 bytes @ 0x2
  1021                           
  1022     0022                     Lcd_Write_Char@temp:	
  1023                           ; 1 bytes @ 0x2
  1024                           
  1025     0022                     ___bmul@product:	
  1026                           ; 1 bytes @ 0x2
  1027                           
  1028     0022                     ___wmul@multiplicand:	
  1029                           ; 1 bytes @ 0x2
  1030                           
  1031     0022                     ___lwdiv@dividend:	
  1032                           ; 2 bytes @ 0x2
  1033                           
  1034                           
  1035                           ; 2 bytes @ 0x2
  1036     0022                     	ds	1
  1037     0023                     Lcd_Cmd@a:
  1038     0023                     Lcd_Write_Char@y:	
  1039                           ; 1 bytes @ 0x3
  1040                           
  1041     0023                     adc_RO@channel:	
  1042                           ; 1 bytes @ 0x3
  1043                           
  1044     0023                     ___bmul@multiplier:	
  1045                           ; 1 bytes @ 0x3
  1046                           
  1047                           
  1048                           ; 1 bytes @ 0x3
  1049     0023                     	ds	1
  1050     0024                     ?_dht11_read:
  1051     0024                     ??_Lcd_Init:	
  1052                           ; 1 bit 
  1053                           
  1054     0024                     ??_Lcd_Clear:	
  1055                           ; 1 bytes @ 0x4
  1056                           
  1057     0024                     ?_Lcd_Set_Cursor:	
  1058                           ; 1 bytes @ 0x4
  1059                           
  1060     0024                     ??___wmul:	
  1061                           ; 1 bytes @ 0x4
  1062                           
  1063     0024                     ??___lwdiv:	
  1064                           ; 1 bytes @ 0x4
  1065                           
  1066     0024                     ??___xxtofl:	
  1067                           ; 1 bytes @ 0x4
  1068                           
  1069     0024                     Lcd_Set_Cursor@b:	
  1070                           ; 1 bytes @ 0x4
  1071                           
  1072     0024                     Lcd_Write_Char@a:	
  1073                           ; 1 bytes @ 0x4
  1074                           
  1075     0024                     dht11_read@ptemp:	
  1076                           ; 1 bytes @ 0x4
  1077                           
  1078     0024                     ___wmul@product:	
  1079                           ; 1 bytes @ 0x4
  1080                           
  1081     0024                     ___lldiv@dividend:	
  1082                           ; 2 bytes @ 0x4
  1083                           
  1084     0024                     ___fleq@ff2:	
  1085                           ; 4 bytes @ 0x4
  1086                           
  1087     0024                     ___fladd@a:	
  1088                           ; 4 bytes @ 0x4
  1089                           
  1090                           
  1091                           ; 4 bytes @ 0x4
  1092     0024                     	ds	1
  1093     0025                     ??_Lcd_Set_Cursor:
  1094     0025                     ?_Lcd_Write_String:	
  1095                           ; 1 bytes @ 0x5
  1096                           
  1097     0025                     ??_dht11_read:	
  1098                           ; 1 bytes @ 0x5
  1099                           
  1100     0025                     Lcd_Write_String@a:	
  1101                           ; 1 bytes @ 0x5
  1102                           
  1103     0025                     ___lwdiv@quotient:	
  1104                           ; 2 bytes @ 0x5
  1105                           
  1106                           
  1107                           ; 2 bytes @ 0x5
  1108     0025                     	ds	1
  1109     0026                     Lcd_Set_Cursor@a:
  1110                           
  1111                           ; 1 bytes @ 0x6
  1112     0026                     	ds	1
  1113     0027                     ??_Lcd_Write_String:
  1114     0027                     Lcd_Set_Cursor@z:	
  1115                           ; 1 bytes @ 0x7
  1116                           
  1117     0027                     dht11_read@checksum:	
  1118                           ; 1 bytes @ 0x7
  1119                           
  1120     0027                     ___lwdiv@counter:	
  1121                           ; 1 bytes @ 0x7
  1122                           
  1123                           
  1124                           ; 1 bytes @ 0x7
  1125     0027                     	ds	1
  1126     0028                     ??___lldiv:
  1127     0028                     ??___fleq:	
  1128                           ; 1 bytes @ 0x8
  1129                           
  1130     0028                     ??___fladd:	
  1131                           ; 1 bytes @ 0x8
  1132                           
  1133     0028                     ?___lwmod:	
  1134                           ; 1 bytes @ 0x8
  1135                           
  1136     0028                     Lcd_Set_Cursor@y:	
  1137                           ; 2 bytes @ 0x8
  1138                           
  1139     0028                     dht11_read@phum:	
  1140                           ; 1 bytes @ 0x8
  1141                           
  1142     0028                     ___xxtofl@sign:	
  1143                           ; 1 bytes @ 0x8
  1144                           
  1145     0028                     ___lwmod@divisor:	
  1146                           ; 1 bytes @ 0x8
  1147                           
  1148                           
  1149                           ; 2 bytes @ 0x8
  1150     0028                     	ds	1
  1151     0029                     Lcd_Set_Cursor@temp:
  1152     0029                     dht11_read@i:	
  1153                           ; 1 bytes @ 0x9
  1154                           
  1155     0029                     ___xxtofl@exp:	
  1156                           ; 1 bytes @ 0x9
  1157                           
  1158     0029                     ___lldiv@quotient:	
  1159                           ; 1 bytes @ 0x9
  1160                           
  1161                           
  1162                           ; 4 bytes @ 0x9
  1163     0029                     	ds	1
  1164     002A                     Lcd_Write_String@i:
  1165     002A                     ___lwmod@dividend:	
  1166                           ; 2 bytes @ 0xA
  1167                           
  1168     002A                     ___xxtofl@arg:	
  1169                           ; 2 bytes @ 0xA
  1170                           
  1171                           
  1172                           ; 4 bytes @ 0xA
  1173     002A                     	ds	2
  1174     002C                     ??___lwmod:
  1175     002C                     ?_frexp:	
  1176                           ; 1 bytes @ 0xC
  1177                           
  1178     002C                     frexp@value:	
  1179                           ; 4 bytes @ 0xC
  1180                           
  1181                           
  1182                           ; 4 bytes @ 0xC
  1183     002C                     	ds	1
  1184     002D                     ___lldiv@counter:
  1185     002D                     ___lwmod@counter:	
  1186                           ; 1 bytes @ 0xD
  1187                           
  1188                           
  1189                           ; 1 bytes @ 0xD
  1190     002D                     	ds	1
  1191     002E                     ?_I2C_Master_Init:
  1192     002E                     ?_sprintf:	
  1193                           ; 1 bytes @ 0xE
  1194                           
  1195     002E                     ?___fltol:	
  1196                           ; 2 bytes @ 0xE
  1197                           
  1198     002E                     sprintf@f:	
  1199                           ; 4 bytes @ 0xE
  1200                           
  1201     002E                     I2C_Master_Init@c:	
  1202                           ; 1 bytes @ 0xE
  1203                           
  1204     002E                     ___fltol@f1:	
  1205                           ; 4 bytes @ 0xE
  1206                           
  1207                           
  1208                           ; 4 bytes @ 0xE
  1209     002E                     	ds	2
  1210     0030                     ___fladd@signs:
  1211     0030                     frexp@eptr:	
  1212                           ; 1 bytes @ 0x10
  1213                           
  1214                           
  1215                           ; 1 bytes @ 0x10
  1216     0030                     	ds	1
  1217     0031                     ??_sprintf:
  1218     0031                     ??_frexp:	
  1219                           ; 1 bytes @ 0x11
  1220                           
  1221     0031                     ___fladd@aexp:	
  1222                           ; 1 bytes @ 0x11
  1223                           
  1224                           
  1225                           ; 1 bytes @ 0x11
  1226     0031                     	ds	1
  1227     0032                     ??_I2C_Master_Init:
  1228     0032                     ??___fltol:	
  1229                           ; 1 bytes @ 0x12
  1230                           
  1231     0032                     ___fladd@bexp:	
  1232                           ; 1 bytes @ 0x12
  1233                           
  1234                           
  1235                           ; 1 bytes @ 0x12
  1236     0032                     	ds	1
  1237     0033                     ___fladd@grs:
  1238                           
  1239                           ; 1 bytes @ 0x13
  1240     0033                     	ds	1
  1241     0034                     sprintf@flag:
  1242                           
  1243                           ; 1 bytes @ 0x14
  1244     0034                     	ds	1
  1245     0035                     sprintf@ap:
  1246                           
  1247                           ; 1 bytes @ 0x15
  1248     0035                     	ds	1
  1249     0036                     ___fltol@sign1:
  1250     0036                     sprintf@val:	
  1251                           ; 1 bytes @ 0x16
  1252                           
  1253                           
  1254                           ; 2 bytes @ 0x16
  1255     0036                     	ds	1
  1256     0037                     ___fltol@exp1:
  1257                           
  1258                           ; 1 bytes @ 0x17
  1259     0037                     	ds	1
  1260     0038                     ?_trunc:
  1261     0038                     sprintf@prec:	
  1262                           ; 4 bytes @ 0x18
  1263                           
  1264     0038                     trunc@x:	
  1265                           ; 1 bytes @ 0x18
  1266                           
  1267                           
  1268                           ; 4 bytes @ 0x18
  1269     0038                     	ds	1
  1270     0039                     sprintf@width:
  1271                           
  1272                           ; 2 bytes @ 0x19
  1273     0039                     	ds	2
  1274     003B                     sprintf@sp:
  1275                           
  1276                           ; 1 bytes @ 0x1B
  1277     003B                     	ds	1
  1278     003C                     ??_trunc:
  1279     003C                     sprintf@c:	
  1280                           ; 1 bytes @ 0x1C
  1281                           
  1282     003C                     trunc@i:	
  1283                           ; 1 bytes @ 0x1C
  1284                           
  1285                           
  1286                           ; 4 bytes @ 0x1C
  1287     003C                     	ds	4
  1288     0040                     trunc@expon:
  1289                           
  1290                           ; 2 bytes @ 0x20
  1291     0040                     	ds	2
  1292     0042                     ?___flsub:
  1293     0042                     ___flsub@a:	
  1294                           ; 4 bytes @ 0x22
  1295                           
  1296                           
  1297                           ; 4 bytes @ 0x22
  1298     0042                     	ds	4
  1299     0046                     ___flsub@b:
  1300                           
  1301                           ; 4 bytes @ 0x26
  1302     0046                     	ds	4
  1303     004A                     ??___flsub:
  1304     004A                     ?_round:	
  1305                           ; 1 bytes @ 0x2A
  1306                           
  1307     004A                     round@x:	
  1308                           ; 4 bytes @ 0x2A
  1309                           
  1310                           
  1311                           ; 4 bytes @ 0x2A
  1312     004A                     	ds	4
  1313     004E                     ??_round:
  1314     004E                     round@f:	
  1315                           ; 1 bytes @ 0x2E
  1316                           
  1317                           
  1318                           ; 4 bytes @ 0x2E
  1319     004E                     	ds	4
  1320     0052                     ??_main:
  1321                           
  1322                           ; 1 bytes @ 0x32
  1323     0052                     	ds	4
  1324                           
  1325                           	psect	maintext
  1326     027C                     __pmaintext:	
  1327 ;;
  1328 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1329 ;;
  1330 ;; *************** function _main *****************
  1331 ;; Defined at:
  1332 ;;		line 58 in file "main.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;		None
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  display_temp   10   20[BANK1 ] unsigned char [10]
  1337 ;;  display_bpm    10   10[BANK1 ] unsigned char [10]
  1338 ;;  display_alc    10    0[BANK1 ] unsigned char [10]
  1339 ;;  temperature     1   38[BANK1 ] unsigned char 
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  1    wreg      void 
  1342 ;; Registers used:
  1343 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1344 ;; Tracked objects:
  1345 ;;		On entry : B00/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1349 ;;      Params:         0       0       0       0       0
  1350 ;;      Locals:         0       0      39       0       0
  1351 ;;      Temps:          0       4       0       0       0
  1352 ;;      Totals:         0       4      39       0       0
  1353 ;;Total ram usage:       43 bytes
  1354 ;; Hardware stack levels required when called: 6
  1355 ;; This function calls:
  1356 ;;		_I2C_Master_Init
  1357 ;;		_Lcd_Clear
  1358 ;;		_Lcd_Init
  1359 ;;		_Lcd_Set_Cursor
  1360 ;;		_Lcd_Write_String
  1361 ;;		_UART_RX_config
  1362 ;;		_UART_TX_config
  1363 ;;		_UART_write_char
  1364 ;;		___fltol
  1365 ;;		___xxtofl
  1366 ;;		_adc_RO
  1367 ;;		_adc_channel
  1368 ;;		_adc_setup
  1369 ;;		_dht11_config
  1370 ;;		_dht11_read
  1371 ;;		_round
  1372 ;;		_sprintf
  1373 ;; This function is called by:
  1374 ;;		Startup code after reset
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378     027C                     _main:	
  1379                           ;psect for function _main
  1380                           
  1381     027C                     l2843:	
  1382                           ;incstack = 0
  1383                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1384                           
  1385                           
  1386                           ;main.c: 60:      I2C_Master_Init(100000);
  1387     027C  3000               	movlw	0
  1388     027D  1283               	bcf	3,5	;RP0=0, select bank0
  1389     027E  1303               	bcf	3,6	;RP1=0, select bank0
  1390     027F  00B1               	movwf	I2C_Master_Init@c+3
  1391     0280  3001               	movlw	1
  1392     0281  00B0               	movwf	I2C_Master_Init@c+2
  1393     0282  3086               	movlw	134
  1394     0283  00AF               	movwf	I2C_Master_Init@c+1
  1395     0284  30A0               	movlw	160
  1396     0285  00AE               	movwf	I2C_Master_Init@c
  1397     0286  120A  158A  245F  120A  118A  	fcall	_I2C_Master_Init
  1398     028B                     l2845:
  1399                           
  1400                           ;main.c: 62:     OSCCONbits.SCS = 0b00;
  1401     028B  1683               	bsf	3,5	;RP0=1, select bank1
  1402     028C  1303               	bcf	3,6	;RP1=0, select bank1
  1403     028D  100F               	bcf	15,0	;volatile
  1404     028E                     l2847:
  1405                           
  1406                           ;main.c: 63:     OSCCONbits.IRCF = 0b111;
  1407     028E  3070               	movlw	112
  1408     028F  048F               	iorwf	15,f	;volatile
  1409     0290                     l2849:
  1410                           
  1411                           ;main.c: 66:     UART_RX_config(207);
  1412     0290  30CF               	movlw	207
  1413     0291  1283               	bcf	3,5	;RP0=0, select bank0
  1414     0292  1303               	bcf	3,6	;RP1=0, select bank0
  1415     0293  00A0               	movwf	UART_RX_config@baudrate
  1416     0294  3000               	movlw	0
  1417     0295  00A1               	movwf	UART_RX_config@baudrate+1
  1418     0296  120A  158A  22E8  120A  118A  	fcall	_UART_RX_config
  1419     029B                     l2851:
  1420                           
  1421                           ;main.c: 67:     UART_TX_config(207);
  1422     029B  30CF               	movlw	207
  1423     029C  1283               	bcf	3,5	;RP0=0, select bank0
  1424     029D  1303               	bcf	3,6	;RP1=0, select bank0
  1425     029E  00A0               	movwf	UART_TX_config@baudrate
  1426     029F  3000               	movlw	0
  1427     02A0  00A1               	movwf	UART_TX_config@baudrate+1
  1428     02A1  120A  158A  231F  120A  118A  	fcall	_UART_TX_config
  1429     02A6                     l2853:
  1430                           
  1431                           ;main.c: 69:         PIR1bits.RCIF = 0;
  1432     02A6  1283               	bcf	3,5	;RP0=0, select bank0
  1433     02A7  1303               	bcf	3,6	;RP1=0, select bank0
  1434     02A8  128C               	bcf	12,5	;volatile
  1435     02A9                     l2855:
  1436                           
  1437                           ;main.c: 70:     PIE1bits.RCIE = 1;
  1438     02A9  1683               	bsf	3,5	;RP0=1, select bank1
  1439     02AA  1303               	bcf	3,6	;RP1=0, select bank1
  1440     02AB  168C               	bsf	12,5	;volatile
  1441     02AC                     l2857:
  1442                           
  1443                           ;main.c: 71:     INTCONbits.PEIE = 1;
  1444     02AC  170B               	bsf	11,6	;volatile
  1445     02AD                     l2859:
  1446                           
  1447                           ;main.c: 72:     INTCONbits.GIE = 1;
  1448     02AD  178B               	bsf	11,7	;volatile
  1449     02AE                     l2861:
  1450                           
  1451                           ;main.c: 75:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  1452     02AE  300B               	movlw	11
  1453     02AF  1283               	bcf	3,5	;RP0=0, select bank0
  1454     02B0  1303               	bcf	3,6	;RP1=0, select bank0
  1455     02B1  00D4               	movwf	??_main+2
  1456     02B2  3026               	movlw	38
  1457     02B3  00D3               	movwf	??_main+1
  1458     02B4  305D               	movlw	93
  1459     02B5  00D2               	movwf	??_main
  1460     02B6                     u3037:
  1461     02B6  0BD2               	decfsz	??_main,f
  1462     02B7  2AB6               	goto	u3037
  1463     02B8  0BD3               	decfsz	??_main+1,f
  1464     02B9  2AB6               	goto	u3037
  1465     02BA  0BD4               	decfsz	??_main+2,f
  1466     02BB  2AB6               	goto	u3037
  1467     02BC                     l2863:
  1468                           
  1469                           ;main.c: 77:     dht11_config();
  1470     02BC  120A  158A  2260  120A  118A  	fcall	_dht11_config
  1471     02C1                     l2865:
  1472                           
  1473                           ;main.c: 79:     adc_setup(0);
  1474     02C1  3000               	movlw	0
  1475     02C2  120A  158A  23F4  120A  118A  	fcall	_adc_setup
  1476     02C7                     l2867:
  1477                           
  1478                           ;main.c: 80:     adc_channel(0);
  1479     02C7  3000               	movlw	0
  1480     02C8  1283               	bcf	3,5	;RP0=0, select bank0
  1481     02C9  1303               	bcf	3,6	;RP1=0, select bank0
  1482     02CA  00A0               	movwf	adc_channel@channel
  1483     02CB  00A1               	movwf	adc_channel@channel+1
  1484     02CC  120A  118A  2689  120A  118A  	fcall	_adc_channel
  1485     02D1                     l2869:
  1486                           
  1487                           ;main.c: 82:     TRISCbits.TRISC7 = 1;
  1488     02D1  1683               	bsf	3,5	;RP0=1, select bank1
  1489     02D2  1303               	bcf	3,6	;RP1=0, select bank1
  1490     02D3  1787               	bsf	7,7	;volatile
  1491     02D4                     l2871:
  1492                           
  1493                           ;main.c: 83:     TRISCbits.TRISC6 = 0;
  1494     02D4  1307               	bcf	7,6	;volatile
  1495     02D5                     l2873:
  1496                           
  1497                           ;main.c: 84:     PORTC = 0;
  1498     02D5  1283               	bcf	3,5	;RP0=0, select bank0
  1499     02D6  1303               	bcf	3,6	;RP1=0, select bank0
  1500     02D7  0187               	clrf	7	;volatile
  1501     02D8                     l2875:
  1502                           
  1503                           ;main.c: 87:   TRISD = 0x00;
  1504     02D8  1683               	bsf	3,5	;RP0=1, select bank1
  1505     02D9  1303               	bcf	3,6	;RP1=0, select bank1
  1506     02DA  0188               	clrf	8	;volatile
  1507     02DB                     l2877:
  1508                           
  1509                           ;main.c: 88:   PORTD = 0x00;
  1510     02DB  1283               	bcf	3,5	;RP0=0, select bank0
  1511     02DC  1303               	bcf	3,6	;RP1=0, select bank0
  1512     02DD  0188               	clrf	8	;volatile
  1513     02DE                     l2879:
  1514                           
  1515                           ;main.c: 89:   _delay((unsigned long)((500)*(8000000/4000.0)));
  1516     02DE  3006               	movlw	6
  1517     02DF  1283               	bcf	3,5	;RP0=0, select bank0
  1518     02E0  1303               	bcf	3,6	;RP1=0, select bank0
  1519     02E1  00D4               	movwf	??_main+2
  1520     02E2  3013               	movlw	19
  1521     02E3  00D3               	movwf	??_main+1
  1522     02E4  30AD               	movlw	173
  1523     02E5  00D2               	movwf	??_main
  1524     02E6                     u3047:
  1525     02E6  0BD2               	decfsz	??_main,f
  1526     02E7  2AE6               	goto	u3047
  1527     02E8  0BD3               	decfsz	??_main+1,f
  1528     02E9  2AE6               	goto	u3047
  1529     02EA  0BD4               	decfsz	??_main+2,f
  1530     02EB  2AE6               	goto	u3047
  1531     02EC                     l2881:
  1532                           
  1533                           ;main.c: 90:   Lcd_Init();
  1534     02EC  120A  158A  2657  120A  118A  	fcall	_Lcd_Init
  1535     02F1                     l2883:
  1536                           
  1537                           ;main.c: 91:   _delay((unsigned long)((100)*(8000000/4000.0)));
  1538     02F1  3002               	movlw	2
  1539     02F2  1283               	bcf	3,5	;RP0=0, select bank0
  1540     02F3  1303               	bcf	3,6	;RP1=0, select bank0
  1541     02F4  00D4               	movwf	??_main+2
  1542     02F5  3004               	movlw	4
  1543     02F6  00D3               	movwf	??_main+1
  1544     02F7  30B9               	movlw	185
  1545     02F8  00D2               	movwf	??_main
  1546     02F9                     u3057:
  1547     02F9  0BD2               	decfsz	??_main,f
  1548     02FA  2AF9               	goto	u3057
  1549     02FB  0BD3               	decfsz	??_main+1,f
  1550     02FC  2AF9               	goto	u3057
  1551     02FD  0BD4               	decfsz	??_main+2,f
  1552     02FE  2AF9               	goto	u3057
  1553     02FF  2B00               	nop2
  1554     0300                     l2885:
  1555                           
  1556                           ;main.c: 93:   _delay((unsigned long)((3000)*(8000000/4000.0)));
  1557     0300  301F               	movlw	31
  1558     0301  1283               	bcf	3,5	;RP0=0, select bank0
  1559     0302  1303               	bcf	3,6	;RP1=0, select bank0
  1560     0303  00D4               	movwf	??_main+2
  1561     0304  3071               	movlw	113
  1562     0305  00D3               	movwf	??_main+1
  1563     0306  301D               	movlw	29
  1564     0307  00D2               	movwf	??_main
  1565     0308                     u3067:
  1566     0308  0BD2               	decfsz	??_main,f
  1567     0309  2B08               	goto	u3067
  1568     030A  0BD3               	decfsz	??_main+1,f
  1569     030B  2B08               	goto	u3067
  1570     030C  0BD4               	decfsz	??_main+2,f
  1571     030D  2B08               	goto	u3067
  1572     030E  2B0F               	nop2
  1573     030F                     l2887:
  1574                           
  1575                           ;main.c: 95:   Lcd_Clear();
  1576     030F  120A  158A  226F  120A  118A  	fcall	_Lcd_Clear
  1577     0314                     l2889:
  1578                           
  1579                           ;main.c: 96:     Lcd_Set_Cursor(1,1);
  1580     0314  1283               	bcf	3,5	;RP0=0, select bank0
  1581     0315  1303               	bcf	3,6	;RP1=0, select bank0
  1582     0316  01A4               	clrf	Lcd_Set_Cursor@b
  1583     0317  0AA4               	incf	Lcd_Set_Cursor@b,f
  1584     0318  3001               	movlw	1
  1585     0319  120A  158A  2561  120A  118A  	fcall	_Lcd_Set_Cursor
  1586     031E                     l2891:
  1587                           
  1588                           ;main.c: 97:     Lcd_Write_String("BPM:");
  1589     031E  3014               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1590     031F  1283               	bcf	3,5	;RP0=0, select bank0
  1591     0320  1303               	bcf	3,6	;RP1=0, select bank0
  1592     0321  00A5               	movwf	Lcd_Write_String@a
  1593     0322  3080               	movlw	128
  1594     0323  00A6               	movwf	Lcd_Write_String@a+1
  1595     0324  120A  158A  24D5  120A  118A  	fcall	_Lcd_Write_String
  1596     0329                     l2893:
  1597                           
  1598                           ;main.c: 98:     Lcd_Set_Cursor(2,1);
  1599     0329  1283               	bcf	3,5	;RP0=0, select bank0
  1600     032A  1303               	bcf	3,6	;RP1=0, select bank0
  1601     032B  01A4               	clrf	Lcd_Set_Cursor@b
  1602     032C  0AA4               	incf	Lcd_Set_Cursor@b,f
  1603     032D  3002               	movlw	2
  1604     032E  120A  158A  2561  120A  118A  	fcall	_Lcd_Set_Cursor
  1605     0333                     l2895:
  1606                           
  1607                           ;main.c: 99:     Lcd_Write_String("Alcohol:");
  1608     0333  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1609     0334  1283               	bcf	3,5	;RP0=0, select bank0
  1610     0335  1303               	bcf	3,6	;RP1=0, select bank0
  1611     0336  00A5               	movwf	Lcd_Write_String@a
  1612     0337  3080               	movlw	128
  1613     0338  00A6               	movwf	Lcd_Write_String@a+1
  1614     0339  120A  158A  24D5  120A  118A  	fcall	_Lcd_Write_String
  1615     033E                     l2897:
  1616                           
  1617                           ;main.c: 100:     Lcd_Set_Cursor(1,10);
  1618     033E  300A               	movlw	10
  1619     033F  1283               	bcf	3,5	;RP0=0, select bank0
  1620     0340  1303               	bcf	3,6	;RP1=0, select bank0
  1621     0341  00A4               	movwf	Lcd_Set_Cursor@b
  1622     0342  3001               	movlw	1
  1623     0343  120A  158A  2561  120A  118A  	fcall	_Lcd_Set_Cursor
  1624     0348                     l2899:
  1625                           
  1626                           ;main.c: 101:     Lcd_Write_String("T:");
  1627     0348  301D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1628     0349  1283               	bcf	3,5	;RP0=0, select bank0
  1629     034A  1303               	bcf	3,6	;RP1=0, select bank0
  1630     034B  00A5               	movwf	Lcd_Write_String@a
  1631     034C  3080               	movlw	128
  1632     034D  00A6               	movwf	Lcd_Write_String@a+1
  1633     034E  120A  158A  24D5  120A  118A  	fcall	_Lcd_Write_String
  1634     0353                     l2901:
  1635                           
  1636                           ;main.c: 104:   {;main.c: 105:       _delay((unsigned long)((500)*(8000000/4000.0)));
  1637     0353  3006               	movlw	6
  1638     0354  1283               	bcf	3,5	;RP0=0, select bank0
  1639     0355  1303               	bcf	3,6	;RP1=0, select bank0
  1640     0356  00D4               	movwf	??_main+2
  1641     0357  3013               	movlw	19
  1642     0358  00D3               	movwf	??_main+1
  1643     0359  30AD               	movlw	173
  1644     035A  00D2               	movwf	??_main
  1645     035B                     u3077:
  1646     035B  0BD2               	decfsz	??_main,f
  1647     035C  2B5B               	goto	u3077
  1648     035D  0BD3               	decfsz	??_main+1,f
  1649     035E  2B5B               	goto	u3077
  1650     035F  0BD4               	decfsz	??_main+2,f
  1651     0360  2B5B               	goto	u3077
  1652     0361                     l2903:
  1653                           
  1654                           ;main.c: 106:       alcohol = adc_RO(0);
  1655     0361  3000               	movlw	0
  1656     0362  120A  158A  22BB  120A  118A  	fcall	_adc_RO
  1657     0367  1683               	bsf	3,5	;RP0=1, select bank1
  1658     0368  1303               	bcf	3,6	;RP1=0, select bank1
  1659     0369  00C9               	movwf	_alcohol^(0+128)
  1660     036A                     l2905:
  1661                           
  1662                           ;main.c: 108:       char display_alc[10];;main.c: 109:       char display_bpm[10];;main.
      +                          c: 110:       char display_temp[10];;main.c: 113:       dht11_read (&humid, &temp);
  1663     036A  30CA               	movlw	(low (_temp| 0))& (0+255)
  1664     036B  1283               	bcf	3,5	;RP0=0, select bank0
  1665     036C  1303               	bcf	3,6	;RP1=0, select bank0
  1666     036D  00A4               	movwf	dht11_read@ptemp
  1667     036E  30CB               	movlw	(low (_humid| 0))& (0+255)
  1668     036F  120A  118A  2720  120A  118A  	fcall	_dht11_read
  1669     0374                     l2907:
  1670                           
  1671                           ;main.c: 115:       char temperature = round(temp);
  1672     0374  1683               	bsf	3,5	;RP0=1, select bank1
  1673     0375  1303               	bcf	3,6	;RP1=0, select bank1
  1674     0376  084A               	movf	_temp^(0+128),w
  1675     0377  1283               	bcf	3,5	;RP0=0, select bank0
  1676     0378  1303               	bcf	3,6	;RP1=0, select bank0
  1677     0379  00D2               	movwf	??_main
  1678     037A  01D3               	clrf	??_main+1
  1679     037B  01D4               	clrf	??_main+2
  1680     037C  01D5               	clrf	??_main+3
  1681     037D  0855               	movf	??_main+3,w
  1682     037E  00A3               	movwf	___xxtofl@val+3
  1683     037F  0854               	movf	??_main+2,w
  1684     0380  00A2               	movwf	___xxtofl@val+2
  1685     0381  0853               	movf	??_main+1,w
  1686     0382  00A1               	movwf	___xxtofl@val+1
  1687     0383  0852               	movf	??_main,w
  1688     0384  00A0               	movwf	___xxtofl@val
  1689     0385  3000               	movlw	0
  1690     0386  120A  118A  25CF  120A  118A  	fcall	___xxtofl
  1691     038B  1283               	bcf	3,5	;RP0=0, select bank0
  1692     038C  1303               	bcf	3,6	;RP1=0, select bank0
  1693     038D  0823               	movf	?___xxtofl+3,w
  1694     038E  1683               	bsf	3,5	;RP0=1, select bank1
  1695     038F  1303               	bcf	3,6	;RP1=0, select bank1
  1696     0390  00C1               	movwf	(_main$1773+3)^(0+128)
  1697     0391  1283               	bcf	3,5	;RP0=0, select bank0
  1698     0392  1303               	bcf	3,6	;RP1=0, select bank0
  1699     0393  0822               	movf	?___xxtofl+2,w
  1700     0394  1683               	bsf	3,5	;RP0=1, select bank1
  1701     0395  1303               	bcf	3,6	;RP1=0, select bank1
  1702     0396  00C0               	movwf	(_main$1773+2)^(0+128)
  1703     0397  1283               	bcf	3,5	;RP0=0, select bank0
  1704     0398  1303               	bcf	3,6	;RP1=0, select bank0
  1705     0399  0821               	movf	?___xxtofl+1,w
  1706     039A  1683               	bsf	3,5	;RP0=1, select bank1
  1707     039B  1303               	bcf	3,6	;RP1=0, select bank1
  1708     039C  00BF               	movwf	(_main$1773+1)^(0+128)
  1709     039D  1283               	bcf	3,5	;RP0=0, select bank0
  1710     039E  1303               	bcf	3,6	;RP1=0, select bank0
  1711     039F  0820               	movf	?___xxtofl,w
  1712     03A0  1683               	bsf	3,5	;RP0=1, select bank1
  1713     03A1  1303               	bcf	3,6	;RP1=0, select bank1
  1714     03A2  00BE               	movwf	_main$1773^(0+128)
  1715     03A3                     l2909:
  1716                           
  1717                           ;main.c: 115:       char temperature = round(temp);
  1718     03A3  0841               	movf	(_main$1773+3)^(0+128),w
  1719     03A4  1283               	bcf	3,5	;RP0=0, select bank0
  1720     03A5  1303               	bcf	3,6	;RP1=0, select bank0
  1721     03A6  00CD               	movwf	round@x+3
  1722     03A7  1683               	bsf	3,5	;RP0=1, select bank1
  1723     03A8  1303               	bcf	3,6	;RP1=0, select bank1
  1724     03A9  0840               	movf	(_main$1773+2)^(0+128),w
  1725     03AA  1283               	bcf	3,5	;RP0=0, select bank0
  1726     03AB  1303               	bcf	3,6	;RP1=0, select bank0
  1727     03AC  00CC               	movwf	round@x+2
  1728     03AD  1683               	bsf	3,5	;RP0=1, select bank1
  1729     03AE  1303               	bcf	3,6	;RP1=0, select bank1
  1730     03AF  083F               	movf	(_main$1773+1)^(0+128),w
  1731     03B0  1283               	bcf	3,5	;RP0=0, select bank0
  1732     03B1  1303               	bcf	3,6	;RP1=0, select bank0
  1733     03B2  00CB               	movwf	round@x+1
  1734     03B3  1683               	bsf	3,5	;RP0=1, select bank1
  1735     03B4  1303               	bcf	3,6	;RP1=0, select bank1
  1736     03B5  083E               	movf	_main$1773^(0+128),w
  1737     03B6  1283               	bcf	3,5	;RP0=0, select bank0
  1738     03B7  1303               	bcf	3,6	;RP1=0, select bank0
  1739     03B8  00CA               	movwf	round@x
  1740     03B9  120A  158A  26B9  120A  118A  	fcall	_round
  1741     03BE  1283               	bcf	3,5	;RP0=0, select bank0
  1742     03BF  1303               	bcf	3,6	;RP1=0, select bank0
  1743     03C0  084D               	movf	?_round+3,w
  1744     03C1  1683               	bsf	3,5	;RP0=1, select bank1
  1745     03C2  1303               	bcf	3,6	;RP1=0, select bank1
  1746     03C3  00C5               	movwf	(_main$1774+3)^(0+128)
  1747     03C4  1283               	bcf	3,5	;RP0=0, select bank0
  1748     03C5  1303               	bcf	3,6	;RP1=0, select bank0
  1749     03C6  084C               	movf	?_round+2,w
  1750     03C7  1683               	bsf	3,5	;RP0=1, select bank1
  1751     03C8  1303               	bcf	3,6	;RP1=0, select bank1
  1752     03C9  00C4               	movwf	(_main$1774+2)^(0+128)
  1753     03CA  1283               	bcf	3,5	;RP0=0, select bank0
  1754     03CB  1303               	bcf	3,6	;RP1=0, select bank0
  1755     03CC  084B               	movf	?_round+1,w
  1756     03CD  1683               	bsf	3,5	;RP0=1, select bank1
  1757     03CE  1303               	bcf	3,6	;RP1=0, select bank1
  1758     03CF  00C3               	movwf	(_main$1774+1)^(0+128)
  1759     03D0  1283               	bcf	3,5	;RP0=0, select bank0
  1760     03D1  1303               	bcf	3,6	;RP1=0, select bank0
  1761     03D2  084A               	movf	?_round,w
  1762     03D3  1683               	bsf	3,5	;RP0=1, select bank1
  1763     03D4  1303               	bcf	3,6	;RP1=0, select bank1
  1764     03D5  00C2               	movwf	_main$1774^(0+128)
  1765     03D6                     l2911:
  1766                           
  1767                           ;main.c: 115:       char temperature = round(temp);
  1768     03D6  0845               	movf	(_main$1774+3)^(0+128),w
  1769     03D7  1283               	bcf	3,5	;RP0=0, select bank0
  1770     03D8  1303               	bcf	3,6	;RP1=0, select bank0
  1771     03D9  00B1               	movwf	___fltol@f1+3
  1772     03DA  1683               	bsf	3,5	;RP0=1, select bank1
  1773     03DB  1303               	bcf	3,6	;RP1=0, select bank1
  1774     03DC  0844               	movf	(_main$1774+2)^(0+128),w
  1775     03DD  1283               	bcf	3,5	;RP0=0, select bank0
  1776     03DE  1303               	bcf	3,6	;RP1=0, select bank0
  1777     03DF  00B0               	movwf	___fltol@f1+2
  1778     03E0  1683               	bsf	3,5	;RP0=1, select bank1
  1779     03E1  1303               	bcf	3,6	;RP1=0, select bank1
  1780     03E2  0843               	movf	(_main$1774+1)^(0+128),w
  1781     03E3  1283               	bcf	3,5	;RP0=0, select bank0
  1782     03E4  1303               	bcf	3,6	;RP1=0, select bank0
  1783     03E5  00AF               	movwf	___fltol@f1+1
  1784     03E6  1683               	bsf	3,5	;RP0=1, select bank1
  1785     03E7  1303               	bcf	3,6	;RP1=0, select bank1
  1786     03E8  0842               	movf	_main$1774^(0+128),w
  1787     03E9  1283               	bcf	3,5	;RP0=0, select bank0
  1788     03EA  1303               	bcf	3,6	;RP1=0, select bank0
  1789     03EB  00AE               	movwf	___fltol@f1
  1790     03EC  120A  158A  2788  120A  118A  	fcall	___fltol
  1791     03F1  1283               	bcf	3,5	;RP0=0, select bank0
  1792     03F2  1303               	bcf	3,6	;RP1=0, select bank0
  1793     03F3  082E               	movf	?___fltol,w
  1794     03F4  1683               	bsf	3,5	;RP0=1, select bank1
  1795     03F5  1303               	bcf	3,6	;RP1=0, select bank1
  1796     03F6  00C6               	movwf	main@temperature^(0+128)
  1797     03F7                     l2913:
  1798                           
  1799                           ;main.c: 117:       sprintf(display_bpm, "%3u", bpm);
  1800     03F7  3019               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1801     03F8  1283               	bcf	3,5	;RP0=0, select bank0
  1802     03F9  1303               	bcf	3,6	;RP1=0, select bank0
  1803     03FA  00AE               	movwf	sprintf@f
  1804     03FB  1683               	bsf	3,5	;RP0=1, select bank1
  1805     03FC  1303               	bcf	3,6	;RP1=0, select bank1
  1806     03FD  0848               	movf	(_bpm+1)^(0+128),w
  1807     03FE  1283               	bcf	3,5	;RP0=0, select bank0
  1808     03FF  1303               	bcf	3,6	;RP1=0, select bank0
  1809     0400  00B0               	movwf	?_sprintf+2
  1810     0401  1683               	bsf	3,5	;RP0=1, select bank1
  1811     0402  1303               	bcf	3,6	;RP1=0, select bank1
  1812     0403  0847               	movf	_bpm^(0+128),w
  1813     0404  1283               	bcf	3,5	;RP0=0, select bank0
  1814     0405  1303               	bcf	3,6	;RP1=0, select bank0
  1815     0406  00AF               	movwf	?_sprintf+1
  1816     0407  30AA               	movlw	(low (main@display_bpm| 0))& (0+255)
  1817     0408  120A  118A  2482  120A  118A  	fcall	_sprintf
  1818     040D                     l2915:
  1819                           
  1820                           ;main.c: 118:       sprintf(display_alc, "%3u", alcohol);
  1821     040D  3019               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1822     040E  1283               	bcf	3,5	;RP0=0, select bank0
  1823     040F  1303               	bcf	3,6	;RP1=0, select bank0
  1824     0410  00AE               	movwf	sprintf@f
  1825     0411  1683               	bsf	3,5	;RP0=1, select bank1
  1826     0412  1303               	bcf	3,6	;RP1=0, select bank1
  1827     0413  0849               	movf	_alcohol^(0+128),w
  1828     0414  1283               	bcf	3,5	;RP0=0, select bank0
  1829     0415  1303               	bcf	3,6	;RP1=0, select bank0
  1830     0416  00D2               	movwf	??_main
  1831     0417  01D3               	clrf	??_main+1
  1832     0418  0852               	movf	??_main,w
  1833     0419  00AF               	movwf	?_sprintf+1
  1834     041A  0853               	movf	??_main+1,w
  1835     041B  00B0               	movwf	?_sprintf+2
  1836     041C  30A0               	movlw	(low (main@display_alc| 0))& (0+255)
  1837     041D  120A  118A  2482  120A  118A  	fcall	_sprintf
  1838     0422                     l2917:
  1839                           
  1840                           ;main.c: 119:       sprintf(display_temp, "%3u", temperature);
  1841     0422  3019               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1842     0423  1283               	bcf	3,5	;RP0=0, select bank0
  1843     0424  1303               	bcf	3,6	;RP1=0, select bank0
  1844     0425  00AE               	movwf	sprintf@f
  1845     0426  1683               	bsf	3,5	;RP0=1, select bank1
  1846     0427  1303               	bcf	3,6	;RP1=0, select bank1
  1847     0428  0846               	movf	main@temperature^(0+128),w
  1848     0429  1283               	bcf	3,5	;RP0=0, select bank0
  1849     042A  1303               	bcf	3,6	;RP1=0, select bank0
  1850     042B  00D2               	movwf	??_main
  1851     042C  01D3               	clrf	??_main+1
  1852     042D  0852               	movf	??_main,w
  1853     042E  00AF               	movwf	?_sprintf+1
  1854     042F  0853               	movf	??_main+1,w
  1855     0430  00B0               	movwf	?_sprintf+2
  1856     0431  30B4               	movlw	(low (main@display_temp| 0))& (0+255)
  1857     0432  120A  118A  2482  120A  118A  	fcall	_sprintf
  1858     0437                     l2919:
  1859                           
  1860                           ;main.c: 120:       Lcd_Set_Cursor(2,8);
  1861     0437  3008               	movlw	8
  1862     0438  1283               	bcf	3,5	;RP0=0, select bank0
  1863     0439  1303               	bcf	3,6	;RP1=0, select bank0
  1864     043A  00A4               	movwf	Lcd_Set_Cursor@b
  1865     043B  3002               	movlw	2
  1866     043C  120A  158A  2561  120A  118A  	fcall	_Lcd_Set_Cursor
  1867     0441                     l2921:
  1868                           
  1869                           ;main.c: 121:       Lcd_Write_String(display_alc);
  1870     0441  30A0               	movlw	(low (main@display_alc| 0))& (0+255)
  1871     0442  1283               	bcf	3,5	;RP0=0, select bank0
  1872     0443  1303               	bcf	3,6	;RP1=0, select bank0
  1873     0444  00A5               	movwf	Lcd_Write_String@a
  1874     0445  3000               	movlw	0
  1875     0446  00A6               	movwf	Lcd_Write_String@a+1
  1876     0447  120A  158A  24D5  120A  118A  	fcall	_Lcd_Write_String
  1877     044C                     l2923:
  1878                           
  1879                           ;main.c: 122:       Lcd_Set_Cursor(1,5);
  1880     044C  3005               	movlw	5
  1881     044D  1283               	bcf	3,5	;RP0=0, select bank0
  1882     044E  1303               	bcf	3,6	;RP1=0, select bank0
  1883     044F  00A4               	movwf	Lcd_Set_Cursor@b
  1884     0450  3001               	movlw	1
  1885     0451  120A  158A  2561  120A  118A  	fcall	_Lcd_Set_Cursor
  1886     0456                     l2925:
  1887                           
  1888                           ;main.c: 123:       Lcd_Write_String(display_bpm);
  1889     0456  30AA               	movlw	(low (main@display_bpm| 0))& (0+255)
  1890     0457  1283               	bcf	3,5	;RP0=0, select bank0
  1891     0458  1303               	bcf	3,6	;RP1=0, select bank0
  1892     0459  00A5               	movwf	Lcd_Write_String@a
  1893     045A  3000               	movlw	0
  1894     045B  00A6               	movwf	Lcd_Write_String@a+1
  1895     045C  120A  158A  24D5  120A  118A  	fcall	_Lcd_Write_String
  1896     0461                     l2927:
  1897                           
  1898                           ;main.c: 124:        Lcd_Set_Cursor(1,12);
  1899     0461  300C               	movlw	12
  1900     0462  1283               	bcf	3,5	;RP0=0, select bank0
  1901     0463  1303               	bcf	3,6	;RP1=0, select bank0
  1902     0464  00A4               	movwf	Lcd_Set_Cursor@b
  1903     0465  3001               	movlw	1
  1904     0466  120A  158A  2561  120A  118A  	fcall	_Lcd_Set_Cursor
  1905     046B                     l2929:
  1906                           
  1907                           ;main.c: 125:       Lcd_Write_String(display_temp);
  1908     046B  30B4               	movlw	(low (main@display_temp| 0))& (0+255)
  1909     046C  1283               	bcf	3,5	;RP0=0, select bank0
  1910     046D  1303               	bcf	3,6	;RP1=0, select bank0
  1911     046E  00A5               	movwf	Lcd_Write_String@a
  1912     046F  3000               	movlw	0
  1913     0470  00A6               	movwf	Lcd_Write_String@a+1
  1914     0471  120A  158A  24D5  120A  118A  	fcall	_Lcd_Write_String
  1915     0476                     l2931:
  1916                           
  1917                           ;main.c: 129:        UART_write_char(alcohol);
  1918     0476  1683               	bsf	3,5	;RP0=1, select bank1
  1919     0477  1303               	bcf	3,6	;RP1=0, select bank1
  1920     0478  0849               	movf	_alcohol^(0+128),w
  1921     0479  120A  158A  227C  120A  118A  	fcall	_UART_write_char
  1922     047E  2B53               	goto	l2901
  1923     047F  120A  118A  280C   	ljmp	start
  1924     0482                     __end_of_main:
  1925                           
  1926                           	psect	text1
  1927     0482                     __ptext1:	
  1928 ;; *************** function _sprintf *****************
  1929 ;; Defined at:
  1930 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  sp              1    wreg     PTR unsigned char 
  1933 ;;		 -> main@display_temp(10), main@display_alc(10), main@display_bpm(10), 
  1934 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  1935 ;;		 -> STR_6(4), STR_5(4), STR_4(4), 
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;  sp              1   27[BANK0 ] PTR unsigned char 
  1938 ;;		 -> main@display_temp(10), main@display_alc(10), main@display_bpm(10), 
  1939 ;;  tmpval          4    0        struct .
  1940 ;;  width           2   25[BANK0 ] int 
  1941 ;;  val             2   22[BANK0 ] unsigned int 
  1942 ;;  cp              2    0        PTR const unsigned char 
  1943 ;;  len             2    0        unsigned int 
  1944 ;;  c               1   28[BANK0 ] unsigned char 
  1945 ;;  prec            1   24[BANK0 ] char 
  1946 ;;  ap              1   21[BANK0 ] PTR void [1]
  1947 ;;		 -> ?_sprintf(2), 
  1948 ;;  flag            1   20[BANK0 ] unsigned char 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  2   14[BANK0 ] int 
  1951 ;; Registers used:
  1952 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1958 ;;      Params:         0       3       0       0       0
  1959 ;;      Locals:         0       9       0       0       0
  1960 ;;      Temps:          0       3       0       0       0
  1961 ;;      Totals:         0      15       0       0       0
  1962 ;;Total ram usage:       15 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; Hardware stack levels required when called: 3
  1965 ;; This function calls:
  1966 ;;		___lwdiv
  1967 ;;		___lwmod
  1968 ;;		___wmul
  1969 ;;		_isdigit
  1970 ;; This function is called by:
  1971 ;;		_main
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975     0482                     _sprintf:	
  1976                           ;psect for function _sprintf
  1977                           
  1978                           
  1979                           ;incstack = 0
  1980                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1981                           ;sprintf@sp stored from wreg
  1982     0482  1283               	bcf	3,5	;RP0=0, select bank0
  1983     0483  1303               	bcf	3,6	;RP1=0, select bank0
  1984     0484  00BB               	movwf	sprintf@sp
  1985     0485                     l2755:
  1986                           
  1987                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1988     0485  302F               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1989     0486  00B5               	movwf	sprintf@ap
  1990                           
  1991                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1992     0487  2DBA               	goto	l2823
  1993     0488                     l2757:
  1994                           
  1995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1996     0488  3025               	movlw	37
  1997     0489  063C               	xorwf	sprintf@c,w
  1998     048A  1903               	btfsc	3,2
  1999     048B  2C8D               	goto	u2921
  2000     048C  2C8E               	goto	u2920
  2001     048D                     u2921:
  2002     048D  2C98               	goto	l2763
  2003     048E                     u2920:
  2004     048E                     l2759:
  2005                           
  2006                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2007     048E  083B               	movf	sprintf@sp,w
  2008     048F  0084               	movwf	4
  2009     0490  083C               	movf	sprintf@c,w
  2010     0491  1383               	bcf	3,7	;select IRP bank0
  2011     0492  0080               	movwf	0
  2012     0493                     l2761:
  2013     0493  3001               	movlw	1
  2014     0494  00B1               	movwf	??_sprintf
  2015     0495  0831               	movf	??_sprintf,w
  2016     0496  07BB               	addwf	sprintf@sp,f
  2017                           
  2018                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  2019     0497  2DBA               	goto	l2823
  2020     0498                     l2763:
  2021                           
  2022                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2023     0498  01B9               	clrf	sprintf@width
  2024     0499  01BA               	clrf	sprintf@width+1
  2025                           
  2026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2027     049A  01B4               	clrf	sprintf@flag
  2028     049B                     l2765:
  2029                           
  2030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2031     049B  082E               	movf	sprintf@f,w
  2032     049C  0084               	movwf	4
  2033     049D  120A  158A  200A  120A  118A  	fcall	stringdir
  2034     04A2  120A  158A  22A7  120A  118A  	fcall	_isdigit
  2035     04A7  1C03               	btfss	3,0
  2036     04A8  2CAA               	goto	u2931
  2037     04A9  2CAB               	goto	u2930
  2038     04AA                     u2931:
  2039     04AA  2CF1               	goto	l2781
  2040     04AB                     u2930:
  2041     04AB                     l2767:
  2042                           
  2043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2044     04AB  1283               	bcf	3,5	;RP0=0, select bank0
  2045     04AC  1303               	bcf	3,6	;RP1=0, select bank0
  2046     04AD  01B9               	clrf	sprintf@width
  2047     04AE  01BA               	clrf	sprintf@width+1
  2048     04AF                     l2769:
  2049                           
  2050                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2051     04AF  300A               	movlw	10
  2052     04B0  1283               	bcf	3,5	;RP0=0, select bank0
  2053     04B1  1303               	bcf	3,6	;RP1=0, select bank0
  2054     04B2  00A0               	movwf	___wmul@multiplier
  2055     04B3  3000               	movlw	0
  2056     04B4  00A1               	movwf	___wmul@multiplier+1
  2057     04B5  083A               	movf	sprintf@width+1,w
  2058     04B6  00A3               	movwf	___wmul@multiplicand+1
  2059     04B7  0839               	movf	sprintf@width,w
  2060     04B8  00A2               	movwf	___wmul@multiplicand
  2061     04B9  120A  158A  239D  120A  118A  	fcall	___wmul
  2062     04BE  1283               	bcf	3,5	;RP0=0, select bank0
  2063     04BF  1303               	bcf	3,6	;RP1=0, select bank0
  2064     04C0  0821               	movf	?___wmul+1,w
  2065     04C1  00BA               	movwf	sprintf@width+1
  2066     04C2  0820               	movf	?___wmul,w
  2067     04C3  00B9               	movwf	sprintf@width
  2068     04C4                     l2771:
  2069                           
  2070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2071     04C4  082E               	movf	sprintf@f,w
  2072     04C5  0084               	movwf	4
  2073     04C6  120A  158A  200A  120A  118A  	fcall	stringdir
  2074     04CB  3ED0               	addlw	208
  2075     04CC  00B1               	movwf	??_sprintf
  2076     04CD  30FF               	movlw	255
  2077     04CE  1803               	skipnc
  2078     04CF  3000               	movlw	0
  2079     04D0  00B2               	movwf	??_sprintf+1
  2080     04D1  0831               	movf	??_sprintf,w
  2081     04D2  07B9               	addwf	sprintf@width,f
  2082     04D3  1803               	skipnc
  2083     04D4  0ABA               	incf	sprintf@width+1,f
  2084     04D5  0832               	movf	??_sprintf+1,w
  2085     04D6  07BA               	addwf	sprintf@width+1,f
  2086     04D7                     l2773:
  2087     04D7  3001               	movlw	1
  2088     04D8  00B1               	movwf	??_sprintf
  2089     04D9  0831               	movf	??_sprintf,w
  2090     04DA  07AE               	addwf	sprintf@f,f
  2091     04DB                     l2775:
  2092                           
  2093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2094     04DB  082E               	movf	sprintf@f,w
  2095     04DC  0084               	movwf	4
  2096     04DD  120A  158A  200A  120A  118A  	fcall	stringdir
  2097     04E2  120A  158A  22A7  120A  118A  	fcall	_isdigit
  2098     04E7  1803               	btfsc	3,0
  2099     04E8  2CEA               	goto	u2941
  2100     04E9  2CEB               	goto	u2940
  2101     04EA                     u2941:
  2102     04EA  2CAF               	goto	l2769
  2103     04EB                     u2940:
  2104     04EB  2CF1               	goto	l2781
  2105     04EC                     l2777:
  2106                           
  2107                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  2108     04EC  30C0               	movlw	192
  2109     04ED  00B1               	movwf	??_sprintf
  2110     04EE  0831               	movf	??_sprintf,w
  2111     04EF  04B4               	iorwf	sprintf@flag,f
  2112                           
  2113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  2114     04F0  2D0D               	goto	l2783
  2115     04F1                     l2781:
  2116     04F1  3001               	movlw	1
  2117     04F2  1283               	bcf	3,5	;RP0=0, select bank0
  2118     04F3  1303               	bcf	3,6	;RP1=0, select bank0
  2119     04F4  07AE               	addwf	sprintf@f,f
  2120     04F5  30FF               	movlw	-1
  2121     04F6  072E               	addwf	sprintf@f,w
  2122     04F7  0084               	movwf	4
  2123     04F8  120A  158A  200A  120A  118A  	fcall	stringdir
  2124     04FD  00BC               	movwf	sprintf@c
  2125     04FE  00B1               	movwf	??_sprintf
  2126     04FF  01B2               	clrf	??_sprintf+1
  2127                           
  2128                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2129                           ; Switch size 1, requested type "simple"
  2130                           ; Number of cases is 1, Range of values is 0 to 0
  2131                           ; switch strategies available:
  2132                           ; Name         Instructions Cycles
  2133                           ; simple_byte            4     3 (average)
  2134                           ; direct_byte           11     8 (fixed)
  2135                           ; jumptable            260     6 (fixed)
  2136                           ;	Chosen strategy is simple_byte
  2137     0500  0832               	movf	??_sprintf+1,w
  2138     0501  3A00               	xorlw	0	; case 0
  2139     0502  1903               	skipnz
  2140     0503  2D05               	goto	l2989
  2141     0504  2DBA               	goto	l2823
  2142     0505                     l2989:
  2143                           
  2144                           ; Switch size 1, requested type "simple"
  2145                           ; Number of cases is 2, Range of values is 0 to 117
  2146                           ; switch strategies available:
  2147                           ; Name         Instructions Cycles
  2148                           ; simple_byte            7     4 (average)
  2149                           ; jumptable            260     6 (fixed)
  2150                           ;	Chosen strategy is simple_byte
  2151     0505  0831               	movf	??_sprintf,w
  2152     0506  3A00               	xorlw	0	; case 0
  2153     0507  1903               	skipnz
  2154     0508  2DCA               	goto	l2825
  2155     0509  3A75               	xorlw	117	; case 117
  2156     050A  1903               	skipnz
  2157     050B  2CEC               	goto	l2777
  2158     050C  2DBA               	goto	l2823
  2159     050D                     l2783:
  2160                           
  2161                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2162     050D  0835               	movf	sprintf@ap,w
  2163     050E  0084               	movwf	4
  2164     050F  1383               	bcf	3,7	;select IRP bank0
  2165     0510  0800               	movf	0,w
  2166     0511  00B6               	movwf	sprintf@val
  2167     0512  0A84               	incf	4,f
  2168     0513  0800               	movf	0,w
  2169     0514  00B7               	movwf	sprintf@val+1
  2170     0515                     l2785:
  2171     0515  3002               	movlw	2
  2172     0516  00B1               	movwf	??_sprintf
  2173     0517  0831               	movf	??_sprintf,w
  2174     0518  07B5               	addwf	sprintf@ap,f
  2175     0519                     l2787:
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2178     0519  01BC               	clrf	sprintf@c
  2179     051A  0ABC               	incf	sprintf@c,f
  2180     051B                     l2793:
  2181                           
  2182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2183     051B  083C               	movf	sprintf@c,w
  2184     051C  00B1               	movwf	??_sprintf
  2185     051D  0731               	addwf	??_sprintf,w
  2186     051E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2187     051F  0084               	movwf	4
  2188     0520  120A  158A  200A  120A  118A  	fcall	stringdir
  2189     0525  00B2               	movwf	??_sprintf+1
  2190     0526  120A  158A  200A  120A  118A  	fcall	stringdir
  2191     052B  00B3               	movwf	??_sprintf+2
  2192     052C  0833               	movf	??_sprintf+2,w
  2193     052D  0237               	subwf	sprintf@val+1,w
  2194     052E  1D03               	skipz
  2195     052F  2D32               	goto	u2955
  2196     0530  0832               	movf	??_sprintf+1,w
  2197     0531  0236               	subwf	sprintf@val,w
  2198     0532                     u2955:
  2199     0532  1803               	skipnc
  2200     0533  2D35               	goto	u2951
  2201     0534  2D36               	goto	u2950
  2202     0535                     u2951:
  2203     0535  2D37               	goto	l2797
  2204     0536                     u2950:
  2205     0536  2D41               	goto	l2799
  2206     0537                     l2797:
  2207     0537  3001               	movlw	1
  2208     0538  00B1               	movwf	??_sprintf
  2209     0539  0831               	movf	??_sprintf,w
  2210     053A  07BC               	addwf	sprintf@c,f
  2211     053B  3005               	movlw	5
  2212     053C  063C               	xorwf	sprintf@c,w
  2213     053D  1D03               	btfss	3,2
  2214     053E  2D40               	goto	u2961
  2215     053F  2D41               	goto	u2960
  2216     0540                     u2961:
  2217     0540  2D1B               	goto	l2793
  2218     0541                     u2960:
  2219     0541                     l2799:
  2220                           
  2221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  2222     0541  083A               	movf	sprintf@width+1,w
  2223     0542  3A80               	xorlw	128
  2224     0543  3C80               	sublw	128
  2225     0544  1D03               	skipz
  2226     0545  2D48               	goto	u2975
  2227     0546  0839               	movf	sprintf@width,w
  2228     0547  023C               	subwf	sprintf@c,w
  2229     0548                     u2975:
  2230     0548  1803               	skipnc
  2231     0549  2D4B               	goto	u2971
  2232     054A  2D4C               	goto	u2970
  2233     054B                     u2971:
  2234     054B  2D58               	goto	l2803
  2235     054C                     u2970:
  2236     054C                     l2801:
  2237                           
  2238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  2239     054C  1283               	bcf	3,5	;RP0=0, select bank0
  2240     054D  1303               	bcf	3,6	;RP1=0, select bank0
  2241     054E  083C               	movf	sprintf@c,w
  2242     054F  00B1               	movwf	??_sprintf
  2243     0550  01B2               	clrf	??_sprintf+1
  2244     0551  0831               	movf	??_sprintf,w
  2245     0552  02B9               	subwf	sprintf@width,f
  2246     0553  0832               	movf	??_sprintf+1,w
  2247     0554  1C03               	skipc
  2248     0555  03BA               	decf	sprintf@width+1,f
  2249     0556  02BA               	subwf	sprintf@width+1,f
  2250     0557  2D5C               	goto	l2805
  2251     0558                     l2803:
  2252                           
  2253                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  2254     0558  1283               	bcf	3,5	;RP0=0, select bank0
  2255     0559  1303               	bcf	3,6	;RP1=0, select bank0
  2256     055A  01B9               	clrf	sprintf@width
  2257     055B  01BA               	clrf	sprintf@width+1
  2258     055C                     l2805:
  2259                           
  2260                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2261     055C  0839               	movf	sprintf@width,w
  2262     055D  043A               	iorwf	sprintf@width+1,w
  2263     055E  1903               	btfsc	3,2
  2264     055F  2D61               	goto	u2981
  2265     0560  2D62               	goto	u2980
  2266     0561                     u2981:
  2267     0561  2D77               	goto	l2813
  2268     0562                     u2980:
  2269     0562                     l2807:
  2270                           
  2271                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2272     0562  083B               	movf	sprintf@sp,w
  2273     0563  0084               	movwf	4
  2274     0564  3020               	movlw	32
  2275     0565  1383               	bcf	3,7	;select IRP bank0
  2276     0566  0080               	movwf	0
  2277     0567                     l2809:
  2278     0567  3001               	movlw	1
  2279     0568  00B1               	movwf	??_sprintf
  2280     0569  0831               	movf	??_sprintf,w
  2281     056A  07BB               	addwf	sprintf@sp,f
  2282     056B                     l2811:
  2283     056B  30FF               	movlw	255
  2284     056C  07B9               	addwf	sprintf@width,f
  2285     056D  1803               	skipnc
  2286     056E  0ABA               	incf	sprintf@width+1,f
  2287     056F  30FF               	movlw	255
  2288     0570  07BA               	addwf	sprintf@width+1,f
  2289     0571  0839               	movf	sprintf@width,w
  2290     0572  043A               	iorwf	sprintf@width+1,w
  2291     0573  1D03               	btfss	3,2
  2292     0574  2D76               	goto	u2991
  2293     0575  2D77               	goto	u2990
  2294     0576                     u2991:
  2295     0576  2D62               	goto	l2807
  2296     0577                     u2990:
  2297     0577                     l2813:
  2298                           
  2299                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2300     0577  083C               	movf	sprintf@c,w
  2301     0578  00B8               	movwf	sprintf@prec
  2302                           
  2303                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2304     0579  2DB1               	goto	l2821
  2305     057A                     l2815:
  2306                           
  2307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2308     057A  300A               	movlw	10
  2309     057B  00A8               	movwf	___lwmod@divisor
  2310     057C  3000               	movlw	0
  2311     057D  00A9               	movwf	___lwmod@divisor+1
  2312     057E  0838               	movf	sprintf@prec,w
  2313     057F  00B1               	movwf	??_sprintf
  2314     0580  0731               	addwf	??_sprintf,w
  2315     0581  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2316     0582  0084               	movwf	4
  2317     0583  120A  158A  200A  120A  118A  	fcall	stringdir
  2318     0588  00A0               	movwf	___lwdiv@divisor
  2319     0589  120A  158A  200A  120A  118A  	fcall	stringdir
  2320     058E  00A1               	movwf	___lwdiv@divisor+1
  2321     058F  0837               	movf	sprintf@val+1,w
  2322     0590  00A3               	movwf	___lwdiv@dividend+1
  2323     0591  0836               	movf	sprintf@val,w
  2324     0592  00A2               	movwf	___lwdiv@dividend
  2325     0593  120A  158A  251B  120A  118A  	fcall	___lwdiv
  2326     0598  1283               	bcf	3,5	;RP0=0, select bank0
  2327     0599  1303               	bcf	3,6	;RP1=0, select bank0
  2328     059A  0821               	movf	?___lwdiv+1,w
  2329     059B  00AB               	movwf	___lwmod@dividend+1
  2330     059C  0820               	movf	?___lwdiv,w
  2331     059D  00AA               	movwf	___lwmod@dividend
  2332     059E  120A  158A  2499  120A  118A  	fcall	___lwmod
  2333     05A3  1283               	bcf	3,5	;RP0=0, select bank0
  2334     05A4  1303               	bcf	3,6	;RP1=0, select bank0
  2335     05A5  0828               	movf	?___lwmod,w
  2336     05A6  3E30               	addlw	48
  2337     05A7  00BC               	movwf	sprintf@c
  2338     05A8                     l2817:
  2339                           
  2340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2341     05A8  083B               	movf	sprintf@sp,w
  2342     05A9  0084               	movwf	4
  2343     05AA  083C               	movf	sprintf@c,w
  2344     05AB  1383               	bcf	3,7	;select IRP bank0
  2345     05AC  0080               	movwf	0
  2346     05AD                     l2819:
  2347     05AD  3001               	movlw	1
  2348     05AE  00B1               	movwf	??_sprintf
  2349     05AF  0831               	movf	??_sprintf,w
  2350     05B0  07BB               	addwf	sprintf@sp,f
  2351     05B1                     l2821:
  2352                           
  2353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2354     05B1  30FF               	movlw	255
  2355     05B2  00B1               	movwf	??_sprintf
  2356     05B3  0831               	movf	??_sprintf,w
  2357     05B4  07B8               	addwf	sprintf@prec,f
  2358     05B5  0A38               	incf	sprintf@prec,w
  2359     05B6  1D03               	btfss	3,2
  2360     05B7  2DB9               	goto	u3001
  2361     05B8  2DBA               	goto	u3000
  2362     05B9                     u3001:
  2363     05B9  2D7A               	goto	l2815
  2364     05BA                     u3000:
  2365     05BA                     l2823:
  2366                           
  2367                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2368     05BA  3001               	movlw	1
  2369     05BB  07AE               	addwf	sprintf@f,f
  2370     05BC  30FF               	movlw	-1
  2371     05BD  072E               	addwf	sprintf@f,w
  2372     05BE  0084               	movwf	4
  2373     05BF  120A  158A  200A  120A  118A  	fcall	stringdir
  2374     05C4  00BC               	movwf	sprintf@c
  2375     05C5  083C               	movf	sprintf@c,w
  2376     05C6  1D03               	btfss	3,2
  2377     05C7  2DC9               	goto	u3011
  2378     05C8  2DCA               	goto	u3010
  2379     05C9                     u3011:
  2380     05C9  2C88               	goto	l2757
  2381     05CA                     u3010:
  2382     05CA                     l2825:
  2383                           
  2384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2385     05CA  083B               	movf	sprintf@sp,w
  2386     05CB  0084               	movwf	4
  2387     05CC  1383               	bcf	3,7	;select IRP bank0
  2388     05CD  0180               	clrf	0
  2389     05CE                     l476:
  2390     05CE  0008               	return
  2391     05CF                     __end_of_sprintf:
  2392                           
  2393                           	psect	text2
  2394     0AA7                     __ptext2:	
  2395 ;; *************** function _isdigit *****************
  2396 ;; Defined at:
  2397 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;  c               1    wreg     unsigned char 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;  c               1    1[BANK0 ] unsigned char 
  2402 ;; Return value:  Size  Location     Type
  2403 ;;		None               void
  2404 ;; Registers used:
  2405 ;;		wreg, status,2, status,0
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2411 ;;      Params:         0       0       0       0       0
  2412 ;;      Locals:         0       2       0       0       0
  2413 ;;      Temps:          0       0       0       0       0
  2414 ;;      Totals:         0       2       0       0       0
  2415 ;;Total ram usage:        2 bytes
  2416 ;; Hardware stack levels used: 1
  2417 ;; Hardware stack levels required when called: 2
  2418 ;; This function calls:
  2419 ;;		Nothing
  2420 ;; This function is called by:
  2421 ;;		_sprintf
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425     0AA7                     _isdigit:	
  2426                           ;psect for function _isdigit
  2427                           
  2428                           
  2429                           ;incstack = 0
  2430                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2431                           ;isdigit@c stored from wreg
  2432     0AA7  1283               	bcf	3,5	;RP0=0, select bank0
  2433     0AA8  1303               	bcf	3,6	;RP1=0, select bank0
  2434     0AA9  00A1               	movwf	isdigit@c
  2435     0AAA                     l2437:
  2436     0AAA  01A0               	clrf	_isdigit$1515
  2437     0AAB                     l2439:
  2438     0AAB  303A               	movlw	58
  2439     0AAC  0221               	subwf	isdigit@c,w
  2440     0AAD  1803               	skipnc
  2441     0AAE  2AB0               	goto	u2431
  2442     0AAF  2AB1               	goto	u2430
  2443     0AB0                     u2431:
  2444     0AB0  2AB9               	goto	l2445
  2445     0AB1                     u2430:
  2446     0AB1                     l2441:
  2447     0AB1  3030               	movlw	48
  2448     0AB2  0221               	subwf	isdigit@c,w
  2449     0AB3  1C03               	skipc
  2450     0AB4  2AB6               	goto	u2441
  2451     0AB5  2AB7               	goto	u2440
  2452     0AB6                     u2441:
  2453     0AB6  2AB9               	goto	l2445
  2454     0AB7                     u2440:
  2455     0AB7                     l2443:
  2456     0AB7  01A0               	clrf	_isdigit$1515
  2457     0AB8  0AA0               	incf	_isdigit$1515,f
  2458     0AB9                     l2445:
  2459     0AB9  0C20               	rrf	_isdigit$1515,w
  2460     0ABA                     l933:
  2461     0ABA  0008               	return
  2462     0ABB                     __end_of_isdigit:
  2463                           
  2464                           	psect	text3
  2465     0B9D                     __ptext3:	
  2466 ;; *************** function ___wmul *****************
  2467 ;; Defined at:
  2468 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2471 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  product         2    4[BANK0 ] unsigned int 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  2    0[BANK0 ] unsigned int 
  2476 ;; Registers used:
  2477 ;;		wreg, status,2, status,0
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2483 ;;      Params:         0       4       0       0       0
  2484 ;;      Locals:         0       2       0       0       0
  2485 ;;      Temps:          0       0       0       0       0
  2486 ;;      Totals:         0       6       0       0       0
  2487 ;;Total ram usage:        6 bytes
  2488 ;; Hardware stack levels used: 1
  2489 ;; Hardware stack levels required when called: 2
  2490 ;; This function calls:
  2491 ;;		Nothing
  2492 ;; This function is called by:
  2493 ;;		_sprintf
  2494 ;;		_adc_mv
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498     0B9D                     ___wmul:	
  2499                           ;psect for function ___wmul
  2500                           
  2501     0B9D                     l2449:	
  2502                           ;incstack = 0
  2503                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2504                           
  2505     0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  2506     0B9E  1303               	bcf	3,6	;RP1=0, select bank0
  2507     0B9F  01A4               	clrf	___wmul@product
  2508     0BA0  01A5               	clrf	___wmul@product+1
  2509     0BA1                     l2451:
  2510     0BA1  1C20               	btfss	___wmul@multiplier,0
  2511     0BA2  2BA4               	goto	u2451
  2512     0BA3  2BA5               	goto	u2450
  2513     0BA4                     u2451:
  2514     0BA4  2BAB               	goto	l480
  2515     0BA5                     u2450:
  2516     0BA5                     l2453:
  2517     0BA5  0822               	movf	___wmul@multiplicand,w
  2518     0BA6  07A4               	addwf	___wmul@product,f
  2519     0BA7  1803               	skipnc
  2520     0BA8  0AA5               	incf	___wmul@product+1,f
  2521     0BA9  0823               	movf	___wmul@multiplicand+1,w
  2522     0BAA  07A5               	addwf	___wmul@product+1,f
  2523     0BAB                     l480:
  2524     0BAB  3001               	movlw	1
  2525     0BAC                     u2465:
  2526     0BAC  1003               	clrc
  2527     0BAD  0DA2               	rlf	___wmul@multiplicand,f
  2528     0BAE  0DA3               	rlf	___wmul@multiplicand+1,f
  2529     0BAF  3EFF               	addlw	-1
  2530     0BB0  1D03               	skipz
  2531     0BB1  2BAC               	goto	u2465
  2532     0BB2                     l2455:
  2533     0BB2  3001               	movlw	1
  2534     0BB3                     u2475:
  2535     0BB3  1003               	clrc
  2536     0BB4  0CA1               	rrf	___wmul@multiplier+1,f
  2537     0BB5  0CA0               	rrf	___wmul@multiplier,f
  2538     0BB6  3EFF               	addlw	-1
  2539     0BB7  1D03               	skipz
  2540     0BB8  2BB3               	goto	u2475
  2541     0BB9                     l2457:
  2542     0BB9  0820               	movf	___wmul@multiplier,w
  2543     0BBA  0421               	iorwf	___wmul@multiplier+1,w
  2544     0BBB  1D03               	btfss	3,2
  2545     0BBC  2BBE               	goto	u2481
  2546     0BBD  2BBF               	goto	u2480
  2547     0BBE                     u2481:
  2548     0BBE  2BA1               	goto	l2451
  2549     0BBF                     u2480:
  2550     0BBF                     l2459:
  2551     0BBF  0825               	movf	___wmul@product+1,w
  2552     0BC0  00A1               	movwf	?___wmul+1
  2553     0BC1  0824               	movf	___wmul@product,w
  2554     0BC2  00A0               	movwf	?___wmul
  2555     0BC3                     l482:
  2556     0BC3  0008               	return
  2557     0BC4                     __end_of___wmul:
  2558                           
  2559                           	psect	text4
  2560     0C99                     __ptext4:	
  2561 ;; *************** function ___lwmod *****************
  2562 ;; Defined at:
  2563 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;  divisor         2    8[BANK0 ] unsigned int 
  2566 ;;  dividend        2   10[BANK0 ] unsigned int 
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;  counter         1   13[BANK0 ] unsigned char 
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  2    8[BANK0 ] unsigned int 
  2571 ;; Registers used:
  2572 ;;		wreg, status,2, status,0
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2578 ;;      Params:         0       4       0       0       0
  2579 ;;      Locals:         0       1       0       0       0
  2580 ;;      Temps:          0       1       0       0       0
  2581 ;;      Totals:         0       6       0       0       0
  2582 ;;Total ram usage:        6 bytes
  2583 ;; Hardware stack levels used: 1
  2584 ;; Hardware stack levels required when called: 2
  2585 ;; This function calls:
  2586 ;;		Nothing
  2587 ;; This function is called by:
  2588 ;;		_sprintf
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592     0C99                     ___lwmod:	
  2593                           ;psect for function ___lwmod
  2594                           
  2595     0C99                     l2527:	
  2596                           ;incstack = 0
  2597                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2598                           
  2599     0C99  1283               	bcf	3,5	;RP0=0, select bank0
  2600     0C9A  1303               	bcf	3,6	;RP1=0, select bank0
  2601     0C9B  0828               	movf	___lwmod@divisor,w
  2602     0C9C  0429               	iorwf	___lwmod@divisor+1,w
  2603     0C9D  1903               	btfsc	3,2
  2604     0C9E  2CA0               	goto	u2651
  2605     0C9F  2CA1               	goto	u2650
  2606     0CA0                     u2651:
  2607     0CA0  2CD0               	goto	l2545
  2608     0CA1                     u2650:
  2609     0CA1                     l2529:
  2610     0CA1  01AD               	clrf	___lwmod@counter
  2611     0CA2  0AAD               	incf	___lwmod@counter,f
  2612     0CA3  2CAF               	goto	l2535
  2613     0CA4                     l2531:
  2614     0CA4  3001               	movlw	1
  2615     0CA5                     u2665:
  2616     0CA5  1003               	clrc
  2617     0CA6  0DA8               	rlf	___lwmod@divisor,f
  2618     0CA7  0DA9               	rlf	___lwmod@divisor+1,f
  2619     0CA8  3EFF               	addlw	-1
  2620     0CA9  1D03               	skipz
  2621     0CAA  2CA5               	goto	u2665
  2622     0CAB                     l2533:
  2623     0CAB  3001               	movlw	1
  2624     0CAC  00AC               	movwf	??___lwmod
  2625     0CAD  082C               	movf	??___lwmod,w
  2626     0CAE  07AD               	addwf	___lwmod@counter,f
  2627     0CAF                     l2535:
  2628     0CAF  1FA9               	btfss	___lwmod@divisor+1,7
  2629     0CB0  2CB2               	goto	u2671
  2630     0CB1  2CB3               	goto	u2670
  2631     0CB2                     u2671:
  2632     0CB2  2CA4               	goto	l2531
  2633     0CB3                     u2670:
  2634     0CB3                     l2537:
  2635     0CB3  0829               	movf	___lwmod@divisor+1,w
  2636     0CB4  022B               	subwf	___lwmod@dividend+1,w
  2637     0CB5  1D03               	skipz
  2638     0CB6  2CB9               	goto	u2685
  2639     0CB7  0828               	movf	___lwmod@divisor,w
  2640     0CB8  022A               	subwf	___lwmod@dividend,w
  2641     0CB9                     u2685:
  2642     0CB9  1C03               	skipc
  2643     0CBA  2CBC               	goto	u2681
  2644     0CBB  2CBD               	goto	u2680
  2645     0CBC                     u2681:
  2646     0CBC  2CC3               	goto	l2541
  2647     0CBD                     u2680:
  2648     0CBD                     l2539:
  2649     0CBD  0828               	movf	___lwmod@divisor,w
  2650     0CBE  02AA               	subwf	___lwmod@dividend,f
  2651     0CBF  0829               	movf	___lwmod@divisor+1,w
  2652     0CC0  1C03               	skipc
  2653     0CC1  03AB               	decf	___lwmod@dividend+1,f
  2654     0CC2  02AB               	subwf	___lwmod@dividend+1,f
  2655     0CC3                     l2541:
  2656     0CC3  3001               	movlw	1
  2657     0CC4                     u2695:
  2658     0CC4  1003               	clrc
  2659     0CC5  0CA9               	rrf	___lwmod@divisor+1,f
  2660     0CC6  0CA8               	rrf	___lwmod@divisor,f
  2661     0CC7  3EFF               	addlw	-1
  2662     0CC8  1D03               	skipz
  2663     0CC9  2CC4               	goto	u2695
  2664     0CCA                     l2543:
  2665     0CCA  3001               	movlw	1
  2666     0CCB  02AD               	subwf	___lwmod@counter,f
  2667     0CCC  1D03               	btfss	3,2
  2668     0CCD  2CCF               	goto	u2701
  2669     0CCE  2CD0               	goto	u2700
  2670     0CCF                     u2701:
  2671     0CCF  2CB3               	goto	l2537
  2672     0CD0                     u2700:
  2673     0CD0                     l2545:
  2674     0CD0  082B               	movf	___lwmod@dividend+1,w
  2675     0CD1  00A9               	movwf	?___lwmod+1
  2676     0CD2  082A               	movf	___lwmod@dividend,w
  2677     0CD3  00A8               	movwf	?___lwmod
  2678     0CD4                     l762:
  2679     0CD4  0008               	return
  2680     0CD5                     __end_of___lwmod:
  2681                           
  2682                           	psect	text5
  2683     0D1B                     __ptext5:	
  2684 ;; *************** function ___lwdiv *****************
  2685 ;; Defined at:
  2686 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  divisor         2    0[BANK0 ] unsigned int 
  2689 ;;  dividend        2    2[BANK0 ] unsigned int 
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;  quotient        2    5[BANK0 ] unsigned int 
  2692 ;;  counter         1    7[BANK0 ] unsigned char 
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  2    0[BANK0 ] unsigned int 
  2695 ;; Registers used:
  2696 ;;		wreg, status,2, status,0
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2702 ;;      Params:         0       4       0       0       0
  2703 ;;      Locals:         0       3       0       0       0
  2704 ;;      Temps:          0       1       0       0       0
  2705 ;;      Totals:         0       8       0       0       0
  2706 ;;Total ram usage:        8 bytes
  2707 ;; Hardware stack levels used: 1
  2708 ;; Hardware stack levels required when called: 2
  2709 ;; This function calls:
  2710 ;;		Nothing
  2711 ;; This function is called by:
  2712 ;;		_sprintf
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716     0D1B                     ___lwdiv:	
  2717                           ;psect for function ___lwdiv
  2718                           
  2719     0D1B                     l2501:	
  2720                           ;incstack = 0
  2721                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2722                           
  2723     0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  2724     0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  2725     0D1D  01A5               	clrf	___lwdiv@quotient
  2726     0D1E  01A6               	clrf	___lwdiv@quotient+1
  2727     0D1F                     l2503:
  2728     0D1F  0820               	movf	___lwdiv@divisor,w
  2729     0D20  0421               	iorwf	___lwdiv@divisor+1,w
  2730     0D21  1903               	btfsc	3,2
  2731     0D22  2D24               	goto	u2581
  2732     0D23  2D25               	goto	u2580
  2733     0D24                     u2581:
  2734     0D24  2D5C               	goto	l2523
  2735     0D25                     u2580:
  2736     0D25                     l2505:
  2737     0D25  01A7               	clrf	___lwdiv@counter
  2738     0D26  0AA7               	incf	___lwdiv@counter,f
  2739     0D27  2D33               	goto	l2511
  2740     0D28                     l2507:
  2741     0D28  3001               	movlw	1
  2742     0D29                     u2595:
  2743     0D29  1003               	clrc
  2744     0D2A  0DA0               	rlf	___lwdiv@divisor,f
  2745     0D2B  0DA1               	rlf	___lwdiv@divisor+1,f
  2746     0D2C  3EFF               	addlw	-1
  2747     0D2D  1D03               	skipz
  2748     0D2E  2D29               	goto	u2595
  2749     0D2F                     l2509:
  2750     0D2F  3001               	movlw	1
  2751     0D30  00A4               	movwf	??___lwdiv
  2752     0D31  0824               	movf	??___lwdiv,w
  2753     0D32  07A7               	addwf	___lwdiv@counter,f
  2754     0D33                     l2511:
  2755     0D33  1FA1               	btfss	___lwdiv@divisor+1,7
  2756     0D34  2D36               	goto	u2601
  2757     0D35  2D37               	goto	u2600
  2758     0D36                     u2601:
  2759     0D36  2D28               	goto	l2507
  2760     0D37                     u2600:
  2761     0D37                     l2513:
  2762     0D37  3001               	movlw	1
  2763     0D38                     u2615:
  2764     0D38  1003               	clrc
  2765     0D39  0DA5               	rlf	___lwdiv@quotient,f
  2766     0D3A  0DA6               	rlf	___lwdiv@quotient+1,f
  2767     0D3B  3EFF               	addlw	-1
  2768     0D3C  1D03               	skipz
  2769     0D3D  2D38               	goto	u2615
  2770     0D3E  0821               	movf	___lwdiv@divisor+1,w
  2771     0D3F  0223               	subwf	___lwdiv@dividend+1,w
  2772     0D40  1D03               	skipz
  2773     0D41  2D44               	goto	u2625
  2774     0D42  0820               	movf	___lwdiv@divisor,w
  2775     0D43  0222               	subwf	___lwdiv@dividend,w
  2776     0D44                     u2625:
  2777     0D44  1C03               	skipc
  2778     0D45  2D47               	goto	u2621
  2779     0D46  2D48               	goto	u2620
  2780     0D47                     u2621:
  2781     0D47  2D4F               	goto	l2519
  2782     0D48                     u2620:
  2783     0D48                     l2515:
  2784     0D48  0820               	movf	___lwdiv@divisor,w
  2785     0D49  02A2               	subwf	___lwdiv@dividend,f
  2786     0D4A  0821               	movf	___lwdiv@divisor+1,w
  2787     0D4B  1C03               	skipc
  2788     0D4C  03A3               	decf	___lwdiv@dividend+1,f
  2789     0D4D  02A3               	subwf	___lwdiv@dividend+1,f
  2790     0D4E                     l2517:
  2791     0D4E  1425               	bsf	___lwdiv@quotient,0
  2792     0D4F                     l2519:
  2793     0D4F  3001               	movlw	1
  2794     0D50                     u2635:
  2795     0D50  1003               	clrc
  2796     0D51  0CA1               	rrf	___lwdiv@divisor+1,f
  2797     0D52  0CA0               	rrf	___lwdiv@divisor,f
  2798     0D53  3EFF               	addlw	-1
  2799     0D54  1D03               	skipz
  2800     0D55  2D50               	goto	u2635
  2801     0D56                     l2521:
  2802     0D56  3001               	movlw	1
  2803     0D57  02A7               	subwf	___lwdiv@counter,f
  2804     0D58  1D03               	btfss	3,2
  2805     0D59  2D5B               	goto	u2641
  2806     0D5A  2D5C               	goto	u2640
  2807     0D5B                     u2641:
  2808     0D5B  2D37               	goto	l2513
  2809     0D5C                     u2640:
  2810     0D5C                     l2523:
  2811     0D5C  0826               	movf	___lwdiv@quotient+1,w
  2812     0D5D  00A1               	movwf	?___lwdiv+1
  2813     0D5E  0825               	movf	___lwdiv@quotient,w
  2814     0D5F  00A0               	movwf	?___lwdiv
  2815     0D60                     l752:
  2816     0D60  0008               	return
  2817     0D61                     __end_of___lwdiv:
  2818                           
  2819                           	psect	text6
  2820     0EB9                     __ptext6:	
  2821 ;; *************** function _round *****************
  2822 ;; Defined at:
  2823 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\round.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;  x               4   42[BANK0 ] unsigned int 
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;  f               4   46[BANK0 ] unsigned int 
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  4   42[BANK0 ] unsigned int 
  2830 ;; Registers used:
  2831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2837 ;;      Params:         0       4       0       0       0
  2838 ;;      Locals:         0       4       0       0       0
  2839 ;;      Temps:          0       0       0       0       0
  2840 ;;      Totals:         0       8       0       0       0
  2841 ;;Total ram usage:        8 bytes
  2842 ;; Hardware stack levels used: 1
  2843 ;; Hardware stack levels required when called: 5
  2844 ;; This function calls:
  2845 ;;		___fladd
  2846 ;;		___flsub
  2847 ;;		_trunc
  2848 ;; This function is called by:
  2849 ;;		_main
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853     0EB9                     _round:	
  2854                           ;psect for function _round
  2855                           
  2856     0EB9                     l2747:	
  2857                           ;incstack = 0
  2858                           ; Regs used in _round: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2859                           
  2860     0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  2861     0EBA  1303               	bcf	3,6	;RP1=0, select bank0
  2862     0EBB  084D               	movf	round@x+3,w
  2863     0EBC  00BB               	movwf	trunc@x+3
  2864     0EBD  084C               	movf	round@x+2,w
  2865     0EBE  00BA               	movwf	trunc@x+2
  2866     0EBF  084B               	movf	round@x+1,w
  2867     0EC0  00B9               	movwf	trunc@x+1
  2868     0EC1  084A               	movf	round@x,w
  2869     0EC2  00B8               	movwf	trunc@x
  2870     0EC3  120A  158A  25FD  120A  158A  	fcall	_trunc
  2871     0EC8  1283               	bcf	3,5	;RP0=0, select bank0
  2872     0EC9  1303               	bcf	3,6	;RP1=0, select bank0
  2873     0ECA  083B               	movf	?_trunc+3,w
  2874     0ECB  00C5               	movwf	___flsub@a+3
  2875     0ECC  083A               	movf	?_trunc+2,w
  2876     0ECD  00C4               	movwf	___flsub@a+2
  2877     0ECE  0839               	movf	?_trunc+1,w
  2878     0ECF  00C3               	movwf	___flsub@a+1
  2879     0ED0  0838               	movf	?_trunc,w
  2880     0ED1  00C2               	movwf	___flsub@a
  2881     0ED2  084D               	movf	round@x+3,w
  2882     0ED3  00C9               	movwf	___flsub@b+3
  2883     0ED4  084C               	movf	round@x+2,w
  2884     0ED5  00C8               	movwf	___flsub@b+2
  2885     0ED6  084B               	movf	round@x+1,w
  2886     0ED7  00C7               	movwf	___flsub@b+1
  2887     0ED8  084A               	movf	round@x,w
  2888     0ED9  00C6               	movwf	___flsub@b
  2889     0EDA  120A  158A  2379  120A  158A  	fcall	___flsub
  2890     0EDF  1283               	bcf	3,5	;RP0=0, select bank0
  2891     0EE0  1303               	bcf	3,6	;RP1=0, select bank0
  2892     0EE1  0845               	movf	?___flsub+3,w
  2893     0EE2  00D1               	movwf	round@f+3
  2894     0EE3  0844               	movf	?___flsub+2,w
  2895     0EE4  00D0               	movwf	round@f+2
  2896     0EE5  0843               	movf	?___flsub+1,w
  2897     0EE6  00CF               	movwf	round@f+1
  2898     0EE7  0842               	movf	?___flsub,w
  2899     0EE8  00CE               	movwf	round@f
  2900     0EE9                     l2749:
  2901     0EE9  0851               	movf	round@f+3,w
  2902     0EEA  00A3               	movwf	___fladd@b+3
  2903     0EEB  0850               	movf	round@f+2,w
  2904     0EEC  00A2               	movwf	___fladd@b+2
  2905     0EED  084F               	movf	round@f+1,w
  2906     0EEE  00A1               	movwf	___fladd@b+1
  2907     0EEF  084E               	movf	round@f,w
  2908     0EF0  00A0               	movwf	___fladd@b
  2909     0EF1  084D               	movf	round@x+3,w
  2910     0EF2  00A7               	movwf	___fladd@a+3
  2911     0EF3  084C               	movf	round@x+2,w
  2912     0EF4  00A6               	movwf	___fladd@a+2
  2913     0EF5  084B               	movf	round@x+1,w
  2914     0EF6  00A5               	movwf	___fladd@a+1
  2915     0EF7  084A               	movf	round@x,w
  2916     0EF8  00A4               	movwf	___fladd@a
  2917     0EF9  120A  118A  2024  120A  158A  	fcall	___fladd
  2918     0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  2919     0EFF  1303               	bcf	3,6	;RP1=0, select bank0
  2920     0F00  0823               	movf	?___fladd+3,w
  2921     0F01  00CD               	movwf	round@x+3
  2922     0F02  0822               	movf	?___fladd+2,w
  2923     0F03  00CC               	movwf	round@x+2
  2924     0F04  0821               	movf	?___fladd+1,w
  2925     0F05  00CB               	movwf	round@x+1
  2926     0F06  0820               	movf	?___fladd,w
  2927     0F07  00CA               	movwf	round@x
  2928     0F08                     l2751:
  2929     0F08  084D               	movf	round@x+3,w
  2930     0F09  00BB               	movwf	trunc@x+3
  2931     0F0A  084C               	movf	round@x+2,w
  2932     0F0B  00BA               	movwf	trunc@x+2
  2933     0F0C  084B               	movf	round@x+1,w
  2934     0F0D  00B9               	movwf	trunc@x+1
  2935     0F0E  084A               	movf	round@x,w
  2936     0F0F  00B8               	movwf	trunc@x
  2937     0F10  120A  158A  25FD  120A  158A  	fcall	_trunc
  2938     0F15  1283               	bcf	3,5	;RP0=0, select bank0
  2939     0F16  1303               	bcf	3,6	;RP1=0, select bank0
  2940     0F17  083B               	movf	?_trunc+3,w
  2941     0F18  00CD               	movwf	?_round+3
  2942     0F19  083A               	movf	?_trunc+2,w
  2943     0F1A  00CC               	movwf	?_round+2
  2944     0F1B  0839               	movf	?_trunc+1,w
  2945     0F1C  00CB               	movwf	?_round+1
  2946     0F1D  0838               	movf	?_trunc,w
  2947     0F1E  00CA               	movwf	?_round
  2948     0F1F                     l938:
  2949     0F1F  0008               	return
  2950     0F20                     __end_of_round:
  2951                           
  2952                           	psect	text7
  2953     0DFD                     __ptext7:	
  2954 ;; *************** function _trunc *****************
  2955 ;; Defined at:
  2956 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\trunc.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  x               4   24[BANK0 ] unsigned int 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  i               4   28[BANK0 ] unsigned int 
  2961 ;;  expon           2   32[BANK0 ] int 
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  4   24[BANK0 ] int 
  2964 ;; Registers used:
  2965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2971 ;;      Params:         0       4       0       0       0
  2972 ;;      Locals:         0       6       0       0       0
  2973 ;;      Temps:          0       0       0       0       0
  2974 ;;      Totals:         0      10       0       0       0
  2975 ;;Total ram usage:       10 bytes
  2976 ;; Hardware stack levels used: 1
  2977 ;; Hardware stack levels required when called: 4
  2978 ;; This function calls:
  2979 ;;		___fltol
  2980 ;;		___xxtofl
  2981 ;;		_frexp
  2982 ;; This function is called by:
  2983 ;;		_round
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987     0DFD                     _trunc:	
  2988                           ;psect for function _trunc
  2989                           
  2990     0DFD                     l2555:	
  2991                           ;incstack = 0
  2992                           ; Regs used in _trunc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2993                           
  2994     0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  2995     0DFE  1303               	bcf	3,6	;RP1=0, select bank0
  2996     0DFF  083B               	movf	trunc@x+3,w
  2997     0E00  00AF               	movwf	frexp@value+3
  2998     0E01  083A               	movf	trunc@x+2,w
  2999     0E02  00AE               	movwf	frexp@value+2
  3000     0E03  0839               	movf	trunc@x+1,w
  3001     0E04  00AD               	movwf	frexp@value+1
  3002     0E05  0838               	movf	trunc@x,w
  3003     0E06  00AC               	movwf	frexp@value
  3004     0E07  3040               	movlw	(low (trunc@expon| 0))& (0+255)
  3005     0E08  00B0               	movwf	frexp@eptr
  3006     0E09  120A  118A  27AA  120A  158A  	fcall	_frexp
  3007     0E0E                     l2557:
  3008     0E0E  1283               	bcf	3,5	;RP0=0, select bank0
  3009     0E0F  1303               	bcf	3,6	;RP1=0, select bank0
  3010     0E10  1FC1               	btfss	trunc@expon+1,7
  3011     0E11  2E13               	goto	u2711
  3012     0E12  2E14               	goto	u2710
  3013     0E13                     u2711:
  3014     0E13  2E1D               	goto	l2563
  3015     0E14                     u2710:
  3016     0E14                     l2559:
  3017     0E14  3000               	movlw	0
  3018     0E15  00BB               	movwf	?_trunc+3
  3019     0E16  3000               	movlw	0
  3020     0E17  00BA               	movwf	?_trunc+2
  3021     0E18  3000               	movlw	0
  3022     0E19  00B9               	movwf	?_trunc+1
  3023     0E1A  3000               	movlw	0
  3024     0E1B  00B8               	movwf	?_trunc
  3025     0E1C  2E56               	goto	l944
  3026     0E1D                     l2563:
  3027     0E1D  3000               	movlw	0
  3028     0E1E  0241               	subwf	trunc@expon+1,w
  3029     0E1F  301D               	movlw	29
  3030     0E20  1903               	skipnz
  3031     0E21  0240               	subwf	trunc@expon,w
  3032     0E22  1C03               	skipc
  3033     0E23  2E25               	goto	u2721
  3034     0E24  2E26               	goto	u2720
  3035     0E25                     u2721:
  3036     0E25  2E27               	goto	l2567
  3037     0E26                     u2720:
  3038     0E26                     l2565:
  3039     0E26  2E56               	goto	l944
  3040     0E27                     l2567:
  3041     0E27  083B               	movf	trunc@x+3,w
  3042     0E28  00B1               	movwf	___fltol@f1+3
  3043     0E29  083A               	movf	trunc@x+2,w
  3044     0E2A  00B0               	movwf	___fltol@f1+2
  3045     0E2B  0839               	movf	trunc@x+1,w
  3046     0E2C  00AF               	movwf	___fltol@f1+1
  3047     0E2D  0838               	movf	trunc@x,w
  3048     0E2E  00AE               	movwf	___fltol@f1
  3049     0E2F  120A  158A  2788  120A  158A  	fcall	___fltol
  3050     0E34  1283               	bcf	3,5	;RP0=0, select bank0
  3051     0E35  1303               	bcf	3,6	;RP1=0, select bank0
  3052     0E36  0831               	movf	?___fltol+3,w
  3053     0E37  00A3               	movwf	___xxtofl@val+3
  3054     0E38  0830               	movf	?___fltol+2,w
  3055     0E39  00A2               	movwf	___xxtofl@val+2
  3056     0E3A  082F               	movf	?___fltol+1,w
  3057     0E3B  00A1               	movwf	___xxtofl@val+1
  3058     0E3C  082E               	movf	?___fltol,w
  3059     0E3D  00A0               	movwf	___xxtofl@val
  3060     0E3E  3001               	movlw	1
  3061     0E3F  120A  118A  25CF  120A  158A  	fcall	___xxtofl
  3062     0E44  1283               	bcf	3,5	;RP0=0, select bank0
  3063     0E45  1303               	bcf	3,6	;RP1=0, select bank0
  3064     0E46  0823               	movf	?___xxtofl+3,w
  3065     0E47  00BF               	movwf	trunc@i+3
  3066     0E48  0822               	movf	?___xxtofl+2,w
  3067     0E49  00BE               	movwf	trunc@i+2
  3068     0E4A  0821               	movf	?___xxtofl+1,w
  3069     0E4B  00BD               	movwf	trunc@i+1
  3070     0E4C  0820               	movf	?___xxtofl,w
  3071     0E4D  00BC               	movwf	trunc@i
  3072     0E4E                     l2569:
  3073     0E4E  083F               	movf	trunc@i+3,w
  3074     0E4F  00BB               	movwf	?_trunc+3
  3075     0E50  083E               	movf	trunc@i+2,w
  3076     0E51  00BA               	movwf	?_trunc+2
  3077     0E52  083D               	movf	trunc@i+1,w
  3078     0E53  00B9               	movwf	?_trunc+1
  3079     0E54  083C               	movf	trunc@i,w
  3080     0E55  00B8               	movwf	?_trunc
  3081     0E56                     l944:
  3082     0E56  0008               	return
  3083     0E57                     __end_of_trunc:
  3084                           
  3085                           	psect	text8
  3086     07AA                     __ptext8:	
  3087 ;; *************** function _frexp *****************
  3088 ;; Defined at:
  3089 ;;		line 254 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\frexp.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  value           4   12[BANK0 ] int 
  3092 ;;  eptr            1   16[BANK0 ] PTR int 
  3093 ;;		 -> trunc@expon(2), 
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;		None
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  4   12[BANK0 ] PTR int 
  3098 ;; Registers used:
  3099 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3105 ;;      Params:         0       5       0       0       0
  3106 ;;      Locals:         0       0       0       0       0
  3107 ;;      Temps:          0       2       0       0       0
  3108 ;;      Totals:         0       7       0       0       0
  3109 ;;Total ram usage:        7 bytes
  3110 ;; Hardware stack levels used: 1
  3111 ;; Hardware stack levels required when called: 3
  3112 ;; This function calls:
  3113 ;;		___fleq
  3114 ;; This function is called by:
  3115 ;;		_trunc
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119     07AA                     _frexp:	
  3120                           ;psect for function _frexp
  3121                           
  3122     07AA                     l2349:	
  3123                           ;incstack = 0
  3124                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3125                           
  3126     07AA  1283               	bcf	3,5	;RP0=0, select bank0
  3127     07AB  1303               	bcf	3,6	;RP1=0, select bank0
  3128     07AC  082F               	movf	frexp@value+3,w
  3129     07AD  00A3               	movwf	___fleq@ff1+3
  3130     07AE  082E               	movf	frexp@value+2,w
  3131     07AF  00A2               	movwf	___fleq@ff1+2
  3132     07B0  082D               	movf	frexp@value+1,w
  3133     07B1  00A1               	movwf	___fleq@ff1+1
  3134     07B2  082C               	movf	frexp@value,w
  3135     07B3  00A0               	movwf	___fleq@ff1
  3136     07B4  3000               	movlw	0
  3137     07B5  00A7               	movwf	___fleq@ff2+3
  3138     07B6  3000               	movlw	0
  3139     07B7  00A6               	movwf	___fleq@ff2+2
  3140     07B8  3000               	movlw	0
  3141     07B9  00A5               	movwf	___fleq@ff2+1
  3142     07BA  3000               	movlw	0
  3143     07BB  00A4               	movwf	___fleq@ff2
  3144     07BC  120A  158A  25AD  120A  118A  	fcall	___fleq
  3145     07C1  1C03               	btfss	3,0
  3146     07C2  2FC4               	goto	u2351
  3147     07C3  2FC5               	goto	u2350
  3148     07C4                     u2351:
  3149     07C4  2FCE               	goto	l2355
  3150     07C5                     u2350:
  3151     07C5                     l2351:
  3152     07C5  1283               	bcf	3,5	;RP0=0, select bank0
  3153     07C6  1303               	bcf	3,6	;RP1=0, select bank0
  3154     07C7  0830               	movf	frexp@eptr,w
  3155     07C8  0084               	movwf	4
  3156     07C9  1383               	bcf	3,7	;select IRP bank0
  3157     07CA  0180               	clrf	0
  3158     07CB  0A84               	incf	4,f
  3159     07CC  0180               	clrf	0
  3160     07CD  2FFD               	goto	l951
  3161     07CE                     l2355:
  3162     07CE  1283               	bcf	3,5	;RP0=0, select bank0
  3163     07CF  1303               	bcf	3,6	;RP1=0, select bank0
  3164     07D0  082F               	movf	frexp@value+3,w
  3165     07D1  397F               	andlw	127
  3166     07D2  00B1               	movwf	??_frexp
  3167     07D3  01B2               	clrf	??_frexp+1
  3168     07D4  1003               	clrc
  3169     07D5  0DB1               	rlf	??_frexp,f
  3170     07D6  0DB2               	rlf	??_frexp+1,f
  3171     07D7  0830               	movf	frexp@eptr,w
  3172     07D8  0084               	movwf	4
  3173     07D9  0831               	movf	??_frexp,w
  3174     07DA  1383               	bcf	3,7	;select IRP bank0
  3175     07DB  0080               	movwf	0
  3176     07DC  0A84               	incf	4,f
  3177     07DD  0832               	movf	??_frexp+1,w
  3178     07DE  0080               	movwf	0
  3179     07DF  0D2E               	rlf	frexp@value+2,w
  3180     07E0  0D2E               	rlf	frexp@value+2,w
  3181     07E1  3901               	andlw	1
  3182     07E2  00B1               	movwf	??_frexp
  3183     07E3  01B2               	clrf	??_frexp+1
  3184     07E4  0830               	movf	frexp@eptr,w
  3185     07E5  0084               	movwf	4
  3186     07E6  0831               	movf	??_frexp,w
  3187     07E7  0480               	iorwf	0,f
  3188     07E8  0A84               	incf	4,f
  3189     07E9  0832               	movf	??_frexp+1,w
  3190     07EA  0480               	iorwf	0,f
  3191     07EB                     l2357:
  3192     07EB  0830               	movf	frexp@eptr,w
  3193     07EC  0084               	movwf	4
  3194     07ED  3082               	movlw	130
  3195     07EE  0780               	addwf	0,f
  3196     07EF  0F84               	incfsz	4,f
  3197     07F0  0800               	movf	0,w
  3198     07F1  1803               	skipnc
  3199     07F2  0A00               	incf	0,w
  3200     07F3  00FF               	movwf	btemp+1
  3201     07F4  30FF               	movlw	255
  3202     07F5  077F               	addwf	btemp+1,w
  3203     07F6  0080               	movwf	0
  3204     07F7  0384               	decf	4,f
  3205     07F8                     l2359:
  3206     07F8  082F               	movf	frexp@value+3,w
  3207     07F9  3980               	andlw	-128
  3208     07FA  383F               	iorlw	63
  3209     07FB  00AF               	movwf	frexp@value+3
  3210     07FC                     l2361:
  3211     07FC  13AE               	bcf	frexp@value+2,7
  3212     07FD                     l951:
  3213     07FD  0008               	return
  3214     07FE                     __end_of_frexp:
  3215                           
  3216                           	psect	text9
  3217     0DAD                     __ptext9:	
  3218 ;; *************** function ___fleq *****************
  3219 ;; Defined at:
  3220 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fleq.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  ff1             4    0[BANK0 ] PTR int 
  3223 ;;  ff2             4    4[BANK0 ] PTR int 
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;		None
  3226 ;; Return value:  Size  Location     Type
  3227 ;;		None               void
  3228 ;; Registers used:
  3229 ;;		wreg, status,2, status,0
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3235 ;;      Params:         0       8       0       0       0
  3236 ;;      Locals:         0       0       0       0       0
  3237 ;;      Temps:          0       4       0       0       0
  3238 ;;      Totals:         0      12       0       0       0
  3239 ;;Total ram usage:       12 bytes
  3240 ;; Hardware stack levels used: 1
  3241 ;; Hardware stack levels required when called: 2
  3242 ;; This function calls:
  3243 ;;		Nothing
  3244 ;; This function is called by:
  3245 ;;		_frexp
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249     0DAD                     ___fleq:	
  3250                           ;psect for function ___fleq
  3251                           
  3252     0DAD                     l2053:	
  3253                           ;incstack = 0
  3254                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  3255                           
  3256     0DAD  3000               	movlw	0
  3257     0DAE  1283               	bcf	3,5	;RP0=0, select bank0
  3258     0DAF  1303               	bcf	3,6	;RP1=0, select bank0
  3259     0DB0  0520               	andwf	___fleq@ff1,w
  3260     0DB1  00A8               	movwf	??___fleq
  3261     0DB2  3000               	movlw	0
  3262     0DB3  0521               	andwf	___fleq@ff1+1,w
  3263     0DB4  00A9               	movwf	??___fleq+1
  3264     0DB5  3080               	movlw	128
  3265     0DB6  0522               	andwf	___fleq@ff1+2,w
  3266     0DB7  00AA               	movwf	??___fleq+2
  3267     0DB8  307F               	movlw	127
  3268     0DB9  0523               	andwf	___fleq@ff1+3,w
  3269     0DBA  00AB               	movwf	??___fleq+3
  3270     0DBB  082B               	movf	??___fleq+3,w
  3271     0DBC  042A               	iorwf	??___fleq+2,w
  3272     0DBD  0429               	iorwf	??___fleq+1,w
  3273     0DBE  0428               	iorwf	??___fleq,w
  3274     0DBF  1D03               	skipz
  3275     0DC0  2DC2               	goto	u1581
  3276     0DC1  2DC3               	goto	u1580
  3277     0DC2                     u1581:
  3278     0DC2  2DCB               	goto	l649
  3279     0DC3                     u1580:
  3280     0DC3                     l2055:
  3281     0DC3  3000               	movlw	0
  3282     0DC4  00A3               	movwf	___fleq@ff1+3
  3283     0DC5  3000               	movlw	0
  3284     0DC6  00A2               	movwf	___fleq@ff1+2
  3285     0DC7  3000               	movlw	0
  3286     0DC8  00A1               	movwf	___fleq@ff1+1
  3287     0DC9  3000               	movlw	0
  3288     0DCA  00A0               	movwf	___fleq@ff1
  3289     0DCB                     l649:
  3290     0DCB  3000               	movlw	0
  3291     0DCC  0524               	andwf	___fleq@ff2,w
  3292     0DCD  00A8               	movwf	??___fleq
  3293     0DCE  3000               	movlw	0
  3294     0DCF  0525               	andwf	___fleq@ff2+1,w
  3295     0DD0  00A9               	movwf	??___fleq+1
  3296     0DD1  3080               	movlw	128
  3297     0DD2  0526               	andwf	___fleq@ff2+2,w
  3298     0DD3  00AA               	movwf	??___fleq+2
  3299     0DD4  307F               	movlw	127
  3300     0DD5  0527               	andwf	___fleq@ff2+3,w
  3301     0DD6  00AB               	movwf	??___fleq+3
  3302     0DD7  082B               	movf	??___fleq+3,w
  3303     0DD8  042A               	iorwf	??___fleq+2,w
  3304     0DD9  0429               	iorwf	??___fleq+1,w
  3305     0DDA  0428               	iorwf	??___fleq,w
  3306     0DDB  1D03               	skipz
  3307     0DDC  2DDE               	goto	u1591
  3308     0DDD  2DDF               	goto	u1590
  3309     0DDE                     u1591:
  3310     0DDE  2DE7               	goto	l650
  3311     0DDF                     u1590:
  3312     0DDF                     l2057:
  3313     0DDF  3000               	movlw	0
  3314     0DE0  00A7               	movwf	___fleq@ff2+3
  3315     0DE1  3000               	movlw	0
  3316     0DE2  00A6               	movwf	___fleq@ff2+2
  3317     0DE3  3000               	movlw	0
  3318     0DE4  00A5               	movwf	___fleq@ff2+1
  3319     0DE5  3000               	movlw	0
  3320     0DE6  00A4               	movwf	___fleq@ff2
  3321     0DE7                     l650:
  3322     0DE7  0827               	movf	___fleq@ff2+3,w
  3323     0DE8  0623               	xorwf	___fleq@ff1+3,w
  3324     0DE9  1D03               	skipz
  3325     0DEA  2DF5               	goto	u1605
  3326     0DEB  0826               	movf	___fleq@ff2+2,w
  3327     0DEC  0622               	xorwf	___fleq@ff1+2,w
  3328     0DED  1D03               	skipz
  3329     0DEE  2DF5               	goto	u1605
  3330     0DEF  0825               	movf	___fleq@ff2+1,w
  3331     0DF0  0621               	xorwf	___fleq@ff1+1,w
  3332     0DF1  1D03               	skipz
  3333     0DF2  2DF5               	goto	u1605
  3334     0DF3  0824               	movf	___fleq@ff2,w
  3335     0DF4  0620               	xorwf	___fleq@ff1,w
  3336     0DF5                     u1605:
  3337     0DF5  1903               	skipnz
  3338     0DF6  2DF8               	goto	u1601
  3339     0DF7  2DF9               	goto	u1600
  3340     0DF8                     u1601:
  3341     0DF8  2DFB               	goto	l2061
  3342     0DF9                     u1600:
  3343     0DF9                     l2059:
  3344     0DF9  1003               	clrc
  3345     0DFA  2DFC               	goto	l651
  3346     0DFB                     l2061:
  3347     0DFB  1403               	setc
  3348     0DFC                     l651:
  3349     0DFC  0008               	return
  3350     0DFD                     __end_of___fleq:
  3351                           
  3352                           	psect	text10
  3353     05CF                     __ptext10:	
  3354 ;; *************** function ___xxtofl *****************
  3355 ;; Defined at:
  3356 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;  sign            1    wreg     unsigned char 
  3359 ;;  val             4    0[BANK0 ] long 
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;  sign            1    8[BANK0 ] unsigned char 
  3362 ;;  arg             4   10[BANK0 ] unsigned long 
  3363 ;;  exp             1    9[BANK0 ] unsigned char 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  4    0[BANK0 ] unsigned char 
  3366 ;; Registers used:
  3367 ;;		wreg, status,2, status,0
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3373 ;;      Params:         0       4       0       0       0
  3374 ;;      Locals:         0       6       0       0       0
  3375 ;;      Temps:          0       4       0       0       0
  3376 ;;      Totals:         0      14       0       0       0
  3377 ;;Total ram usage:       14 bytes
  3378 ;; Hardware stack levels used: 1
  3379 ;; Hardware stack levels required when called: 2
  3380 ;; This function calls:
  3381 ;;		Nothing
  3382 ;; This function is called by:
  3383 ;;		_main
  3384 ;;		_trunc
  3385 ;;		_adc_volt
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389     05CF                     ___xxtofl:	
  3390                           ;psect for function ___xxtofl
  3391                           
  3392                           
  3393                           ;incstack = 0
  3394                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3395                           ;___xxtofl@sign stored from wreg
  3396     05CF  1283               	bcf	3,5	;RP0=0, select bank0
  3397     05D0  1303               	bcf	3,6	;RP1=0, select bank0
  3398     05D1  00A8               	movwf	___xxtofl@sign
  3399     05D2                     l2305:
  3400     05D2  0828               	movf	___xxtofl@sign,w
  3401     05D3  1903               	btfsc	3,2
  3402     05D4  2DD6               	goto	u2211
  3403     05D5  2DD7               	goto	u2210
  3404     05D6                     u2211:
  3405     05D6  2DEB               	goto	l2311
  3406     05D7                     u2210:
  3407     05D7                     l2307:
  3408     05D7  1FA3               	btfss	___xxtofl@val+3,7
  3409     05D8  2DDA               	goto	u2221
  3410     05D9  2DDB               	goto	u2220
  3411     05DA                     u2221:
  3412     05DA  2DEB               	goto	l2311
  3413     05DB                     u2220:
  3414     05DB                     l2309:
  3415     05DB  0920               	comf	___xxtofl@val,w
  3416     05DC  00AA               	movwf	___xxtofl@arg
  3417     05DD  0921               	comf	___xxtofl@val+1,w
  3418     05DE  00AB               	movwf	___xxtofl@arg+1
  3419     05DF  0922               	comf	___xxtofl@val+2,w
  3420     05E0  00AC               	movwf	___xxtofl@arg+2
  3421     05E1  0923               	comf	___xxtofl@val+3,w
  3422     05E2  00AD               	movwf	___xxtofl@arg+3
  3423     05E3  0AAA               	incf	___xxtofl@arg,f
  3424     05E4  1903               	skipnz
  3425     05E5  0AAB               	incf	___xxtofl@arg+1,f
  3426     05E6  1903               	skipnz
  3427     05E7  0AAC               	incf	___xxtofl@arg+2,f
  3428     05E8  1903               	skipnz
  3429     05E9  0AAD               	incf	___xxtofl@arg+3,f
  3430     05EA  2DF3               	goto	l913
  3431     05EB                     l2311:
  3432     05EB  0823               	movf	___xxtofl@val+3,w
  3433     05EC  00AD               	movwf	___xxtofl@arg+3
  3434     05ED  0822               	movf	___xxtofl@val+2,w
  3435     05EE  00AC               	movwf	___xxtofl@arg+2
  3436     05EF  0821               	movf	___xxtofl@val+1,w
  3437     05F0  00AB               	movwf	___xxtofl@arg+1
  3438     05F1  0820               	movf	___xxtofl@val,w
  3439     05F2  00AA               	movwf	___xxtofl@arg
  3440     05F3                     l913:
  3441     05F3  0823               	movf	___xxtofl@val+3,w
  3442     05F4  0422               	iorwf	___xxtofl@val+2,w
  3443     05F5  0421               	iorwf	___xxtofl@val+1,w
  3444     05F6  0420               	iorwf	___xxtofl@val,w
  3445     05F7  1D03               	skipz
  3446     05F8  2DFA               	goto	u2231
  3447     05F9  2DFB               	goto	u2230
  3448     05FA                     u2231:
  3449     05FA  2E04               	goto	l2317
  3450     05FB                     u2230:
  3451     05FB                     l2313:
  3452     05FB  3000               	movlw	0
  3453     05FC  00A3               	movwf	?___xxtofl+3
  3454     05FD  3000               	movlw	0
  3455     05FE  00A2               	movwf	?___xxtofl+2
  3456     05FF  3000               	movlw	0
  3457     0600  00A1               	movwf	?___xxtofl+1
  3458     0601  3000               	movlw	0
  3459     0602  00A0               	movwf	?___xxtofl
  3460     0603  2E88               	goto	l915
  3461     0604                     l2317:
  3462     0604  3096               	movlw	150
  3463     0605  00A9               	movwf	___xxtofl@exp
  3464     0606  2E14               	goto	l2321
  3465     0607                     l2319:
  3466     0607  3001               	movlw	1
  3467     0608  00A4               	movwf	??___xxtofl
  3468     0609  0824               	movf	??___xxtofl,w
  3469     060A  07A9               	addwf	___xxtofl@exp,f
  3470     060B  3001               	movlw	1
  3471     060C                     u2245:
  3472     060C  1003               	clrc
  3473     060D  0CAD               	rrf	___xxtofl@arg+3,f
  3474     060E  0CAC               	rrf	___xxtofl@arg+2,f
  3475     060F  0CAB               	rrf	___xxtofl@arg+1,f
  3476     0610  0CAA               	rrf	___xxtofl@arg,f
  3477     0611  3EFF               	addlw	-1
  3478     0612  1D03               	skipz
  3479     0613  2E0C               	goto	u2245
  3480     0614                     l2321:
  3481     0614  30FE               	movlw	254
  3482     0615  052D               	andwf	___xxtofl@arg+3,w
  3483     0616  1D03               	btfss	3,2
  3484     0617  2E19               	goto	u2251
  3485     0618  2E1A               	goto	u2250
  3486     0619                     u2251:
  3487     0619  2E07               	goto	l2319
  3488     061A                     u2250:
  3489     061A  2E36               	goto	l919
  3490     061B                     l2323:
  3491     061B  3001               	movlw	1
  3492     061C  00A4               	movwf	??___xxtofl
  3493     061D  0824               	movf	??___xxtofl,w
  3494     061E  07A9               	addwf	___xxtofl@exp,f
  3495     061F                     l2325:
  3496     061F  3001               	movlw	1
  3497     0620  07AA               	addwf	___xxtofl@arg,f
  3498     0621  3000               	movlw	0
  3499     0622  1803               	skipnc
  3500     0623  3001               	movlw	1
  3501     0624  07AB               	addwf	___xxtofl@arg+1,f
  3502     0625  3000               	movlw	0
  3503     0626  1803               	skipnc
  3504     0627  3001               	movlw	1
  3505     0628  07AC               	addwf	___xxtofl@arg+2,f
  3506     0629  3000               	movlw	0
  3507     062A  1803               	skipnc
  3508     062B  3001               	movlw	1
  3509     062C  07AD               	addwf	___xxtofl@arg+3,f
  3510     062D                     l2327:
  3511     062D  3001               	movlw	1
  3512     062E                     u2265:
  3513     062E  1003               	clrc
  3514     062F  0CAD               	rrf	___xxtofl@arg+3,f
  3515     0630  0CAC               	rrf	___xxtofl@arg+2,f
  3516     0631  0CAB               	rrf	___xxtofl@arg+1,f
  3517     0632  0CAA               	rrf	___xxtofl@arg,f
  3518     0633  3EFF               	addlw	-1
  3519     0634  1D03               	skipz
  3520     0635  2E2E               	goto	u2265
  3521     0636                     l919:
  3522     0636  30FF               	movlw	255
  3523     0637  052D               	andwf	___xxtofl@arg+3,w
  3524     0638  1D03               	btfss	3,2
  3525     0639  2E3B               	goto	u2271
  3526     063A  2E3C               	goto	u2270
  3527     063B                     u2271:
  3528     063B  2E1B               	goto	l2323
  3529     063C                     u2270:
  3530     063C  2E48               	goto	l2331
  3531     063D                     l2329:
  3532     063D  3001               	movlw	1
  3533     063E  02A9               	subwf	___xxtofl@exp,f
  3534     063F  3001               	movlw	1
  3535     0640  00A4               	movwf	??___xxtofl
  3536     0641                     u2285:
  3537     0641  1003               	clrc
  3538     0642  0DAA               	rlf	___xxtofl@arg,f
  3539     0643  0DAB               	rlf	___xxtofl@arg+1,f
  3540     0644  0DAC               	rlf	___xxtofl@arg+2,f
  3541     0645  0DAD               	rlf	___xxtofl@arg+3,f
  3542     0646  0BA4               	decfsz	??___xxtofl,f
  3543     0647  2E41               	goto	u2285
  3544     0648                     l2331:
  3545     0648  1BAC               	btfsc	___xxtofl@arg+2,7
  3546     0649  2E4B               	goto	u2291
  3547     064A  2E4C               	goto	u2290
  3548     064B                     u2291:
  3549     064B  2E52               	goto	l926
  3550     064C                     u2290:
  3551     064C                     l2333:
  3552     064C  3002               	movlw	2
  3553     064D  0229               	subwf	___xxtofl@exp,w
  3554     064E  1803               	skipnc
  3555     064F  2E51               	goto	u2301
  3556     0650  2E52               	goto	u2300
  3557     0651                     u2301:
  3558     0651  2E3D               	goto	l2329
  3559     0652                     u2300:
  3560     0652                     l926:
  3561     0652  1829               	btfsc	___xxtofl@exp,0
  3562     0653  2E55               	goto	u2311
  3563     0654  2E56               	goto	u2310
  3564     0655                     u2311:
  3565     0655  2E5E               	goto	l927
  3566     0656                     u2310:
  3567     0656                     l2335:
  3568     0656  30FF               	movlw	255
  3569     0657  05AA               	andwf	___xxtofl@arg,f
  3570     0658  30FF               	movlw	255
  3571     0659  05AB               	andwf	___xxtofl@arg+1,f
  3572     065A  307F               	movlw	127
  3573     065B  05AC               	andwf	___xxtofl@arg+2,f
  3574     065C  30FF               	movlw	255
  3575     065D  05AD               	andwf	___xxtofl@arg+3,f
  3576     065E                     l927:
  3577     065E  1003               	clrc
  3578     065F  0CA9               	rrf	___xxtofl@exp,f
  3579     0660                     l2337:
  3580     0660  0829               	movf	___xxtofl@exp,w
  3581     0661  00A4               	movwf	??___xxtofl
  3582     0662  01A5               	clrf	??___xxtofl+1
  3583     0663  01A6               	clrf	??___xxtofl+2
  3584     0664  01A7               	clrf	??___xxtofl+3
  3585     0665  3018               	movlw	24
  3586     0666                     u2325:
  3587     0666  1003               	clrc
  3588     0667  0DA4               	rlf	??___xxtofl,f
  3589     0668  0DA5               	rlf	??___xxtofl+1,f
  3590     0669  0DA6               	rlf	??___xxtofl+2,f
  3591     066A  0DA7               	rlf	??___xxtofl+3,f
  3592     066B                     u2320:
  3593     066B  3EFF               	addlw	-1
  3594     066C  1D03               	skipz
  3595     066D  2E66               	goto	u2325
  3596     066E  0824               	movf	??___xxtofl,w
  3597     066F  04AA               	iorwf	___xxtofl@arg,f
  3598     0670  0825               	movf	??___xxtofl+1,w
  3599     0671  04AB               	iorwf	___xxtofl@arg+1,f
  3600     0672  0826               	movf	??___xxtofl+2,w
  3601     0673  04AC               	iorwf	___xxtofl@arg+2,f
  3602     0674  0827               	movf	??___xxtofl+3,w
  3603     0675  04AD               	iorwf	___xxtofl@arg+3,f
  3604     0676                     l2339:
  3605     0676  0828               	movf	___xxtofl@sign,w
  3606     0677  1903               	btfsc	3,2
  3607     0678  2E7A               	goto	u2331
  3608     0679  2E7B               	goto	u2330
  3609     067A                     u2331:
  3610     067A  2E80               	goto	l2345
  3611     067B                     u2330:
  3612     067B                     l2341:
  3613     067B  1FA3               	btfss	___xxtofl@val+3,7
  3614     067C  2E7E               	goto	u2341
  3615     067D  2E7F               	goto	u2340
  3616     067E                     u2341:
  3617     067E  2E80               	goto	l2345
  3618     067F                     u2340:
  3619     067F                     l2343:
  3620     067F  17AD               	bsf	___xxtofl@arg+3,7
  3621     0680                     l2345:
  3622     0680  082D               	movf	___xxtofl@arg+3,w
  3623     0681  00A3               	movwf	?___xxtofl+3
  3624     0682  082C               	movf	___xxtofl@arg+2,w
  3625     0683  00A2               	movwf	?___xxtofl+2
  3626     0684  082B               	movf	___xxtofl@arg+1,w
  3627     0685  00A1               	movwf	?___xxtofl+1
  3628     0686  082A               	movf	___xxtofl@arg,w
  3629     0687  00A0               	movwf	?___xxtofl
  3630     0688                     l915:
  3631     0688  0008               	return
  3632     0689                     __end_of___xxtofl:
  3633                           
  3634                           	psect	text11
  3635     0F88                     __ptext11:	
  3636 ;; *************** function ___fltol *****************
  3637 ;; Defined at:
  3638 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;  f1              4   14[BANK0 ] unsigned char 
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;  exp1            1   23[BANK0 ] unsigned char 
  3643 ;;  sign1           1   22[BANK0 ] unsigned char 
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  4   14[BANK0 ] long 
  3646 ;; Registers used:
  3647 ;;		wreg, status,2, status,0
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3653 ;;      Params:         0       4       0       0       0
  3654 ;;      Locals:         0       2       0       0       0
  3655 ;;      Temps:          0       4       0       0       0
  3656 ;;      Totals:         0      10       0       0       0
  3657 ;;Total ram usage:       10 bytes
  3658 ;; Hardware stack levels used: 1
  3659 ;; Hardware stack levels required when called: 2
  3660 ;; This function calls:
  3661 ;;		Nothing
  3662 ;; This function is called by:
  3663 ;;		_main
  3664 ;;		_trunc
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668     0F88                     ___fltol:	
  3669                           ;psect for function ___fltol
  3670                           
  3671     0F88                     l2075:	
  3672                           ;incstack = 0
  3673                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3674                           
  3675     0F88  1003               	clrc
  3676     0F89  1283               	bcf	3,5	;RP0=0, select bank0
  3677     0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  3678     0F8B  0D30               	rlf	___fltol@f1+2,w
  3679     0F8C  0D31               	rlf	___fltol@f1+3,w
  3680     0F8D  00B7               	movwf	___fltol@exp1
  3681     0F8E  0837               	movf	___fltol@exp1,w
  3682     0F8F  1D03               	btfss	3,2
  3683     0F90  2F92               	goto	u1651
  3684     0F91  2F93               	goto	u1650
  3685     0F92                     u1651:
  3686     0F92  2F9C               	goto	l2081
  3687     0F93                     u1650:
  3688     0F93                     l2077:
  3689     0F93  3000               	movlw	0
  3690     0F94  00B1               	movwf	?___fltol+3
  3691     0F95  3000               	movlw	0
  3692     0F96  00B0               	movwf	?___fltol+2
  3693     0F97  3000               	movlw	0
  3694     0F98  00AF               	movwf	?___fltol+1
  3695     0F99  3000               	movlw	0
  3696     0F9A  00AE               	movwf	?___fltol
  3697     0F9B  2FFF               	goto	l666
  3698     0F9C                     l2081:
  3699     0F9C  082E               	movf	___fltol@f1,w
  3700     0F9D  00B2               	movwf	??___fltol
  3701     0F9E  082F               	movf	___fltol@f1+1,w
  3702     0F9F  00B3               	movwf	??___fltol+1
  3703     0FA0  0830               	movf	___fltol@f1+2,w
  3704     0FA1  00B4               	movwf	??___fltol+2
  3705     0FA2  0831               	movf	___fltol@f1+3,w
  3706     0FA3  00B5               	movwf	??___fltol+3
  3707     0FA4  301F               	movlw	31
  3708     0FA5                     u1665:
  3709     0FA5  1003               	clrc
  3710     0FA6  0CB5               	rrf	??___fltol+3,f
  3711     0FA7  0CB4               	rrf	??___fltol+2,f
  3712     0FA8  0CB3               	rrf	??___fltol+1,f
  3713     0FA9  0CB2               	rrf	??___fltol,f
  3714     0FAA                     u1660:
  3715     0FAA  3EFF               	addlw	-1
  3716     0FAB  1D03               	skipz
  3717     0FAC  2FA5               	goto	u1665
  3718     0FAD  0832               	movf	??___fltol,w
  3719     0FAE  00B6               	movwf	___fltol@sign1
  3720     0FAF                     l2083:
  3721     0FAF  17B0               	bsf	___fltol@f1+2,7
  3722     0FB0                     l2085:
  3723     0FB0  30FF               	movlw	255
  3724     0FB1  05AE               	andwf	___fltol@f1,f
  3725     0FB2  30FF               	movlw	255
  3726     0FB3  05AF               	andwf	___fltol@f1+1,f
  3727     0FB4  30FF               	movlw	255
  3728     0FB5  05B0               	andwf	___fltol@f1+2,f
  3729     0FB6  3000               	movlw	0
  3730     0FB7  05B1               	andwf	___fltol@f1+3,f
  3731     0FB8                     l2087:
  3732     0FB8  3096               	movlw	150
  3733     0FB9  02B7               	subwf	___fltol@exp1,f
  3734     0FBA                     l2089:
  3735     0FBA  1FB7               	btfss	___fltol@exp1,7
  3736     0FBB  2FBD               	goto	u1671
  3737     0FBC  2FBE               	goto	u1670
  3738     0FBD                     u1671:
  3739     0FBD  2FD8               	goto	l2099
  3740     0FBE                     u1670:
  3741     0FBE                     l2091:
  3742     0FBE  0837               	movf	___fltol@exp1,w
  3743     0FBF  3A80               	xorlw	128
  3744     0FC0  3E97               	addlw	151
  3745     0FC1  1803               	skipnc
  3746     0FC2  2FC4               	goto	u1681
  3747     0FC3  2FC5               	goto	u1680
  3748     0FC4                     u1681:
  3749     0FC4  2FC6               	goto	l2097
  3750     0FC5                     u1680:
  3751     0FC5  2F93               	goto	l2077
  3752     0FC6                     l2097:
  3753     0FC6  3001               	movlw	1
  3754     0FC7                     u1695:
  3755     0FC7  1003               	clrc
  3756     0FC8  0CB1               	rrf	___fltol@f1+3,f
  3757     0FC9  0CB0               	rrf	___fltol@f1+2,f
  3758     0FCA  0CAF               	rrf	___fltol@f1+1,f
  3759     0FCB  0CAE               	rrf	___fltol@f1,f
  3760     0FCC  3EFF               	addlw	-1
  3761     0FCD  1D03               	skipz
  3762     0FCE  2FC7               	goto	u1695
  3763     0FCF  3001               	movlw	1
  3764     0FD0  00B2               	movwf	??___fltol
  3765     0FD1  0832               	movf	??___fltol,w
  3766     0FD2  07B7               	addwf	___fltol@exp1,f
  3767     0FD3  1D03               	btfss	3,2
  3768     0FD4  2FD6               	goto	u1701
  3769     0FD5  2FD7               	goto	u1700
  3770     0FD6                     u1701:
  3771     0FD6  2FC6               	goto	l2097
  3772     0FD7                     u1700:
  3773     0FD7  2FEF               	goto	l2107
  3774     0FD8                     l2099:
  3775     0FD8  3020               	movlw	32
  3776     0FD9  0237               	subwf	___fltol@exp1,w
  3777     0FDA  1C03               	skipc
  3778     0FDB  2FDD               	goto	u1711
  3779     0FDC  2FDE               	goto	u1710
  3780     0FDD                     u1711:
  3781     0FDD  2FEA               	goto	l673
  3782     0FDE                     u1710:
  3783     0FDE  2F93               	goto	l2077
  3784     0FDF                     l2105:
  3785     0FDF  3001               	movlw	1
  3786     0FE0  00B2               	movwf	??___fltol
  3787     0FE1                     u1725:
  3788     0FE1  1003               	clrc
  3789     0FE2  0DAE               	rlf	___fltol@f1,f
  3790     0FE3  0DAF               	rlf	___fltol@f1+1,f
  3791     0FE4  0DB0               	rlf	___fltol@f1+2,f
  3792     0FE5  0DB1               	rlf	___fltol@f1+3,f
  3793     0FE6  0BB2               	decfsz	??___fltol,f
  3794     0FE7  2FE1               	goto	u1725
  3795     0FE8  3001               	movlw	1
  3796     0FE9  02B7               	subwf	___fltol@exp1,f
  3797     0FEA                     l673:
  3798     0FEA  0837               	movf	___fltol@exp1,w
  3799     0FEB  1D03               	btfss	3,2
  3800     0FEC  2FEE               	goto	u1731
  3801     0FED  2FEF               	goto	u1730
  3802     0FEE                     u1731:
  3803     0FEE  2FDF               	goto	l2105
  3804     0FEF                     u1730:
  3805     0FEF                     l2107:
  3806     0FEF  0836               	movf	___fltol@sign1,w
  3807     0FF0  1903               	btfsc	3,2
  3808     0FF1  2FF3               	goto	u1741
  3809     0FF2  2FF4               	goto	u1740
  3810     0FF3                     u1741:
  3811     0FF3  2FFF               	goto	l676
  3812     0FF4                     u1740:
  3813     0FF4                     l2109:
  3814     0FF4  09AE               	comf	___fltol@f1,f
  3815     0FF5  09AF               	comf	___fltol@f1+1,f
  3816     0FF6  09B0               	comf	___fltol@f1+2,f
  3817     0FF7  09B1               	comf	___fltol@f1+3,f
  3818     0FF8  0AAE               	incf	___fltol@f1,f
  3819     0FF9  1903               	skipnz
  3820     0FFA  0AAF               	incf	___fltol@f1+1,f
  3821     0FFB  1903               	skipnz
  3822     0FFC  0AB0               	incf	___fltol@f1+2,f
  3823     0FFD  1903               	skipnz
  3824     0FFE  0AB1               	incf	___fltol@f1+3,f
  3825     0FFF                     l676:
  3826     0FFF                     l666:
  3827     0FFF  0008               	return
  3828     1000                     __end_of___fltol:
  3829                           
  3830                           	psect	text12
  3831     0B79                     __ptext12:	
  3832 ;; *************** function ___flsub *****************
  3833 ;; Defined at:
  3834 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;  a               4   34[BANK0 ] long 
  3837 ;;  b               4   38[BANK0 ] long 
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;		None
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  4   34[BANK0 ] long 
  3842 ;; Registers used:
  3843 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3849 ;;      Params:         0       8       0       0       0
  3850 ;;      Locals:         0       0       0       0       0
  3851 ;;      Temps:          0       0       0       0       0
  3852 ;;      Totals:         0       8       0       0       0
  3853 ;;Total ram usage:        8 bytes
  3854 ;; Hardware stack levels used: 1
  3855 ;; Hardware stack levels required when called: 3
  3856 ;; This function calls:
  3857 ;;		___fladd
  3858 ;; This function is called by:
  3859 ;;		_round
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863     0B79                     ___flsub:	
  3864                           ;psect for function ___flsub
  3865                           
  3866     0B79                     l2549:	
  3867                           ;incstack = 0
  3868                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3869                           
  3870     0B79  3080               	movlw	128
  3871     0B7A  1283               	bcf	3,5	;RP0=0, select bank0
  3872     0B7B  1303               	bcf	3,6	;RP1=0, select bank0
  3873     0B7C  06C5               	xorwf	___flsub@a+3,f
  3874     0B7D                     l2551:
  3875     0B7D  0849               	movf	___flsub@b+3,w
  3876     0B7E  00A3               	movwf	___fladd@b+3
  3877     0B7F  0848               	movf	___flsub@b+2,w
  3878     0B80  00A2               	movwf	___fladd@b+2
  3879     0B81  0847               	movf	___flsub@b+1,w
  3880     0B82  00A1               	movwf	___fladd@b+1
  3881     0B83  0846               	movf	___flsub@b,w
  3882     0B84  00A0               	movwf	___fladd@b
  3883     0B85  0845               	movf	___flsub@a+3,w
  3884     0B86  00A7               	movwf	___fladd@a+3
  3885     0B87  0844               	movf	___flsub@a+2,w
  3886     0B88  00A6               	movwf	___fladd@a+2
  3887     0B89  0843               	movf	___flsub@a+1,w
  3888     0B8A  00A5               	movwf	___fladd@a+1
  3889     0B8B  0842               	movf	___flsub@a,w
  3890     0B8C  00A4               	movwf	___fladd@a
  3891     0B8D  120A  118A  2024  120A  158A  	fcall	___fladd
  3892     0B92  1283               	bcf	3,5	;RP0=0, select bank0
  3893     0B93  1303               	bcf	3,6	;RP1=0, select bank0
  3894     0B94  0823               	movf	?___fladd+3,w
  3895     0B95  00C5               	movwf	?___flsub+3
  3896     0B96  0822               	movf	?___fladd+2,w
  3897     0B97  00C4               	movwf	?___flsub+2
  3898     0B98  0821               	movf	?___fladd+1,w
  3899     0B99  00C3               	movwf	?___flsub+1
  3900     0B9A  0820               	movf	?___fladd,w
  3901     0B9B  00C2               	movwf	?___flsub
  3902     0B9C                     l819:
  3903     0B9C  0008               	return
  3904     0B9D                     __end_of___flsub:
  3905                           
  3906                           	psect	text13
  3907     0024                     __ptext13:	
  3908 ;; *************** function ___fladd *****************
  3909 ;; Defined at:
  3910 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;  b               4    0[BANK0 ] long 
  3913 ;;  a               4    4[BANK0 ] long 
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;  grs             1   19[BANK0 ] unsigned char 
  3916 ;;  bexp            1   18[BANK0 ] unsigned char 
  3917 ;;  aexp            1   17[BANK0 ] unsigned char 
  3918 ;;  signs           1   16[BANK0 ] unsigned char 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  4    0[BANK0 ] unsigned char 
  3921 ;; Registers used:
  3922 ;;		wreg, status,2, status,0, btemp+1
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3928 ;;      Params:         0       8       0       0       0
  3929 ;;      Locals:         0       4       0       0       0
  3930 ;;      Temps:          0       8       0       0       0
  3931 ;;      Totals:         0      20       0       0       0
  3932 ;;Total ram usage:       20 bytes
  3933 ;; Hardware stack levels used: 1
  3934 ;; Hardware stack levels required when called: 2
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		___flsub
  3939 ;;		_round
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943     0024                     ___fladd:	
  3944                           ;psect for function ___fladd
  3945                           
  3946     0024                     l2111:	
  3947                           ;incstack = 0
  3948                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3949                           
  3950     0024  1283               	bcf	3,5	;RP0=0, select bank0
  3951     0025  1303               	bcf	3,6	;RP1=0, select bank0
  3952     0026  0823               	movf	___fladd@b+3,w
  3953     0027  3980               	andlw	128
  3954     0028  00B0               	movwf	___fladd@signs
  3955     0029                     l2113:
  3956     0029  0823               	movf	___fladd@b+3,w
  3957     002A  00A8               	movwf	??___fladd
  3958     002B  0728               	addwf	??___fladd,w
  3959     002C  00B2               	movwf	___fladd@bexp
  3960     002D                     l2115:
  3961     002D  1FA2               	btfss	___fladd@b+2,7
  3962     002E  2830               	goto	u1751
  3963     002F  2831               	goto	u1750
  3964     0030                     u1751:
  3965     0030  2832               	goto	l2119
  3966     0031                     u1750:
  3967     0031                     l2117:
  3968     0031  1432               	bsf	___fladd@bexp,0
  3969     0032                     l2119:
  3970     0032  0832               	movf	___fladd@bexp,w
  3971     0033  1903               	btfsc	3,2
  3972     0034  2836               	goto	u1761
  3973     0035  2837               	goto	u1760
  3974     0036                     u1761:
  3975     0036  2847               	goto	l2129
  3976     0037                     u1760:
  3977     0037                     l2121:
  3978     0037  0A32               	incf	___fladd@bexp,w
  3979     0038  1D03               	btfss	3,2
  3980     0039  283B               	goto	u1771
  3981     003A  283C               	goto	u1770
  3982     003B                     u1771:
  3983     003B  2844               	goto	l2125
  3984     003C                     u1770:
  3985     003C                     l2123:
  3986     003C  3000               	movlw	0
  3987     003D  00A3               	movwf	___fladd@b+3
  3988     003E  3000               	movlw	0
  3989     003F  00A2               	movwf	___fladd@b+2
  3990     0040  3000               	movlw	0
  3991     0041  00A1               	movwf	___fladd@b+1
  3992     0042  3000               	movlw	0
  3993     0043  00A0               	movwf	___fladd@b
  3994     0044                     l2125:
  3995     0044  17A2               	bsf	___fladd@b+2,7
  3996     0045                     l2127:
  3997     0045  01A3               	clrf	___fladd@b+3
  3998     0046  284F               	goto	l2131
  3999     0047                     l2129:
  4000     0047  3000               	movlw	0
  4001     0048  00A3               	movwf	___fladd@b+3
  4002     0049  3000               	movlw	0
  4003     004A  00A2               	movwf	___fladd@b+2
  4004     004B  3000               	movlw	0
  4005     004C  00A1               	movwf	___fladd@b+1
  4006     004D  3000               	movlw	0
  4007     004E  00A0               	movwf	___fladd@b
  4008     004F                     l2131:
  4009     004F  0827               	movf	___fladd@a+3,w
  4010     0050  3980               	andlw	128
  4011     0051  00B1               	movwf	___fladd@aexp
  4012     0052                     l2133:
  4013     0052  0831               	movf	___fladd@aexp,w
  4014     0053  0630               	xorwf	___fladd@signs,w
  4015     0054  1903               	skipnz
  4016     0055  2857               	goto	u1781
  4017     0056  2858               	goto	u1780
  4018     0057                     u1781:
  4019     0057  2859               	goto	l2137
  4020     0058                     u1780:
  4021     0058                     l2135:
  4022     0058  1730               	bsf	___fladd@signs,6
  4023     0059                     l2137:
  4024     0059  0827               	movf	___fladd@a+3,w
  4025     005A  00A8               	movwf	??___fladd
  4026     005B  0728               	addwf	??___fladd,w
  4027     005C  00B1               	movwf	___fladd@aexp
  4028     005D                     l2139:
  4029     005D  1FA6               	btfss	___fladd@a+2,7
  4030     005E  2860               	goto	u1791
  4031     005F  2861               	goto	u1790
  4032     0060                     u1791:
  4033     0060  2862               	goto	l2143
  4034     0061                     u1790:
  4035     0061                     l2141:
  4036     0061  1431               	bsf	___fladd@aexp,0
  4037     0062                     l2143:
  4038     0062  0831               	movf	___fladd@aexp,w
  4039     0063  1903               	btfsc	3,2
  4040     0064  2866               	goto	u1801
  4041     0065  2867               	goto	u1800
  4042     0066                     u1801:
  4043     0066  2877               	goto	l2153
  4044     0067                     u1800:
  4045     0067                     l2145:
  4046     0067  0A31               	incf	___fladd@aexp,w
  4047     0068  1D03               	btfss	3,2
  4048     0069  286B               	goto	u1811
  4049     006A  286C               	goto	u1810
  4050     006B                     u1811:
  4051     006B  2874               	goto	l2149
  4052     006C                     u1810:
  4053     006C                     l2147:
  4054     006C  3000               	movlw	0
  4055     006D  00A7               	movwf	___fladd@a+3
  4056     006E  3000               	movlw	0
  4057     006F  00A6               	movwf	___fladd@a+2
  4058     0070  3000               	movlw	0
  4059     0071  00A5               	movwf	___fladd@a+1
  4060     0072  3000               	movlw	0
  4061     0073  00A4               	movwf	___fladd@a
  4062     0074                     l2149:
  4063     0074  17A6               	bsf	___fladd@a+2,7
  4064     0075                     l2151:
  4065     0075  01A7               	clrf	___fladd@a+3
  4066     0076  287F               	goto	l773
  4067     0077                     l2153:
  4068     0077  3000               	movlw	0
  4069     0078  00A7               	movwf	___fladd@a+3
  4070     0079  3000               	movlw	0
  4071     007A  00A6               	movwf	___fladd@a+2
  4072     007B  3000               	movlw	0
  4073     007C  00A5               	movwf	___fladd@a+1
  4074     007D  3000               	movlw	0
  4075     007E  00A4               	movwf	___fladd@a
  4076     007F                     l773:
  4077     007F  0832               	movf	___fladd@bexp,w
  4078     0080  0231               	subwf	___fladd@aexp,w
  4079     0081  1803               	skipnc
  4080     0082  2884               	goto	u1821
  4081     0083  2885               	goto	u1820
  4082     0084                     u1821:
  4083     0084  28AB               	goto	l2189
  4084     0085                     u1820:
  4085     0085                     l2155:
  4086     0085  1F30               	btfss	___fladd@signs,6
  4087     0086  2888               	goto	u1831
  4088     0087  2889               	goto	u1830
  4089     0088                     u1831:
  4090     0088  288D               	goto	l2159
  4091     0089                     u1830:
  4092     0089                     l2157:
  4093     0089  3080               	movlw	128
  4094     008A  00A8               	movwf	??___fladd
  4095     008B  0828               	movf	??___fladd,w
  4096     008C  06B0               	xorwf	___fladd@signs,f
  4097     008D                     l2159:
  4098     008D  0832               	movf	___fladd@bexp,w
  4099     008E  00B3               	movwf	___fladd@grs
  4100     008F                     l2161:
  4101     008F  0831               	movf	___fladd@aexp,w
  4102     0090  00B2               	movwf	___fladd@bexp
  4103     0091                     l2163:
  4104     0091  0833               	movf	___fladd@grs,w
  4105     0092  00B1               	movwf	___fladd@aexp
  4106     0093                     l2165:
  4107     0093  0820               	movf	___fladd@b,w
  4108     0094  00B3               	movwf	___fladd@grs
  4109     0095                     l2167:
  4110     0095  0824               	movf	___fladd@a,w
  4111     0096  00A0               	movwf	___fladd@b
  4112     0097                     l2169:
  4113     0097  0833               	movf	___fladd@grs,w
  4114     0098  00A4               	movwf	___fladd@a
  4115     0099                     l2171:
  4116     0099  0821               	movf	___fladd@b+1,w
  4117     009A  00B3               	movwf	___fladd@grs
  4118     009B                     l2173:
  4119     009B  0825               	movf	___fladd@a+1,w
  4120     009C  00A1               	movwf	___fladd@b+1
  4121     009D                     l2175:
  4122     009D  0833               	movf	___fladd@grs,w
  4123     009E  00A5               	movwf	___fladd@a+1
  4124     009F                     l2177:
  4125     009F  0822               	movf	___fladd@b+2,w
  4126     00A0  00B3               	movwf	___fladd@grs
  4127     00A1                     l2179:
  4128     00A1  0826               	movf	___fladd@a+2,w
  4129     00A2  00A2               	movwf	___fladd@b+2
  4130     00A3                     l2181:
  4131     00A3  0833               	movf	___fladd@grs,w
  4132     00A4  00A6               	movwf	___fladd@a+2
  4133     00A5                     l2183:
  4134     00A5  0823               	movf	___fladd@b+3,w
  4135     00A6  00B3               	movwf	___fladd@grs
  4136     00A7                     l2185:
  4137     00A7  0827               	movf	___fladd@a+3,w
  4138     00A8  00A3               	movwf	___fladd@b+3
  4139     00A9                     l2187:
  4140     00A9  0833               	movf	___fladd@grs,w
  4141     00AA  00A7               	movwf	___fladd@a+3
  4142     00AB                     l2189:
  4143     00AB  01B3               	clrf	___fladd@grs
  4144     00AC                     l2191:
  4145     00AC  0831               	movf	___fladd@aexp,w
  4146     00AD  00A8               	movwf	??___fladd
  4147     00AE  01A9               	clrf	??___fladd+1
  4148     00AF  0829               	movf	??___fladd+1,w
  4149     00B0  00AB               	movwf	??___fladd+3
  4150     00B1  0832               	movf	___fladd@bexp,w
  4151     00B2  0228               	subwf	??___fladd,w
  4152     00B3  00AA               	movwf	??___fladd+2
  4153     00B4  1C03               	skipc
  4154     00B5  03AB               	decf	??___fladd+3,f
  4155     00B6  082B               	movf	??___fladd+3,w
  4156     00B7  3A80               	xorlw	128
  4157     00B8  00FF               	movwf	btemp+1
  4158     00B9  3080               	movlw	128
  4159     00BA  027F               	subwf	btemp+1,w
  4160     00BB  1D03               	skipz
  4161     00BC  28BF               	goto	u1845
  4162     00BD  301A               	movlw	26
  4163     00BE  022A               	subwf	??___fladd+2,w
  4164     00BF                     u1845:
  4165     00BF  1C03               	skipc
  4166     00C0  28C2               	goto	u1841
  4167     00C1  28C3               	goto	u1840
  4168     00C2                     u1841:
  4169     00C2  28FA               	goto	l2207
  4170     00C3                     u1840:
  4171     00C3                     l2193:
  4172     00C3  1283               	bcf	3,5	;RP0=0, select bank0
  4173     00C4  1303               	bcf	3,6	;RP1=0, select bank0
  4174     00C5  0823               	movf	___fladd@b+3,w
  4175     00C6  0422               	iorwf	___fladd@b+2,w
  4176     00C7  0421               	iorwf	___fladd@b+1,w
  4177     00C8  0420               	iorwf	___fladd@b,w
  4178     00C9  1D03               	skipz
  4179     00CA  28CC               	goto	u1851
  4180     00CB  28CE               	goto	u1850
  4181     00CC                     u1851:
  4182     00CC  3001               	movlw	1
  4183     00CD  28CF               	goto	u1860
  4184     00CE                     u1850:
  4185     00CE  3000               	movlw	0
  4186     00CF                     u1860:
  4187     00CF  00B3               	movwf	___fladd@grs
  4188     00D0  3000               	movlw	0
  4189     00D1  00A3               	movwf	___fladd@b+3
  4190     00D2  3000               	movlw	0
  4191     00D3  00A2               	movwf	___fladd@b+2
  4192     00D4  3000               	movlw	0
  4193     00D5  00A1               	movwf	___fladd@b+1
  4194     00D6  3000               	movlw	0
  4195     00D7  00A0               	movwf	___fladd@b
  4196     00D8  0831               	movf	___fladd@aexp,w
  4197     00D9  00B2               	movwf	___fladd@bexp
  4198     00DA  2902               	goto	l777
  4199     00DB                     l779:
  4200     00DB  1C33               	btfss	___fladd@grs,0
  4201     00DC  28DE               	goto	u1871
  4202     00DD  28DF               	goto	u1870
  4203     00DE                     u1871:
  4204     00DE  28E6               	goto	l2197
  4205     00DF                     u1870:
  4206     00DF                     l2195:
  4207     00DF  0833               	movf	___fladd@grs,w
  4208     00E0  00A8               	movwf	??___fladd
  4209     00E1  1003               	clrc
  4210     00E2  0C28               	rrf	??___fladd,w
  4211     00E3  3801               	iorlw	1
  4212     00E4  00B3               	movwf	___fladd@grs
  4213     00E5  28E8               	goto	l2199
  4214     00E6                     l2197:
  4215     00E6  1003               	clrc
  4216     00E7  0CB3               	rrf	___fladd@grs,f
  4217     00E8                     l2199:
  4218     00E8  1C20               	btfss	___fladd@b,0
  4219     00E9  28EB               	goto	u1881
  4220     00EA  28EC               	goto	u1880
  4221     00EB                     u1881:
  4222     00EB  28ED               	goto	l2203
  4223     00EC                     u1880:
  4224     00EC                     l2201:
  4225     00EC  17B3               	bsf	___fladd@grs,7
  4226     00ED                     l2203:
  4227     00ED  3001               	movlw	1
  4228     00EE  00A8               	movwf	??___fladd
  4229     00EF                     u1895:
  4230     00EF  0D23               	rlf	___fladd@b+3,w
  4231     00F0  0CA3               	rrf	___fladd@b+3,f
  4232     00F1  0CA2               	rrf	___fladd@b+2,f
  4233     00F2  0CA1               	rrf	___fladd@b+1,f
  4234     00F3  0CA0               	rrf	___fladd@b,f
  4235     00F4  0BA8               	decfsz	??___fladd& (0+127),f
  4236     00F5  28EF               	goto	u1895
  4237     00F6                     l2205:
  4238     00F6  3001               	movlw	1
  4239     00F7  00A8               	movwf	??___fladd
  4240     00F8  0828               	movf	??___fladd,w
  4241     00F9  07B2               	addwf	___fladd@bexp,f
  4242     00FA                     l2207:
  4243     00FA  1283               	bcf	3,5	;RP0=0, select bank0
  4244     00FB  1303               	bcf	3,6	;RP1=0, select bank0
  4245     00FC  0831               	movf	___fladd@aexp,w
  4246     00FD  0232               	subwf	___fladd@bexp,w
  4247     00FE  1C03               	skipc
  4248     00FF  2901               	goto	u1901
  4249     0100  2902               	goto	u1900
  4250     0101                     u1901:
  4251     0101  28DB               	goto	l779
  4252     0102                     u1900:
  4253     0102                     l777:
  4254     0102  1B30               	btfsc	___fladd@signs,6
  4255     0103  2905               	goto	u1911
  4256     0104  2906               	goto	u1910
  4257     0105                     u1911:
  4258     0105  294F               	goto	l2233
  4259     0106                     u1910:
  4260     0106                     l2209:
  4261     0106  0832               	movf	___fladd@bexp,w
  4262     0107  1D03               	btfss	3,2
  4263     0108  290A               	goto	u1921
  4264     0109  290B               	goto	u1920
  4265     010A                     u1921:
  4266     010A  2914               	goto	l2215
  4267     010B                     u1920:
  4268     010B                     l2211:
  4269     010B  3000               	movlw	0
  4270     010C  00A3               	movwf	?___fladd+3
  4271     010D  3000               	movlw	0
  4272     010E  00A2               	movwf	?___fladd+2
  4273     010F  3000               	movlw	0
  4274     0110  00A1               	movwf	?___fladd+1
  4275     0111  3000               	movlw	0
  4276     0112  00A0               	movwf	?___fladd
  4277     0113  2A7B               	goto	l786
  4278     0114                     l2215:
  4279     0114  0824               	movf	___fladd@a,w
  4280     0115  07A0               	addwf	___fladd@b,f
  4281     0116  0825               	movf	___fladd@a+1,w
  4282     0117  1103               	clrz
  4283     0118  1803               	skipnc
  4284     0119  3E01               	addlw	1
  4285     011A  1903               	skipnz
  4286     011B  291D               	goto	u1931
  4287     011C  07A1               	addwf	___fladd@b+1,f
  4288     011D                     u1931:
  4289     011D  0826               	movf	___fladd@a+2,w
  4290     011E  1103               	clrz
  4291     011F  1803               	skipnc
  4292     0120  3E01               	addlw	1
  4293     0121  1903               	skipnz
  4294     0122  2924               	goto	u1932
  4295     0123  07A2               	addwf	___fladd@b+2,f
  4296     0124                     u1932:
  4297     0124  0827               	movf	___fladd@a+3,w
  4298     0125  1103               	clrz
  4299     0126  1803               	skipnc
  4300     0127  3E01               	addlw	1
  4301     0128  1903               	skipnz
  4302     0129  292B               	goto	u1933
  4303     012A  07A3               	addwf	___fladd@b+3,f
  4304     012B                     u1933:
  4305     012B                     l2217:
  4306     012B  1C23               	btfss	___fladd@b+3,0
  4307     012C  292E               	goto	u1941
  4308     012D  292F               	goto	u1940
  4309     012E                     u1941:
  4310     012E  2A03               	goto	l2267
  4311     012F                     u1940:
  4312     012F                     l2219:
  4313     012F  1C33               	btfss	___fladd@grs,0
  4314     0130  2932               	goto	u1951
  4315     0131  2933               	goto	u1950
  4316     0132                     u1951:
  4317     0132  293A               	goto	l2223
  4318     0133                     u1950:
  4319     0133                     l2221:
  4320     0133  0833               	movf	___fladd@grs,w
  4321     0134  00A8               	movwf	??___fladd
  4322     0135  1003               	clrc
  4323     0136  0C28               	rrf	??___fladd,w
  4324     0137  3801               	iorlw	1
  4325     0138  00B3               	movwf	___fladd@grs
  4326     0139  293C               	goto	l2225
  4327     013A                     l2223:
  4328     013A  1003               	clrc
  4329     013B  0CB3               	rrf	___fladd@grs,f
  4330     013C                     l2225:
  4331     013C  1C20               	btfss	___fladd@b,0
  4332     013D  293F               	goto	u1961
  4333     013E  2940               	goto	u1960
  4334     013F                     u1961:
  4335     013F  2941               	goto	l2229
  4336     0140                     u1960:
  4337     0140                     l2227:
  4338     0140  17B3               	bsf	___fladd@grs,7
  4339     0141                     l2229:
  4340     0141  3001               	movlw	1
  4341     0142  00A8               	movwf	??___fladd
  4342     0143                     u1975:
  4343     0143  0D23               	rlf	___fladd@b+3,w
  4344     0144  0CA3               	rrf	___fladd@b+3,f
  4345     0145  0CA2               	rrf	___fladd@b+2,f
  4346     0146  0CA1               	rrf	___fladd@b+1,f
  4347     0147  0CA0               	rrf	___fladd@b,f
  4348     0148  0BA8               	decfsz	??___fladd& (0+127),f
  4349     0149  2943               	goto	u1975
  4350     014A                     l2231:
  4351     014A  3001               	movlw	1
  4352     014B  00A8               	movwf	??___fladd
  4353     014C  0828               	movf	??___fladd,w
  4354     014D  07B2               	addwf	___fladd@bexp,f
  4355     014E  2A03               	goto	l2267
  4356     014F                     l2233:
  4357     014F  0823               	movf	___fladd@b+3,w
  4358     0150  3A80               	xorlw	128
  4359     0151  00FF               	movwf	btemp+1
  4360     0152  0827               	movf	___fladd@a+3,w
  4361     0153  3A80               	xorlw	128
  4362     0154  027F               	subwf	btemp+1,w
  4363     0155  1D03               	skipz
  4364     0156  2961               	goto	u1983
  4365     0157  0826               	movf	___fladd@a+2,w
  4366     0158  0222               	subwf	___fladd@b+2,w
  4367     0159  1D03               	skipz
  4368     015A  2961               	goto	u1983
  4369     015B  0825               	movf	___fladd@a+1,w
  4370     015C  0221               	subwf	___fladd@b+1,w
  4371     015D  1D03               	skipz
  4372     015E  2961               	goto	u1983
  4373     015F  0824               	movf	___fladd@a,w
  4374     0160  0220               	subwf	___fladd@b,w
  4375     0161                     u1983:
  4376     0161  1803               	skipnc
  4377     0162  2964               	goto	u1981
  4378     0163  2965               	goto	u1980
  4379     0164                     u1981:
  4380     0164  29BD               	goto	l2243
  4381     0165                     u1980:
  4382     0165                     l2235:
  4383     0165  30FF               	movlw	255
  4384     0166  00A8               	movwf	??___fladd
  4385     0167  30FF               	movlw	255
  4386     0168  00A9               	movwf	??___fladd+1
  4387     0169  30FF               	movlw	255
  4388     016A  00AA               	movwf	??___fladd+2
  4389     016B  30FF               	movlw	255
  4390     016C  00AB               	movwf	??___fladd+3
  4391     016D  0824               	movf	___fladd@a,w
  4392     016E  00AC               	movwf	??___fladd+4
  4393     016F  0825               	movf	___fladd@a+1,w
  4394     0170  00AD               	movwf	??___fladd+5
  4395     0171  0826               	movf	___fladd@a+2,w
  4396     0172  00AE               	movwf	??___fladd+6
  4397     0173  0827               	movf	___fladd@a+3,w
  4398     0174  00AF               	movwf	??___fladd+7
  4399     0175  0820               	movf	___fladd@b,w
  4400     0176  02AC               	subwf	??___fladd+4,f
  4401     0177  0821               	movf	___fladd@b+1,w
  4402     0178  1C03               	skipc
  4403     0179  0F21               	incfsz	___fladd@b+1,w
  4404     017A  297C               	goto	u1991
  4405     017B  297D               	goto	u1992
  4406     017C                     u1991:
  4407     017C  02AD               	subwf	??___fladd+5,f
  4408     017D                     u1992:
  4409     017D  0822               	movf	___fladd@b+2,w
  4410     017E  1C03               	skipc
  4411     017F  0F22               	incfsz	___fladd@b+2,w
  4412     0180  2982               	goto	u1993
  4413     0181  2983               	goto	u1994
  4414     0182                     u1993:
  4415     0182  02AE               	subwf	??___fladd+6,f
  4416     0183                     u1994:
  4417     0183  0823               	movf	___fladd@b+3,w
  4418     0184  1C03               	skipc
  4419     0185  0F23               	incfsz	___fladd@b+3,w
  4420     0186  2988               	goto	u1995
  4421     0187  2989               	goto	u1996
  4422     0188                     u1995:
  4423     0188  02AF               	subwf	??___fladd+7,f
  4424     0189                     u1996:
  4425     0189  082C               	movf	??___fladd+4,w
  4426     018A  07A8               	addwf	??___fladd,f
  4427     018B  082D               	movf	??___fladd+5,w
  4428     018C  1803               	skipnc
  4429     018D  0F2D               	incfsz	??___fladd+5,w
  4430     018E  2990               	goto	u2000
  4431     018F  2991               	goto	u2001
  4432     0190                     u2000:
  4433     0190  07A9               	addwf	??___fladd+1,f
  4434     0191                     u2001:
  4435     0191  082E               	movf	??___fladd+6,w
  4436     0192  1803               	skipnc
  4437     0193  0F2E               	incfsz	??___fladd+6,w
  4438     0194  2996               	goto	u2002
  4439     0195  2997               	goto	u2003
  4440     0196                     u2002:
  4441     0196  07AA               	addwf	??___fladd+2,f
  4442     0197                     u2003:
  4443     0197  082F               	movf	??___fladd+7,w
  4444     0198  1803               	skipnc
  4445     0199  0A2F               	incf	??___fladd+7,w
  4446     019A  07AB               	addwf	??___fladd+3,f
  4447     019B  082B               	movf	??___fladd+3,w
  4448     019C  00A3               	movwf	___fladd@b+3
  4449     019D  082A               	movf	??___fladd+2,w
  4450     019E  00A2               	movwf	___fladd@b+2
  4451     019F  0829               	movf	??___fladd+1,w
  4452     01A0  00A1               	movwf	___fladd@b+1
  4453     01A1  0828               	movf	??___fladd,w
  4454     01A2  00A0               	movwf	___fladd@b
  4455     01A3                     l2237:
  4456     01A3  3080               	movlw	128
  4457     01A4  00A8               	movwf	??___fladd
  4458     01A5  0828               	movf	??___fladd,w
  4459     01A6  06B0               	xorwf	___fladd@signs,f
  4460     01A7  09B3               	comf	___fladd@grs,f
  4461     01A8  0AB3               	incf	___fladd@grs,f
  4462     01A9                     l2239:
  4463     01A9  0833               	movf	___fladd@grs,w
  4464     01AA  1D03               	btfss	3,2
  4465     01AB  29AD               	goto	u2011
  4466     01AC  29AE               	goto	u2010
  4467     01AD                     u2011:
  4468     01AD  29CB               	goto	l794
  4469     01AE                     u2010:
  4470     01AE                     l2241:
  4471     01AE  3001               	movlw	1
  4472     01AF  07A0               	addwf	___fladd@b,f
  4473     01B0  3000               	movlw	0
  4474     01B1  1803               	skipnc
  4475     01B2  3001               	movlw	1
  4476     01B3  07A1               	addwf	___fladd@b+1,f
  4477     01B4  3000               	movlw	0
  4478     01B5  1803               	skipnc
  4479     01B6  3001               	movlw	1
  4480     01B7  07A2               	addwf	___fladd@b+2,f
  4481     01B8  3000               	movlw	0
  4482     01B9  1803               	skipnc
  4483     01BA  3001               	movlw	1
  4484     01BB  07A3               	addwf	___fladd@b+3,f
  4485     01BC  29CB               	goto	l794
  4486     01BD                     l2243:
  4487     01BD  0824               	movf	___fladd@a,w
  4488     01BE  02A0               	subwf	___fladd@b,f
  4489     01BF  0825               	movf	___fladd@a+1,w
  4490     01C0  1C03               	skipc
  4491     01C1  0F25               	incfsz	___fladd@a+1,w
  4492     01C2  02A1               	subwf	___fladd@b+1,f
  4493     01C3  0826               	movf	___fladd@a+2,w
  4494     01C4  1C03               	skipc
  4495     01C5  0F26               	incfsz	___fladd@a+2,w
  4496     01C6  02A2               	subwf	___fladd@b+2,f
  4497     01C7  0827               	movf	___fladd@a+3,w
  4498     01C8  1C03               	skipc
  4499     01C9  0F27               	incfsz	___fladd@a+3,w
  4500     01CA  02A3               	subwf	___fladd@b+3,f
  4501     01CB                     l794:
  4502     01CB  0823               	movf	___fladd@b+3,w
  4503     01CC  0422               	iorwf	___fladd@b+2,w
  4504     01CD  0421               	iorwf	___fladd@b+1,w
  4505     01CE  0420               	iorwf	___fladd@b,w
  4506     01CF  1D03               	skipz
  4507     01D0  29D2               	goto	u2021
  4508     01D1  29D3               	goto	u2020
  4509     01D2                     u2021:
  4510     01D2  29FF               	goto	l2265
  4511     01D3                     u2020:
  4512     01D3                     l2245:
  4513     01D3  0833               	movf	___fladd@grs,w
  4514     01D4  1D03               	btfss	3,2
  4515     01D5  29D7               	goto	u2031
  4516     01D6  29D8               	goto	u2030
  4517     01D7                     u2031:
  4518     01D7  29FF               	goto	l2265
  4519     01D8                     u2030:
  4520     01D8                     l2247:
  4521     01D8  3000               	movlw	0
  4522     01D9  00A3               	movwf	?___fladd+3
  4523     01DA  3000               	movlw	0
  4524     01DB  00A2               	movwf	?___fladd+2
  4525     01DC  3000               	movlw	0
  4526     01DD  00A1               	movwf	?___fladd+1
  4527     01DE  3000               	movlw	0
  4528     01DF  00A0               	movwf	?___fladd
  4529     01E0  2A7B               	goto	l786
  4530     01E1                     l2251:
  4531     01E1  3001               	movlw	1
  4532     01E2  00A8               	movwf	??___fladd
  4533     01E3                     u2045:
  4534     01E3  1003               	clrc
  4535     01E4  0DA0               	rlf	___fladd@b,f
  4536     01E5  0DA1               	rlf	___fladd@b+1,f
  4537     01E6  0DA2               	rlf	___fladd@b+2,f
  4538     01E7  0DA3               	rlf	___fladd@b+3,f
  4539     01E8  0BA8               	decfsz	??___fladd,f
  4540     01E9  29E3               	goto	u2045
  4541     01EA                     l2253:
  4542     01EA  1FB3               	btfss	___fladd@grs,7
  4543     01EB  29ED               	goto	u2051
  4544     01EC  29EE               	goto	u2050
  4545     01ED                     u2051:
  4546     01ED  29EF               	goto	l798
  4547     01EE                     u2050:
  4548     01EE                     l2255:
  4549     01EE  1420               	bsf	___fladd@b,0
  4550     01EF                     l798:
  4551     01EF  1C33               	btfss	___fladd@grs,0
  4552     01F0  29F2               	goto	u2061
  4553     01F1  29F3               	goto	u2060
  4554     01F2                     u2061:
  4555     01F2  29F6               	goto	l2259
  4556     01F3                     u2060:
  4557     01F3                     l2257:
  4558     01F3  1403               	setc
  4559     01F4  0DB3               	rlf	___fladd@grs,f
  4560     01F5  29F8               	goto	l2261
  4561     01F6                     l2259:
  4562     01F6  1003               	clrc
  4563     01F7  0DB3               	rlf	___fladd@grs,f
  4564     01F8                     l2261:
  4565     01F8  0832               	movf	___fladd@bexp,w
  4566     01F9  1903               	btfsc	3,2
  4567     01FA  29FC               	goto	u2071
  4568     01FB  29FD               	goto	u2070
  4569     01FC                     u2071:
  4570     01FC  29FF               	goto	l2265
  4571     01FD                     u2070:
  4572     01FD                     l2263:
  4573     01FD  3001               	movlw	1
  4574     01FE  02B2               	subwf	___fladd@bexp,f
  4575     01FF                     l2265:
  4576     01FF  1FA2               	btfss	___fladd@b+2,7
  4577     0200  2A02               	goto	u2081
  4578     0201  2A03               	goto	u2080
  4579     0202                     u2081:
  4580     0202  29E1               	goto	l2251
  4581     0203                     u2080:
  4582     0203                     l2267:
  4583     0203  01B1               	clrf	___fladd@aexp
  4584     0204                     l2269:
  4585     0204  1FB3               	btfss	___fladd@grs,7
  4586     0205  2A07               	goto	u2091
  4587     0206  2A08               	goto	u2090
  4588     0207                     u2091:
  4589     0207  2A16               	goto	l2277
  4590     0208                     u2090:
  4591     0208                     l2271:
  4592     0208  0833               	movf	___fladd@grs,w
  4593     0209  397F               	andlw	127
  4594     020A  1903               	btfsc	3,2
  4595     020B  2A0D               	goto	u2101
  4596     020C  2A0E               	goto	u2100
  4597     020D                     u2101:
  4598     020D  2A11               	goto	l804
  4599     020E                     u2100:
  4600     020E                     l2273:
  4601     020E  01B1               	clrf	___fladd@aexp
  4602     020F  0AB1               	incf	___fladd@aexp,f
  4603     0210  2A16               	goto	l2277
  4604     0211                     l804:
  4605     0211  1C20               	btfss	___fladd@b,0
  4606     0212  2A14               	goto	u2111
  4607     0213  2A15               	goto	u2110
  4608     0214                     u2111:
  4609     0214  2A16               	goto	l2277
  4610     0215                     u2110:
  4611     0215  2A0E               	goto	l2273
  4612     0216                     l2277:
  4613     0216  0831               	movf	___fladd@aexp,w
  4614     0217  1903               	btfsc	3,2
  4615     0218  2A1A               	goto	u2121
  4616     0219  2A1B               	goto	u2120
  4617     021A                     u2121:
  4618     021A  2A4F               	goto	l807
  4619     021B                     u2120:
  4620     021B                     l2279:
  4621     021B  3001               	movlw	1
  4622     021C  07A0               	addwf	___fladd@b,f
  4623     021D  3000               	movlw	0
  4624     021E  1803               	skipnc
  4625     021F  3001               	movlw	1
  4626     0220  07A1               	addwf	___fladd@b+1,f
  4627     0221  3000               	movlw	0
  4628     0222  1803               	skipnc
  4629     0223  3001               	movlw	1
  4630     0224  07A2               	addwf	___fladd@b+2,f
  4631     0225  3000               	movlw	0
  4632     0226  1803               	skipnc
  4633     0227  3001               	movlw	1
  4634     0228  07A3               	addwf	___fladd@b+3,f
  4635     0229                     l2281:
  4636     0229  1C23               	btfss	___fladd@b+3,0
  4637     022A  2A2C               	goto	u2131
  4638     022B  2A2D               	goto	u2130
  4639     022C                     u2131:
  4640     022C  2A4F               	goto	l807
  4641     022D                     u2130:
  4642     022D                     l2283:
  4643     022D  0820               	movf	___fladd@b,w
  4644     022E  00A8               	movwf	??___fladd
  4645     022F  0821               	movf	___fladd@b+1,w
  4646     0230  00A9               	movwf	??___fladd+1
  4647     0231  0822               	movf	___fladd@b+2,w
  4648     0232  00AA               	movwf	??___fladd+2
  4649     0233  0823               	movf	___fladd@b+3,w
  4650     0234  00AB               	movwf	??___fladd+3
  4651     0235  3001               	movlw	1
  4652     0236  00AC               	movwf	??___fladd+4
  4653     0237                     u2145:
  4654     0237  0D2B               	rlf	??___fladd+3,w
  4655     0238  0CAB               	rrf	??___fladd+3,f
  4656     0239  0CAA               	rrf	??___fladd+2,f
  4657     023A  0CA9               	rrf	??___fladd+1,f
  4658     023B  0CA8               	rrf	??___fladd,f
  4659     023C                     u2140:
  4660     023C  0BAC               	decfsz	??___fladd+4,f
  4661     023D  2A37               	goto	u2145
  4662     023E  082B               	movf	??___fladd+3,w
  4663     023F  00A3               	movwf	___fladd@b+3
  4664     0240  082A               	movf	??___fladd+2,w
  4665     0241  00A2               	movwf	___fladd@b+2
  4666     0242  0829               	movf	??___fladd+1,w
  4667     0243  00A1               	movwf	___fladd@b+1
  4668     0244  0828               	movf	??___fladd,w
  4669     0245  00A0               	movwf	___fladd@b
  4670     0246  0A32               	incf	___fladd@bexp,w
  4671     0247  1903               	btfsc	3,2
  4672     0248  2A4A               	goto	u2151
  4673     0249  2A4B               	goto	u2150
  4674     024A                     u2151:
  4675     024A  2A4F               	goto	l807
  4676     024B                     u2150:
  4677     024B                     l2285:
  4678     024B  3001               	movlw	1
  4679     024C  00A8               	movwf	??___fladd
  4680     024D  0828               	movf	??___fladd,w
  4681     024E  07B2               	addwf	___fladd@bexp,f
  4682     024F                     l807:
  4683     024F  0A32               	incf	___fladd@bexp,w
  4684     0250  1903               	btfsc	3,2
  4685     0251  2A53               	goto	u2161
  4686     0252  2A54               	goto	u2160
  4687     0253                     u2161:
  4688     0253  2A59               	goto	l2289
  4689     0254                     u2160:
  4690     0254                     l2287:
  4691     0254  0832               	movf	___fladd@bexp,w
  4692     0255  1D03               	btfss	3,2
  4693     0256  2A58               	goto	u2171
  4694     0257  2A59               	goto	u2170
  4695     0258                     u2171:
  4696     0258  2A67               	goto	l2295
  4697     0259                     u2170:
  4698     0259                     l2289:
  4699     0259  3000               	movlw	0
  4700     025A  00A3               	movwf	___fladd@b+3
  4701     025B  3000               	movlw	0
  4702     025C  00A2               	movwf	___fladd@b+2
  4703     025D  3000               	movlw	0
  4704     025E  00A1               	movwf	___fladd@b+1
  4705     025F  3000               	movlw	0
  4706     0260  00A0               	movwf	___fladd@b
  4707     0261                     l2291:
  4708     0261  0832               	movf	___fladd@bexp,w
  4709     0262  1D03               	btfss	3,2
  4710     0263  2A65               	goto	u2181
  4711     0264  2A66               	goto	u2180
  4712     0265                     u2181:
  4713     0265  2A67               	goto	l2295
  4714     0266                     u2180:
  4715     0266                     l2293:
  4716     0266  01B0               	clrf	___fladd@signs
  4717     0267                     l2295:
  4718     0267  1C32               	btfss	___fladd@bexp,0
  4719     0268  2A6A               	goto	u2191
  4720     0269  2A6B               	goto	u2190
  4721     026A                     u2191:
  4722     026A  2A6D               	goto	l2299
  4723     026B                     u2190:
  4724     026B                     l2297:
  4725     026B  17A2               	bsf	___fladd@b+2,7
  4726     026C  2A71               	goto	l815
  4727     026D                     l2299:
  4728     026D  307F               	movlw	127
  4729     026E  00A8               	movwf	??___fladd
  4730     026F  0828               	movf	??___fladd,w
  4731     0270  05A2               	andwf	___fladd@b+2,f
  4732     0271                     l815:
  4733     0271  0832               	movf	___fladd@bexp,w
  4734     0272  00A8               	movwf	??___fladd
  4735     0273  1003               	clrc
  4736     0274  0C28               	rrf	??___fladd,w
  4737     0275  00A3               	movwf	___fladd@b+3
  4738     0276                     l2301:
  4739     0276  1FB0               	btfss	___fladd@signs,7
  4740     0277  2A79               	goto	u2201
  4741     0278  2A7A               	goto	u2200
  4742     0279                     u2201:
  4743     0279  2A7B               	goto	l816
  4744     027A                     u2200:
  4745     027A                     l2303:
  4746     027A  17A3               	bsf	___fladd@b+3,7
  4747     027B                     l816:
  4748     027B                     l786:
  4749     027B  0008               	return
  4750     027C                     __end_of___fladd:
  4751                           
  4752                           	psect	text14
  4753     0720                     __ptext14:	
  4754 ;; *************** function _dht11_read *****************
  4755 ;; Defined at:
  4756 ;;		line 95 in file "C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Communicator/d
      +ht11.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;  phum            1    wreg     PTR unsigned char 
  4759 ;;		 -> humid(1), 
  4760 ;;  ptemp           1    4[BANK0 ] PTR unsigned char 
  4761 ;;		 -> temp(1), 
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;  phum            1    8[BANK0 ] PTR unsigned char 
  4764 ;;		 -> humid(1), 
  4765 ;;  i               1    9[BANK0 ] unsigned char 
  4766 ;;  checksum        1    7[BANK0 ] unsigned char 
  4767 ;; Return value:  Size  Location     Type
  4768 ;;		None               void
  4769 ;; Registers used:
  4770 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4776 ;;      Params:         0       1       0       0       0
  4777 ;;      Locals:         0       3       0       0       0
  4778 ;;      Temps:          0       2       0       0       0
  4779 ;;      Totals:         0       6       0       0       0
  4780 ;;Total ram usage:        6 bytes
  4781 ;; Hardware stack levels used: 1
  4782 ;; Hardware stack levels required when called: 3
  4783 ;; This function calls:
  4784 ;;		___bmul
  4785 ;;		_dht11_read_byte
  4786 ;; This function is called by:
  4787 ;;		_main
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791     0720                     _dht11_read:	
  4792                           ;psect for function _dht11_read
  4793                           
  4794                           
  4795                           ;incstack = 0
  4796                           ; Regs used in _dht11_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4797                           ;dht11_read@phum stored from wreg
  4798     0720  1283               	bcf	3,5	;RP0=0, select bank0
  4799     0721  1303               	bcf	3,6	;RP1=0, select bank0
  4800     0722  00A8               	movwf	dht11_read@phum
  4801     0723                     l2697:
  4802                           
  4803                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 96:     uint8_t i;;C:/Users/kirby/Documents/University Stuff/2023S1/
      +                          Electronica Digital 2/Proyecto/Code/Communicator/dht11.c: 99:     PORTAbits.RA4 = 0; TRI
      +                          SAbits.TRISA4 = 0;;
  4804     0723  1205               	bcf	5,4	;volatile
  4805     0724  1683               	bsf	3,5	;RP0=1, select bank1
  4806     0725  1303               	bcf	3,6	;RP1=0, select bank1
  4807     0726  1205               	bcf	5,4	;volatile
  4808     0727                     l2699:
  4809                           
  4810                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 100:  _delay((unsigned long)((18)*((4000000L)/4000.0)));
  4811     0727  3018               	movlw	24
  4812     0728  1283               	bcf	3,5	;RP0=0, select bank0
  4813     0729  1303               	bcf	3,6	;RP1=0, select bank0
  4814     072A  00A6               	movwf	??_dht11_read+1
  4815     072B  305E               	movlw	94
  4816     072C  00A5               	movwf	??_dht11_read
  4817     072D                     u3087:
  4818     072D  0BA5               	decfsz	??_dht11_read,f
  4819     072E  2F2D               	goto	u3087
  4820     072F  0BA6               	decfsz	??_dht11_read+1,f
  4821     0730  2F2D               	goto	u3087
  4822     0731  0000               	nop
  4823     0732                     l2701:
  4824                           
  4825                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 101:  TRISAbits.TRISA4 = 1;;
  4826     0732  1683               	bsf	3,5	;RP0=1, select bank1
  4827     0733  1303               	bcf	3,6	;RP1=0, select bank1
  4828     0734  1605               	bsf	5,4	;volatile
  4829     0735                     l2703:
  4830                           
  4831                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 104:     TMR0 = 0;
  4832     0735  1283               	bcf	3,5	;RP0=0, select bank0
  4833     0736  1303               	bcf	3,6	;RP1=0, select bank0
  4834     0737  0181               	clrf	1	;volatile
  4835                           
  4836                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 105:     while( PORTAbits.RA4 ) {
  4837     0738  2F40               	goto	l343
  4838     0739                     l2705:
  4839                           
  4840                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 106:         if( TMR0 > (100) ) return 0;
  4841     0739  3065               	movlw	101
  4842     073A  0201               	subwf	1,w	;volatile
  4843     073B  1C03               	skipc
  4844     073C  2F3E               	goto	u2831
  4845     073D  2F3F               	goto	u2830
  4846     073E                     u2831:
  4847     073E  2F40               	goto	l343
  4848     073F                     u2830:
  4849     073F  2FA9               	goto	l346
  4850     0740                     l343:	
  4851                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 107:     }
  4852                           
  4853                           
  4854                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 105:     while( PORTAbits.RA4 ) {
  4855     0740  1A05               	btfsc	5,4	;volatile
  4856     0741  2F43               	goto	u2841
  4857     0742  2F44               	goto	u2840
  4858     0743                     u2841:
  4859     0743  2F39               	goto	l2705
  4860     0744                     u2840:
  4861     0744                     l2709:
  4862                           
  4863                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 110:     TMR0 = 0;
  4864     0744  0181               	clrf	1	;volatile
  4865                           
  4866                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 111:     while( !PORTAbits.RA4 ) {
  4867     0745  2F4D               	goto	l348
  4868     0746                     l2711:
  4869                           
  4870                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 112:         if( TMR0 > (100) ) return 0;
  4871     0746  3065               	movlw	101
  4872     0747  0201               	subwf	1,w	;volatile
  4873     0748  1C03               	skipc
  4874     0749  2F4B               	goto	u2851
  4875     074A  2F4C               	goto	u2850
  4876     074B                     u2851:
  4877     074B  2F4D               	goto	l348
  4878     074C                     u2850:
  4879     074C  2FA9               	goto	l346
  4880     074D                     l348:	
  4881                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 113:     }
  4882                           
  4883                           
  4884                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 111:     while( !PORTAbits.RA4 ) {
  4885     074D  1E05               	btfss	5,4	;volatile
  4886     074E  2F50               	goto	u2861
  4887     074F  2F51               	goto	u2860
  4888     0750                     u2861:
  4889     0750  2F46               	goto	l2711
  4890     0751                     u2860:
  4891     0751                     l2715:
  4892                           
  4893                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 116:     TMR0 = 0;
  4894     0751  0181               	clrf	1	;volatile
  4895                           
  4896                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 117:     while( PORTAbits.RA4 ) {
  4897     0752  2F5A               	goto	l352
  4898     0753                     l2717:
  4899                           
  4900                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 118:         if( TMR0 > (100) ) return 0;
  4901     0753  3065               	movlw	101
  4902     0754  0201               	subwf	1,w	;volatile
  4903     0755  1C03               	skipc
  4904     0756  2F58               	goto	u2871
  4905     0757  2F59               	goto	u2870
  4906     0758                     u2871:
  4907     0758  2F5A               	goto	l352
  4908     0759                     u2870:
  4909     0759  2FA9               	goto	l346
  4910     075A                     l352:	
  4911                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 119:     }
  4912                           
  4913                           
  4914                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 117:     while( PORTAbits.RA4 ) {
  4915     075A  1A05               	btfsc	5,4	;volatile
  4916     075B  2F5D               	goto	u2881
  4917     075C  2F5E               	goto	u2880
  4918     075D                     u2881:
  4919     075D  2F53               	goto	l2717
  4920     075E                     u2880:
  4921     075E                     l2721:
  4922                           
  4923                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 125:     for( i = 0 ; i < (5) ; i++ ) {
  4924     075E  01A9               	clrf	dht11_read@i
  4925     075F                     l2727:
  4926                           
  4927                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 126:         if( !dht11_read_byte() ) return 0;
  4928     075F  120A  158A  23C4  120A  118A  	fcall	_dht11_read_byte
  4929     0764  1803               	btfsc	3,0
  4930     0765  2F67               	goto	u2891
  4931     0766  2F68               	goto	u2890
  4932     0767                     u2891:
  4933     0767  2F69               	goto	l2731
  4934     0768                     u2890:
  4935     0768  2FA9               	goto	l346
  4936     0769                     l2731:
  4937                           
  4938                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 127:         dht11_byte[i] = dht11_aux;
  4939     0769  1283               	bcf	3,5	;RP0=0, select bank0
  4940     076A  1303               	bcf	3,6	;RP1=0, select bank0
  4941     076B  0829               	movf	dht11_read@i,w
  4942     076C  3E56               	addlw	(low (_dht11_byte| 0))& (0+255)
  4943     076D  0084               	movwf	4
  4944     076E  085B               	movf	_dht11_aux,w
  4945     076F  1383               	bcf	3,7	;select IRP bank0
  4946     0770  0080               	movwf	0
  4947     0771                     l2733:
  4948                           
  4949                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 128:     }
  4950     0771  3001               	movlw	1
  4951     0772  00A5               	movwf	??_dht11_read
  4952     0773  0825               	movf	??_dht11_read,w
  4953     0774  07A9               	addwf	dht11_read@i,f
  4954     0775                     l2735:
  4955     0775  3005               	movlw	5
  4956     0776  0229               	subwf	dht11_read@i,w
  4957     0777  1C03               	skipc
  4958     0778  2F7A               	goto	u2901
  4959     0779  2F7B               	goto	u2900
  4960     077A                     u2901:
  4961     077A  2F5F               	goto	l2727
  4962     077B                     u2900:
  4963     077B                     l2737:
  4964                           
  4965                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 131:     uint8_t checksum;;C:/Users/kirby/Documents/University Stuff
      +                          /2023S1/Electronica Digital 2/Proyecto/Code/Communicator/dht11.c: 132:  checksum = dht11
      +                          _byte[0] + dht11_byte[1] + dht11_byte[2] + dht11_byte[3];
  4966     077B  0858               	movf	_dht11_byte+2,w
  4967     077C  0757               	addwf	_dht11_byte+1,w
  4968     077D  00A5               	movwf	??_dht11_read
  4969     077E  0859               	movf	_dht11_byte+3,w
  4970     077F  0725               	addwf	??_dht11_read,w
  4971     0780  00A6               	movwf	??_dht11_read+1
  4972     0781  0856               	movf	_dht11_byte,w
  4973     0782  0726               	addwf	??_dht11_read+1,w
  4974     0783  00A7               	movwf	dht11_read@checksum
  4975     0784                     l2739:
  4976                           
  4977                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 133:  if( checksum != dht11_byte[4] ) {
  4978     0784  085A               	movf	_dht11_byte+4,w
  4979     0785  0627               	xorwf	dht11_read@checksum,w
  4980     0786  1903               	skipnz
  4981     0787  2F89               	goto	u2911
  4982     0788  2F8A               	goto	u2910
  4983     0789                     u2911:
  4984     0789  2F8B               	goto	l2743
  4985     078A                     u2910:
  4986     078A  2FA9               	goto	l346
  4987     078B                     l2743:
  4988                           
  4989                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 138:     *phum = (dht11_byte[0] * 10) + (dht11_byte[1]);
  4990     078B  0828               	movf	dht11_read@phum,w
  4991     078C  0084               	movwf	4
  4992     078D  300A               	movlw	10
  4993     078E  00A0               	movwf	___bmul@multiplicand
  4994     078F  0856               	movf	_dht11_byte,w
  4995     0790  120A  158A  22D1  120A  118A  	fcall	___bmul
  4996     0795  1283               	bcf	3,5	;RP0=0, select bank0
  4997     0796  1303               	bcf	3,6	;RP1=0, select bank0
  4998     0797  0757               	addwf	_dht11_byte+1,w
  4999     0798  1383               	bcf	3,7	;select IRP bank0
  5000     0799  0080               	movwf	0
  5001                           
  5002                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 139:     *ptemp = (dht11_byte[2] * 10) + (dht11_byte[3]);
  5003     079A  0824               	movf	dht11_read@ptemp,w
  5004     079B  0084               	movwf	4
  5005     079C  300A               	movlw	10
  5006     079D  00A0               	movwf	___bmul@multiplicand
  5007     079E  0858               	movf	_dht11_byte+2,w
  5008     079F  120A  158A  22D1  120A  118A  	fcall	___bmul
  5009     07A4  1283               	bcf	3,5	;RP0=0, select bank0
  5010     07A5  1303               	bcf	3,6	;RP1=0, select bank0
  5011     07A6  0759               	addwf	_dht11_byte+3,w
  5012     07A7  1383               	bcf	3,7	;select IRP bank0
  5013     07A8  0080               	movwf	0
  5014     07A9                     l346:
  5015     07A9  0008               	return
  5016     07AA                     __end_of_dht11_read:
  5017                           
  5018                           	psect	text15
  5019     0BC4                     __ptext15:	
  5020 ;; *************** function _dht11_read_byte *****************
  5021 ;; Defined at:
  5022 ;;		line 47 in file "C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Communicator/d
      +ht11.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;		None
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;  i               1    1[BANK0 ] unsigned char 
  5027 ;; Return value:  Size  Location     Type
  5028 ;;		None               void
  5029 ;; Registers used:
  5030 ;;		wreg, status,2, status,0
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/0
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5036 ;;      Params:         0       0       0       0       0
  5037 ;;      Locals:         0       1       0       0       0
  5038 ;;      Temps:          0       1       0       0       0
  5039 ;;      Totals:         0       2       0       0       0
  5040 ;;Total ram usage:        2 bytes
  5041 ;; Hardware stack levels used: 1
  5042 ;; Hardware stack levels required when called: 2
  5043 ;; This function calls:
  5044 ;;		Nothing
  5045 ;; This function is called by:
  5046 ;;		_dht11_read
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050     0BC4                     _dht11_read_byte:	
  5051                           ;psect for function _dht11_read_byte
  5052                           
  5053     0BC4                     l2407:	
  5054                           ;incstack = 0
  5055                           ; Regs used in _dht11_read_byte: [wreg+status,2+status,0]
  5056                           
  5057                           
  5058                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 48:     uint8_t i;;C:/Users/kirby/Documents/University Stuff/2023S1/
      +                          Electronica Digital 2/Proyecto/Code/Communicator/dht11.c: 49:     dht11_aux = 0;
  5059     0BC4  1283               	bcf	3,5	;RP0=0, select bank0
  5060     0BC5  1303               	bcf	3,6	;RP1=0, select bank0
  5061     0BC6  01DB               	clrf	_dht11_aux
  5062                           
  5063                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 52:     for( i = 0 ; i < 8 ; i++ ) {
  5064     0BC7  01A1               	clrf	dht11_read_byte@i
  5065     0BC8                     l2413:
  5066                           
  5067                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 54:         TMR0 = 0;
  5068     0BC8  0181               	clrf	1	;volatile
  5069                           
  5070                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 55:         while( !PORTAbits.RA4 ) {
  5071     0BC9  2BD2               	goto	l329
  5072     0BCA                     l2415:
  5073                           
  5074                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 56:             if( TMR0 > (100) ) return 0;
  5075     0BCA  3065               	movlw	101
  5076     0BCB  0201               	subwf	1,w	;volatile
  5077     0BCC  1C03               	skipc
  5078     0BCD  2BCF               	goto	u2381
  5079     0BCE  2BD0               	goto	u2380
  5080     0BCF                     u2381:
  5081     0BCF  2BD2               	goto	l329
  5082     0BD0                     u2380:
  5083     0BD0                     l2417:
  5084     0BD0  1003               	clrc
  5085     0BD1  2BF3               	goto	l332
  5086     0BD2                     l329:	
  5087                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 57:         }
  5088                           
  5089                           
  5090                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 55:         while( !PORTAbits.RA4 ) {
  5091     0BD2  1E05               	btfss	5,4	;volatile
  5092     0BD3  2BD5               	goto	u2391
  5093     0BD4  2BD6               	goto	u2390
  5094     0BD5                     u2391:
  5095     0BD5  2BCA               	goto	l2415
  5096     0BD6                     u2390:
  5097     0BD6                     l2421:
  5098                           
  5099                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 61:         TMR0 = 0;
  5100     0BD6  0181               	clrf	1	;volatile
  5101                           
  5102                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 62:         while( PORTAbits.RA4 ) {
  5103     0BD7  2BDF               	goto	l334
  5104     0BD8                     l2423:
  5105                           
  5106                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 63:             if( TMR0 > (100) ) return 0;
  5107     0BD8  3065               	movlw	101
  5108     0BD9  0201               	subwf	1,w	;volatile
  5109     0BDA  1C03               	skipc
  5110     0BDB  2BDD               	goto	u2401
  5111     0BDC  2BDE               	goto	u2400
  5112     0BDD                     u2401:
  5113     0BDD  2BDF               	goto	l334
  5114     0BDE                     u2400:
  5115     0BDE  2BD0               	goto	l2417
  5116     0BDF                     l334:	
  5117                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 64:         }
  5118                           
  5119                           
  5120                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 62:         while( PORTAbits.RA4 ) {
  5121     0BDF  1A05               	btfsc	5,4	;volatile
  5122     0BE0  2BE2               	goto	u2411
  5123     0BE1  2BE3               	goto	u2410
  5124     0BE2                     u2411:
  5125     0BE2  2BD8               	goto	l2423
  5126     0BE3                     u2410:
  5127     0BE3                     l337:
  5128     0BE3  3032               	movlw	50	;# 
  5129     0BE4  0201               	subwf	1,w	;# 
  5130     0BE5  0DDB               	rlf	_dht11_aux,f	;# 
  5131     0BE6                     l2429:
  5132                           
  5133                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 74:     }
  5134     0BE6  3001               	movlw	1
  5135     0BE7  1283               	bcf	3,5	;RP0=0, select bank0
  5136     0BE8  1303               	bcf	3,6	;RP1=0, select bank0
  5137     0BE9  00A0               	movwf	??_dht11_read_byte
  5138     0BEA  0820               	movf	??_dht11_read_byte,w
  5139     0BEB  07A1               	addwf	dht11_read_byte@i,f
  5140     0BEC                     l2431:
  5141     0BEC  3008               	movlw	8
  5142     0BED  0221               	subwf	dht11_read_byte@i,w
  5143     0BEE  1C03               	skipc
  5144     0BEF  2BF1               	goto	u2421
  5145     0BF0  2BF2               	goto	u2420
  5146     0BF1                     u2421:
  5147     0BF1  2BC8               	goto	l2413
  5148     0BF2                     u2420:
  5149     0BF2                     l2433:
  5150                           
  5151                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 75:     return 1;
  5152     0BF2  1403               	setc
  5153     0BF3                     l332:
  5154     0BF3  0008               	return
  5155     0BF4                     __end_of_dht11_read_byte:
  5156                           
  5157                           	psect	text16
  5158     0AD1                     __ptext16:	
  5159 ;; *************** function ___bmul *****************
  5160 ;; Defined at:
  5161 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  5162 ;; Parameters:    Size  Location     Type
  5163 ;;  multiplier      1    wreg     unsigned char 
  5164 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;  multiplier      1    3[BANK0 ] unsigned char 
  5167 ;;  product         1    2[BANK0 ] unsigned char 
  5168 ;; Return value:  Size  Location     Type
  5169 ;;                  1    wreg      unsigned char 
  5170 ;; Registers used:
  5171 ;;		wreg, status,2, status,0
  5172 ;; Tracked objects:
  5173 ;;		On entry : 0/0
  5174 ;;		On exit  : 0/0
  5175 ;;		Unchanged: 0/0
  5176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5177 ;;      Params:         0       1       0       0       0
  5178 ;;      Locals:         0       2       0       0       0
  5179 ;;      Temps:          0       1       0       0       0
  5180 ;;      Totals:         0       4       0       0       0
  5181 ;;Total ram usage:        4 bytes
  5182 ;; Hardware stack levels used: 1
  5183 ;; Hardware stack levels required when called: 2
  5184 ;; This function calls:
  5185 ;;		Nothing
  5186 ;; This function is called by:
  5187 ;;		_dht11_read
  5188 ;; This function uses a non-reentrant model
  5189 ;;
  5190                           
  5191     0AD1                     ___bmul:	
  5192                           ;psect for function ___bmul
  5193                           
  5194                           
  5195                           ;incstack = 0
  5196                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5197                           ;___bmul@multiplier stored from wreg
  5198     0AD1  1283               	bcf	3,5	;RP0=0, select bank0
  5199     0AD2  1303               	bcf	3,6	;RP1=0, select bank0
  5200     0AD3  00A3               	movwf	___bmul@multiplier
  5201     0AD4                     l2463:
  5202     0AD4  01A2               	clrf	___bmul@product
  5203     0AD5                     l2465:
  5204     0AD5  1C23               	btfss	___bmul@multiplier,0
  5205     0AD6  2AD8               	goto	u2491
  5206     0AD7  2AD9               	goto	u2490
  5207     0AD8                     u2491:
  5208     0AD8  2ADD               	goto	l2469
  5209     0AD9                     u2490:
  5210     0AD9                     l2467:
  5211     0AD9  0820               	movf	___bmul@multiplicand,w
  5212     0ADA  00A1               	movwf	??___bmul
  5213     0ADB  0821               	movf	??___bmul,w
  5214     0ADC  07A2               	addwf	___bmul@product,f
  5215     0ADD                     l2469:
  5216     0ADD  1003               	clrc
  5217     0ADE  0DA0               	rlf	___bmul@multiplicand,f
  5218     0ADF                     l2471:
  5219     0ADF  1003               	clrc
  5220     0AE0  0CA3               	rrf	___bmul@multiplier,f
  5221     0AE1  0823               	movf	___bmul@multiplier,w
  5222     0AE2  1D03               	btfss	3,2
  5223     0AE3  2AE5               	goto	u2501
  5224     0AE4  2AE6               	goto	u2500
  5225     0AE5                     u2501:
  5226     0AE5  2AD5               	goto	l2465
  5227     0AE6                     u2500:
  5228     0AE6                     l2473:
  5229     0AE6  0822               	movf	___bmul@product,w
  5230     0AE7                     l506:
  5231     0AE7  0008               	return
  5232     0AE8                     __end_of___bmul:
  5233                           
  5234                           	psect	text17
  5235     0A60                     __ptext17:	
  5236 ;; *************** function _dht11_config *****************
  5237 ;; Defined at:
  5238 ;;		line 83 in file "C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Communicator/d
      +ht11.c"
  5239 ;; Parameters:    Size  Location     Type
  5240 ;;		None
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;		None
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  1    wreg      void 
  5245 ;; Registers used:
  5246 ;;		None
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5252 ;;      Params:         0       0       0       0       0
  5253 ;;      Locals:         0       0       0       0       0
  5254 ;;      Temps:          0       0       0       0       0
  5255 ;;      Totals:         0       0       0       0       0
  5256 ;;Total ram usage:        0 bytes
  5257 ;; Hardware stack levels used: 1
  5258 ;; Hardware stack levels required when called: 2
  5259 ;; This function calls:
  5260 ;;		Nothing
  5261 ;; This function is called by:
  5262 ;;		_main
  5263 ;; This function uses a non-reentrant model
  5264 ;;
  5265                           
  5266     0A60                     _dht11_config:	
  5267                           ;psect for function _dht11_config
  5268                           
  5269     0A60                     l2621:	
  5270                           ;incstack = 0
  5271                           ; Regs used in _dht11_config: []
  5272                           
  5273                           
  5274                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 84:  TRISAbits.TRISA4 = 1;;
  5275     0A60  1683               	bsf	3,5	;RP0=1, select bank1
  5276     0A61  1303               	bcf	3,6	;RP1=0, select bank1
  5277     0A62  1605               	bsf	5,4	;volatile
  5278                           
  5279                           ;C:/Users/kirby/Documents/University Stuff/2023S1/Electronica Digital 2/Proyecto/Code/Co
      +                          mmunicator/dht11.c: 85:     OPTION_REGbits.T0CS = 0; OPTION_REGbits.PSA = 1;
  5280     0A63  1281               	bcf	1,5	;volatile
  5281     0A64  1581               	bsf	1,3	;volatile
  5282     0A65                     l340:
  5283     0A65  0008               	return
  5284     0A66                     __end_of_dht11_config:
  5285                           
  5286                           	psect	text18
  5287     0BF4                     __ptext18:	
  5288 ;; *************** function _adc_setup *****************
  5289 ;; Defined at:
  5290 ;;		line 16 in file "adc.c"
  5291 ;; Parameters:    Size  Location     Type
  5292 ;;  inter           1    wreg     _Bool 
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;  inter           1    1[BANK0 ] _Bool 
  5295 ;; Return value:  Size  Location     Type
  5296 ;;                  1    wreg      void 
  5297 ;; Registers used:
  5298 ;;		wreg, status,2, status,0
  5299 ;; Tracked objects:
  5300 ;;		On entry : 0/0
  5301 ;;		On exit  : 0/0
  5302 ;;		Unchanged: 0/0
  5303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5304 ;;      Params:         0       0       0       0       0
  5305 ;;      Locals:         0       1       0       0       0
  5306 ;;      Temps:          0       1       0       0       0
  5307 ;;      Totals:         0       2       0       0       0
  5308 ;;Total ram usage:        2 bytes
  5309 ;; Hardware stack levels used: 1
  5310 ;; Hardware stack levels required when called: 2
  5311 ;; This function calls:
  5312 ;;		Nothing
  5313 ;; This function is called by:
  5314 ;;		_main
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           
  5318     0BF4                     _adc_setup:	
  5319                           ;psect for function _adc_setup
  5320                           
  5321                           
  5322                           ;incstack = 0
  5323                           ; Regs used in _adc_setup: [wreg+status,2+status,0]
  5324                           ;adc_setup@inter stored from wreg
  5325     0BF4  1283               	bcf	3,5	;RP0=0, select bank0
  5326     0BF5  1303               	bcf	3,6	;RP1=0, select bank0
  5327     0BF6  00A1               	movwf	adc_setup@inter
  5328     0BF7                     l2623:
  5329                           
  5330                           ;adc.c: 17:     if (inter == 1) {
  5331     0BF7  0321               	decf	adc_setup@inter,w
  5332     0BF8  1D03               	btfss	3,2
  5333     0BF9  2BFB               	goto	u2751
  5334     0BFA  2BFC               	goto	u2750
  5335     0BFB                     u2751:
  5336     0BFB  2C02               	goto	l238
  5337     0BFC                     u2750:
  5338     0BFC                     l2625:
  5339                           
  5340                           ;adc.c: 18:     INTCONbits.GIE = 1;
  5341     0BFC  178B               	bsf	11,7	;volatile
  5342                           
  5343                           ;adc.c: 19:     INTCONbits.PEIE = 1;
  5344     0BFD  170B               	bsf	11,6	;volatile
  5345                           
  5346                           ;adc.c: 20:     PIE1bits.ADIE = 0;}
  5347     0BFE  1683               	bsf	3,5	;RP0=1, select bank1
  5348     0BFF  1303               	bcf	3,6	;RP1=0, select bank1
  5349     0C00  130C               	bcf	12,6	;volatile
  5350     0C01  2C05               	goto	l239
  5351     0C02                     l238:	
  5352                           ;adc.c: 21:     else {
  5353                           
  5354                           
  5355                           ;adc.c: 22:     PIE1bits.ADIE = 0;}
  5356     0C02  1683               	bsf	3,5	;RP0=1, select bank1
  5357     0C03  1303               	bcf	3,6	;RP1=0, select bank1
  5358     0C04  130C               	bcf	12,6	;volatile
  5359     0C05                     l239:
  5360                           
  5361                           ;adc.c: 24:     ADCON1bits.ADFM = 0;
  5362     0C05  139F               	bcf	31,7	;volatile
  5363                           
  5364                           ;adc.c: 25:     ADCON1bits.VCFG0 = 0;
  5365     0C06  121F               	bcf	31,4	;volatile
  5366                           
  5367                           ;adc.c: 26:     ADCON1bits.VCFG1 = 0;
  5368     0C07  129F               	bcf	31,5	;volatile
  5369     0C08                     l2627:
  5370                           
  5371                           ;adc.c: 28:     ANSEL = 0x00;
  5372     0C08  1683               	bsf	3,5	;RP0=1, select bank3
  5373     0C09  1703               	bsf	3,6	;RP1=1, select bank3
  5374     0C0A  0188               	clrf	8	;volatile
  5375                           
  5376                           ;adc.c: 29:     ANSELH = 0x00;
  5377     0C0B  0189               	clrf	9	;volatile
  5378     0C0C                     l2629:
  5379                           
  5380                           ;adc.c: 31:     ADCON0bits.ADCS = 1;
  5381     0C0C  1283               	bcf	3,5	;RP0=0, select bank0
  5382     0C0D  1303               	bcf	3,6	;RP1=0, select bank0
  5383     0C0E  081F               	movf	31,w	;volatile
  5384     0C0F  393F               	andlw	-193
  5385     0C10  3840               	iorlw	64
  5386     0C11  009F               	movwf	31	;volatile
  5387     0C12                     l2631:
  5388                           
  5389                           ;adc.c: 32:     ADCON0bits.CHS = 0;
  5390     0C12  30C3               	movlw	-61
  5391     0C13  059F               	andwf	31,f	;volatile
  5392     0C14                     l2633:
  5393                           
  5394                           ;adc.c: 33:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  5395     0C14  3020               	movlw	32
  5396     0C15  1283               	bcf	3,5	;RP0=0, select bank0
  5397     0C16  1303               	bcf	3,6	;RP1=0, select bank0
  5398     0C17  00A0               	movwf	??_adc_setup
  5399     0C18                     u3097:
  5400     0C18  0BA0               	decfsz	??_adc_setup,f
  5401     0C19  2C18               	goto	u3097
  5402     0C1A  0000               	nop
  5403     0C1B                     l2635:
  5404                           
  5405                           ;adc.c: 34:     ADCON0bits.ADON = 1;
  5406     0C1B  1283               	bcf	3,5	;RP0=0, select bank0
  5407     0C1C  1303               	bcf	3,6	;RP1=0, select bank0
  5408     0C1D  141F               	bsf	31,0	;volatile
  5409     0C1E                     l2637:
  5410                           
  5411                           ;adc.c: 35:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  5412     0C1E  3020               	movlw	32
  5413     0C1F  1283               	bcf	3,5	;RP0=0, select bank0
  5414     0C20  1303               	bcf	3,6	;RP1=0, select bank0
  5415     0C21  00A0               	movwf	??_adc_setup
  5416     0C22                     u3107:
  5417     0C22  0BA0               	decfsz	??_adc_setup,f
  5418     0C23  2C22               	goto	u3107
  5419     0C24  0000               	nop
  5420     0C25                     l240:
  5421     0C25  0008               	return
  5422     0C26                     __end_of_adc_setup:
  5423                           
  5424                           	psect	text19
  5425     0689                     __ptext19:	
  5426 ;; *************** function _adc_channel *****************
  5427 ;; Defined at:
  5428 ;;		line 41 in file "adc.c"
  5429 ;; Parameters:    Size  Location     Type
  5430 ;;  channel         2    0[BANK0 ] int 
  5431 ;; Auto vars:     Size  Location     Type
  5432 ;;		None
  5433 ;; Return value:  Size  Location     Type
  5434 ;;                  1    wreg      void 
  5435 ;; Registers used:
  5436 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5437 ;; Tracked objects:
  5438 ;;		On entry : 0/0
  5439 ;;		On exit  : 0/0
  5440 ;;		Unchanged: 0/0
  5441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5442 ;;      Params:         0       2       0       0       0
  5443 ;;      Locals:         0       0       0       0       0
  5444 ;;      Temps:          0       0       0       0       0
  5445 ;;      Totals:         0       2       0       0       0
  5446 ;;Total ram usage:        2 bytes
  5447 ;; Hardware stack levels used: 1
  5448 ;; Hardware stack levels required when called: 2
  5449 ;; This function calls:
  5450 ;;		Nothing
  5451 ;; This function is called by:
  5452 ;;		_main
  5453 ;; This function uses a non-reentrant model
  5454 ;;
  5455                           
  5456     0689                     _adc_channel:	
  5457                           ;psect for function _adc_channel
  5458                           
  5459     0689                     l2639:	
  5460                           ;incstack = 0
  5461                           ; Regs used in _adc_channel: [wreg-fsr0h+status,2+status,0]
  5462                           
  5463                           
  5464                           ;adc.c: 42:     switch (channel)
  5465     0689  2EEC               	goto	l2643
  5466     068A                     l244:	
  5467                           ;adc.c: 43:     {case 0:
  5468                           
  5469                           
  5470                           ;adc.c: 44:         ANSELbits.ANS0 = 1;
  5471     068A  1683               	bsf	3,5	;RP0=1, select bank3
  5472     068B  1703               	bsf	3,6	;RP1=1, select bank3
  5473     068C  1408               	bsf	8,0	;volatile
  5474                           
  5475                           ;adc.c: 45:         TRISAbits.TRISA0 = 1;
  5476     068D  1683               	bsf	3,5	;RP0=1, select bank1
  5477     068E  1303               	bcf	3,6	;RP1=0, select bank1
  5478     068F  1405               	bsf	5,0	;volatile
  5479                           
  5480                           ;adc.c: 46:         break;
  5481     0690  2F1F               	goto	l260
  5482     0691                     l246:	
  5483                           ;adc.c: 47:     case 1:
  5484                           
  5485                           
  5486                           ;adc.c: 48:         ANSELbits.ANS1 = 1;
  5487     0691  1683               	bsf	3,5	;RP0=1, select bank3
  5488     0692  1703               	bsf	3,6	;RP1=1, select bank3
  5489     0693  1488               	bsf	8,1	;volatile
  5490                           
  5491                           ;adc.c: 49:         TRISAbits.TRISA1 = 1;
  5492     0694  1683               	bsf	3,5	;RP0=1, select bank1
  5493     0695  1303               	bcf	3,6	;RP1=0, select bank1
  5494     0696  1485               	bsf	5,1	;volatile
  5495                           
  5496                           ;adc.c: 50:         break;
  5497     0697  2F1F               	goto	l260
  5498     0698                     l247:	
  5499                           ;adc.c: 51:     case 2:
  5500                           
  5501                           
  5502                           ;adc.c: 52:         ANSELbits.ANS2 = 1;
  5503     0698  1683               	bsf	3,5	;RP0=1, select bank3
  5504     0699  1703               	bsf	3,6	;RP1=1, select bank3
  5505     069A  1508               	bsf	8,2	;volatile
  5506                           
  5507                           ;adc.c: 53:         TRISAbits.TRISA2 = 1;
  5508     069B  1683               	bsf	3,5	;RP0=1, select bank1
  5509     069C  1303               	bcf	3,6	;RP1=0, select bank1
  5510     069D  1505               	bsf	5,2	;volatile
  5511                           
  5512                           ;adc.c: 54:         break;
  5513     069E  2F1F               	goto	l260
  5514     069F                     l248:	
  5515                           ;adc.c: 55:     case 3:
  5516                           
  5517                           
  5518                           ;adc.c: 56:         ANSELbits.ANS3 = 1;
  5519     069F  1683               	bsf	3,5	;RP0=1, select bank3
  5520     06A0  1703               	bsf	3,6	;RP1=1, select bank3
  5521     06A1  1588               	bsf	8,3	;volatile
  5522                           
  5523                           ;adc.c: 57:         TRISAbits.TRISA3 = 1;
  5524     06A2  1683               	bsf	3,5	;RP0=1, select bank1
  5525     06A3  1303               	bcf	3,6	;RP1=0, select bank1
  5526     06A4  1585               	bsf	5,3	;volatile
  5527                           
  5528                           ;adc.c: 58:         break;
  5529     06A5  2F1F               	goto	l260
  5530     06A6                     l249:	
  5531                           ;adc.c: 59:     case 4:
  5532                           
  5533                           
  5534                           ;adc.c: 60:         ANSELbits.ANS4 = 1;
  5535     06A6  1683               	bsf	3,5	;RP0=1, select bank3
  5536     06A7  1703               	bsf	3,6	;RP1=1, select bank3
  5537     06A8  1608               	bsf	8,4	;volatile
  5538                           
  5539                           ;adc.c: 61:         TRISAbits.TRISA5 = 1;
  5540     06A9  1683               	bsf	3,5	;RP0=1, select bank1
  5541     06AA  1303               	bcf	3,6	;RP1=0, select bank1
  5542     06AB  1685               	bsf	5,5	;volatile
  5543                           
  5544                           ;adc.c: 62:         break;
  5545     06AC  2F1F               	goto	l260
  5546     06AD                     l250:	
  5547                           ;adc.c: 63:     case 5:
  5548                           
  5549                           
  5550                           ;adc.c: 64:         ANSELbits.ANS5 = 1;
  5551     06AD  1683               	bsf	3,5	;RP0=1, select bank3
  5552     06AE  1703               	bsf	3,6	;RP1=1, select bank3
  5553     06AF  1688               	bsf	8,5	;volatile
  5554                           
  5555                           ;adc.c: 65:         TRISEbits.TRISE0 = 1;
  5556     06B0  1683               	bsf	3,5	;RP0=1, select bank1
  5557     06B1  1303               	bcf	3,6	;RP1=0, select bank1
  5558     06B2  1409               	bsf	9,0	;volatile
  5559                           
  5560                           ;adc.c: 66:         break;
  5561     06B3  2F1F               	goto	l260
  5562     06B4                     l251:	
  5563                           ;adc.c: 67:     case 6:
  5564                           
  5565                           
  5566                           ;adc.c: 68:         ANSELbits.ANS6 = 1;
  5567     06B4  1683               	bsf	3,5	;RP0=1, select bank3
  5568     06B5  1703               	bsf	3,6	;RP1=1, select bank3
  5569     06B6  1708               	bsf	8,6	;volatile
  5570                           
  5571                           ;adc.c: 69:         TRISEbits.TRISE1 = 1;
  5572     06B7  1683               	bsf	3,5	;RP0=1, select bank1
  5573     06B8  1303               	bcf	3,6	;RP1=0, select bank1
  5574     06B9  1489               	bsf	9,1	;volatile
  5575                           
  5576                           ;adc.c: 70:         break;
  5577     06BA  2F1F               	goto	l260
  5578     06BB                     l252:	
  5579                           ;adc.c: 71:     case 7:
  5580                           
  5581                           
  5582                           ;adc.c: 72:         ANSELbits.ANS7 = 1;
  5583     06BB  1683               	bsf	3,5	;RP0=1, select bank3
  5584     06BC  1703               	bsf	3,6	;RP1=1, select bank3
  5585     06BD  1788               	bsf	8,7	;volatile
  5586                           
  5587                           ;adc.c: 73:         TRISEbits.TRISE2 = 1;
  5588     06BE  1683               	bsf	3,5	;RP0=1, select bank1
  5589     06BF  1303               	bcf	3,6	;RP1=0, select bank1
  5590     06C0  1509               	bsf	9,2	;volatile
  5591                           
  5592                           ;adc.c: 74:         break;
  5593     06C1  2F1F               	goto	l260
  5594     06C2                     l253:	
  5595                           ;adc.c: 75:     case 8:
  5596                           
  5597                           
  5598                           ;adc.c: 76:         ANSELHbits.ANS8 = 1;
  5599     06C2  1683               	bsf	3,5	;RP0=1, select bank3
  5600     06C3  1703               	bsf	3,6	;RP1=1, select bank3
  5601     06C4  1409               	bsf	9,0	;volatile
  5602                           
  5603                           ;adc.c: 77:         TRISBbits.TRISB2 = 1;
  5604     06C5  1683               	bsf	3,5	;RP0=1, select bank1
  5605     06C6  1303               	bcf	3,6	;RP1=0, select bank1
  5606     06C7  1506               	bsf	6,2	;volatile
  5607                           
  5608                           ;adc.c: 78:         break;
  5609     06C8  2F1F               	goto	l260
  5610     06C9                     l254:	
  5611                           ;adc.c: 79:     case 9:
  5612                           
  5613                           
  5614                           ;adc.c: 80:         ANSELHbits.ANS9 = 1;
  5615     06C9  1683               	bsf	3,5	;RP0=1, select bank3
  5616     06CA  1703               	bsf	3,6	;RP1=1, select bank3
  5617     06CB  1489               	bsf	9,1	;volatile
  5618                           
  5619                           ;adc.c: 81:         TRISBbits.TRISB3 = 1;
  5620     06CC  1683               	bsf	3,5	;RP0=1, select bank1
  5621     06CD  1303               	bcf	3,6	;RP1=0, select bank1
  5622     06CE  1586               	bsf	6,3	;volatile
  5623                           
  5624                           ;adc.c: 82:         break;
  5625     06CF  2F1F               	goto	l260
  5626     06D0                     l255:	
  5627                           ;adc.c: 83:     case 10:
  5628                           
  5629                           
  5630                           ;adc.c: 84:         ANSELHbits.ANS10 = 1;
  5631     06D0  1683               	bsf	3,5	;RP0=1, select bank3
  5632     06D1  1703               	bsf	3,6	;RP1=1, select bank3
  5633     06D2  1509               	bsf	9,2	;volatile
  5634                           
  5635                           ;adc.c: 85:         TRISBbits.TRISB1 = 1;
  5636     06D3  1683               	bsf	3,5	;RP0=1, select bank1
  5637     06D4  1303               	bcf	3,6	;RP1=0, select bank1
  5638     06D5  1486               	bsf	6,1	;volatile
  5639                           
  5640                           ;adc.c: 86:         break;
  5641     06D6  2F1F               	goto	l260
  5642     06D7                     l256:	
  5643                           ;adc.c: 87:     case 11:
  5644                           
  5645                           
  5646                           ;adc.c: 88:         ANSELHbits.ANS11 = 1;
  5647     06D7  1683               	bsf	3,5	;RP0=1, select bank3
  5648     06D8  1703               	bsf	3,6	;RP1=1, select bank3
  5649     06D9  1589               	bsf	9,3	;volatile
  5650                           
  5651                           ;adc.c: 89:         TRISBbits.TRISB4 = 1;
  5652     06DA  1683               	bsf	3,5	;RP0=1, select bank1
  5653     06DB  1303               	bcf	3,6	;RP1=0, select bank1
  5654     06DC  1606               	bsf	6,4	;volatile
  5655                           
  5656                           ;adc.c: 90:         break;
  5657     06DD  2F1F               	goto	l260
  5658     06DE                     l257:	
  5659                           ;adc.c: 91:     case 12:
  5660                           
  5661                           
  5662                           ;adc.c: 92:         ANSELHbits.ANS12 = 1;
  5663     06DE  1683               	bsf	3,5	;RP0=1, select bank3
  5664     06DF  1703               	bsf	3,6	;RP1=1, select bank3
  5665     06E0  1609               	bsf	9,4	;volatile
  5666                           
  5667                           ;adc.c: 93:         TRISBbits.TRISB0 = 1;
  5668     06E1  1683               	bsf	3,5	;RP0=1, select bank1
  5669     06E2  1303               	bcf	3,6	;RP1=0, select bank1
  5670     06E3  1406               	bsf	6,0	;volatile
  5671                           
  5672                           ;adc.c: 94:         break;
  5673     06E4  2F1F               	goto	l260
  5674     06E5                     l258:	
  5675                           ;adc.c: 95:     case 13:
  5676                           
  5677                           
  5678                           ;adc.c: 96:         ANSELHbits.ANS13 = 1;
  5679     06E5  1683               	bsf	3,5	;RP0=1, select bank3
  5680     06E6  1703               	bsf	3,6	;RP1=1, select bank3
  5681     06E7  1689               	bsf	9,5	;volatile
  5682                           
  5683                           ;adc.c: 97:         TRISBbits.TRISB5 = 1;
  5684     06E8  1683               	bsf	3,5	;RP0=1, select bank1
  5685     06E9  1303               	bcf	3,6	;RP1=0, select bank1
  5686     06EA  1686               	bsf	6,5	;volatile
  5687                           
  5688                           ;adc.c: 98:         break;
  5689     06EB  2F1F               	goto	l260
  5690     06EC                     l2643:
  5691                           
  5692                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5693                           ; Switch size 1, requested type "simple"
  5694                           ; Number of cases is 1, Range of values is 0 to 0
  5695                           ; switch strategies available:
  5696                           ; Name         Instructions Cycles
  5697                           ; simple_byte            4     3 (average)
  5698                           ; direct_byte           11     8 (fixed)
  5699                           ; jumptable            260     6 (fixed)
  5700                           ;	Chosen strategy is simple_byte
  5701     06EC  1283               	bcf	3,5	;RP0=0, select bank0
  5702     06ED  1303               	bcf	3,6	;RP1=0, select bank0
  5703     06EE  0821               	movf	adc_channel@channel+1,w
  5704     06EF  3A00               	xorlw	0	; case 0
  5705     06F0  1903               	skipnz
  5706     06F1  2EF3               	goto	l2991
  5707     06F2  2F1F               	goto	l260
  5708     06F3                     l2991:
  5709                           
  5710                           ; Switch size 1, requested type "simple"
  5711                           ; Number of cases is 14, Range of values is 0 to 13
  5712                           ; switch strategies available:
  5713                           ; Name         Instructions Cycles
  5714                           ; simple_byte           43    22 (average)
  5715                           ; direct_byte           50     8 (fixed)
  5716                           ; jumptable            260     6 (fixed)
  5717                           ;	Chosen strategy is simple_byte
  5718     06F3  0820               	movf	adc_channel@channel,w
  5719     06F4  3A00               	xorlw	0	; case 0
  5720     06F5  1903               	skipnz
  5721     06F6  2E8A               	goto	l244
  5722     06F7  3A01               	xorlw	1	; case 1
  5723     06F8  1903               	skipnz
  5724     06F9  2E91               	goto	l246
  5725     06FA  3A03               	xorlw	3	; case 2
  5726     06FB  1903               	skipnz
  5727     06FC  2E98               	goto	l247
  5728     06FD  3A01               	xorlw	1	; case 3
  5729     06FE  1903               	skipnz
  5730     06FF  2E9F               	goto	l248
  5731     0700  3A07               	xorlw	7	; case 4
  5732     0701  1903               	skipnz
  5733     0702  2EA6               	goto	l249
  5734     0703  3A01               	xorlw	1	; case 5
  5735     0704  1903               	skipnz
  5736     0705  2EAD               	goto	l250
  5737     0706  3A03               	xorlw	3	; case 6
  5738     0707  1903               	skipnz
  5739     0708  2EB4               	goto	l251
  5740     0709  3A01               	xorlw	1	; case 7
  5741     070A  1903               	skipnz
  5742     070B  2EBB               	goto	l252
  5743     070C  3A0F               	xorlw	15	; case 8
  5744     070D  1903               	skipnz
  5745     070E  2EC2               	goto	l253
  5746     070F  3A01               	xorlw	1	; case 9
  5747     0710  1903               	skipnz
  5748     0711  2EC9               	goto	l254
  5749     0712  3A03               	xorlw	3	; case 10
  5750     0713  1903               	skipnz
  5751     0714  2ED0               	goto	l255
  5752     0715  3A01               	xorlw	1	; case 11
  5753     0716  1903               	skipnz
  5754     0717  2ED7               	goto	l256
  5755     0718  3A07               	xorlw	7	; case 12
  5756     0719  1903               	skipnz
  5757     071A  2EDE               	goto	l257
  5758     071B  3A01               	xorlw	1	; case 13
  5759     071C  1903               	skipnz
  5760     071D  2EE5               	goto	l258
  5761     071E  2F1F               	goto	l260
  5762     071F                     l260:
  5763     071F  0008               	return
  5764     0720                     __end_of_adc_channel:
  5765                           
  5766                           	psect	text20
  5767     0ABB                     __ptext20:	
  5768 ;; *************** function _adc_RO *****************
  5769 ;; Defined at:
  5770 ;;		line 119 in file "adc.c"
  5771 ;; Parameters:    Size  Location     Type
  5772 ;;  channel         1    wreg     unsigned char 
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;  channel         1    3[BANK0 ] unsigned char 
  5775 ;; Return value:  Size  Location     Type
  5776 ;;                  1    wreg      unsigned char 
  5777 ;; Registers used:
  5778 ;;		wreg, status,2, status,0, pclath, cstack
  5779 ;; Tracked objects:
  5780 ;;		On entry : 0/0
  5781 ;;		On exit  : 0/0
  5782 ;;		Unchanged: 0/0
  5783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5784 ;;      Params:         0       0       0       0       0
  5785 ;;      Locals:         0       1       0       0       0
  5786 ;;      Temps:          0       1       0       0       0
  5787 ;;      Totals:         0       2       0       0       0
  5788 ;;Total ram usage:        2 bytes
  5789 ;; Hardware stack levels used: 1
  5790 ;; Hardware stack levels required when called: 3
  5791 ;; This function calls:
  5792 ;;		_adc_output
  5793 ;;		_adc_read
  5794 ;; This function is called by:
  5795 ;;		_main
  5796 ;;		_adc_volt
  5797 ;;		_adc_mv
  5798 ;; This function uses a non-reentrant model
  5799 ;;
  5800                           
  5801     0ABB                     _adc_RO:	
  5802                           ;psect for function _adc_RO
  5803                           
  5804                           
  5805                           ;incstack = 0
  5806                           ; Regs used in _adc_RO: [wreg+status,2+status,0+pclath+cstack]
  5807                           ;adc_RO@channel stored from wreg
  5808     0ABB  1283               	bcf	3,5	;RP0=0, select bank0
  5809     0ABC  1303               	bcf	3,6	;RP1=0, select bank0
  5810     0ABD  00A3               	movwf	adc_RO@channel
  5811     0ABE                     l2689:
  5812                           
  5813                           ;adc.c: 120:     adc_read(channel);
  5814     0ABE  0823               	movf	adc_RO@channel,w
  5815     0ABF  120A  158A  228A  120A  158A  	fcall	_adc_read
  5816     0AC4                     l2691:
  5817                           
  5818                           ;adc.c: 121:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  5819     0AC4  300F               	movlw	15
  5820     0AC5  1283               	bcf	3,5	;RP0=0, select bank0
  5821     0AC6  1303               	bcf	3,6	;RP1=0, select bank0
  5822     0AC7  00A2               	movwf	??_adc_RO
  5823     0AC8                     u3117:
  5824     0AC8  0BA2               	decfsz	??_adc_RO,f
  5825     0AC9  2AC8               	goto	u3117
  5826     0ACA  2ACB               	nop2
  5827     0ACB                     l2693:
  5828                           
  5829                           ;adc.c: 122:     return adc_output();
  5830     0ACB  120A  158A  2266  120A  158A  	fcall	_adc_output
  5831     0AD0                     l270:
  5832     0AD0  0008               	return
  5833     0AD1                     __end_of_adc_RO:
  5834                           
  5835                           	psect	text21
  5836     0A8A                     __ptext21:	
  5837 ;; *************** function _adc_read *****************
  5838 ;; Defined at:
  5839 ;;		line 105 in file "adc.c"
  5840 ;; Parameters:    Size  Location     Type
  5841 ;;  channel         1    wreg     unsigned char 
  5842 ;; Auto vars:     Size  Location     Type
  5843 ;;  channel         1    1[BANK0 ] unsigned char 
  5844 ;; Return value:  Size  Location     Type
  5845 ;;                  1    wreg      void 
  5846 ;; Registers used:
  5847 ;;		wreg, status,2, status,0
  5848 ;; Tracked objects:
  5849 ;;		On entry : 0/0
  5850 ;;		On exit  : 0/0
  5851 ;;		Unchanged: 0/0
  5852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5853 ;;      Params:         0       0       0       0       0
  5854 ;;      Locals:         0       1       0       0       0
  5855 ;;      Temps:          0       1       0       0       0
  5856 ;;      Totals:         0       2       0       0       0
  5857 ;;Total ram usage:        2 bytes
  5858 ;; Hardware stack levels used: 1
  5859 ;; Hardware stack levels required when called: 2
  5860 ;; This function calls:
  5861 ;;		Nothing
  5862 ;; This function is called by:
  5863 ;;		_adc_RO
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867     0A8A                     _adc_read:	
  5868                           ;psect for function _adc_read
  5869                           
  5870                           
  5871                           ;incstack = 0
  5872                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  5873                           ;adc_read@channel stored from wreg
  5874     0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  5875     0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  5876     0A8C  00A1               	movwf	adc_read@channel
  5877     0A8D                     l2395:
  5878                           
  5879                           ;adc.c: 106:     ADCON0bits.CHS = channel;
  5880     0A8D  0821               	movf	adc_read@channel,w
  5881     0A8E  00A0               	movwf	??_adc_read
  5882     0A8F  0DA0               	rlf	??_adc_read,f
  5883     0A90  0DA0               	rlf	??_adc_read,f
  5884     0A91  081F               	movf	31,w	;volatile
  5885     0A92  0620               	xorwf	??_adc_read,w
  5886     0A93  39C3               	andlw	-61
  5887     0A94  0620               	xorwf	??_adc_read,w
  5888     0A95  009F               	movwf	31	;volatile
  5889     0A96                     l2397:
  5890                           
  5891                           ;adc.c: 107:     ADCON0bits.GO = 1;
  5892     0A96  149F               	bsf	31,1	;volatile
  5893     0A97                     l263:
  5894     0A97  0008               	return
  5895     0A98                     __end_of_adc_read:
  5896                           
  5897                           	psect	text22
  5898     0A66                     __ptext22:	
  5899 ;; *************** function _adc_output *****************
  5900 ;; Defined at:
  5901 ;;		line 112 in file "adc.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;		None
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;		None
  5906 ;; Return value:  Size  Location     Type
  5907 ;;                  1    wreg      unsigned char 
  5908 ;; Registers used:
  5909 ;;		wreg
  5910 ;; Tracked objects:
  5911 ;;		On entry : 0/0
  5912 ;;		On exit  : 0/0
  5913 ;;		Unchanged: 0/0
  5914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5915 ;;      Params:         0       0       0       0       0
  5916 ;;      Locals:         0       0       0       0       0
  5917 ;;      Temps:          0       0       0       0       0
  5918 ;;      Totals:         0       0       0       0       0
  5919 ;;Total ram usage:        0 bytes
  5920 ;; Hardware stack levels used: 1
  5921 ;; Hardware stack levels required when called: 2
  5922 ;; This function calls:
  5923 ;;		Nothing
  5924 ;; This function is called by:
  5925 ;;		_adc_RO
  5926 ;; This function uses a non-reentrant model
  5927 ;;
  5928                           
  5929     0A66                     _adc_output:	
  5930                           ;psect for function _adc_output
  5931                           
  5932     0A66                     l2399:	
  5933                           ;incstack = 0
  5934                           ; Regs used in _adc_output: [wreg]
  5935                           
  5936                           
  5937                           ;adc.c: 113:     if (PIR1bits.ADIF == 1) {
  5938     0A66  1283               	bcf	3,5	;RP0=0, select bank0
  5939     0A67  1303               	bcf	3,6	;RP1=0, select bank0
  5940     0A68  1F0C               	btfss	12,6	;volatile
  5941     0A69  2A6B               	goto	u2371
  5942     0A6A  2A6C               	goto	u2370
  5943     0A6B                     u2371:
  5944     0A6B  2A6D               	goto	l2403
  5945     0A6C                     u2370:
  5946     0A6C                     l2401:
  5947                           
  5948                           ;adc.c: 114:         PIR1bits.ADIF = 0;
  5949     0A6C  130C               	bcf	12,6	;volatile
  5950     0A6D                     l2403:
  5951                           
  5952                           ;adc.c: 116:     return ADRESH;
  5953     0A6D  081E               	movf	30,w	;volatile
  5954     0A6E                     l267:
  5955     0A6E  0008               	return
  5956     0A6F                     __end_of_adc_output:
  5957                           
  5958                           	psect	text23
  5959     0A7C                     __ptext23:	
  5960 ;; *************** function _UART_write_char *****************
  5961 ;; Defined at:
  5962 ;;		line 45 in file "uart.c"
  5963 ;; Parameters:    Size  Location     Type
  5964 ;;  character       1    wreg     unsigned char 
  5965 ;; Auto vars:     Size  Location     Type
  5966 ;;  character       1    0[BANK0 ] unsigned char 
  5967 ;; Return value:  Size  Location     Type
  5968 ;;                  1    wreg      void 
  5969 ;; Registers used:
  5970 ;;		wreg
  5971 ;; Tracked objects:
  5972 ;;		On entry : 0/0
  5973 ;;		On exit  : 0/0
  5974 ;;		Unchanged: 0/0
  5975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5976 ;;      Params:         0       0       0       0       0
  5977 ;;      Locals:         0       1       0       0       0
  5978 ;;      Temps:          0       0       0       0       0
  5979 ;;      Totals:         0       1       0       0       0
  5980 ;;Total ram usage:        1 bytes
  5981 ;; Hardware stack levels used: 1
  5982 ;; Hardware stack levels required when called: 2
  5983 ;; This function calls:
  5984 ;;		Nothing
  5985 ;; This function is called by:
  5986 ;;		_main
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989                           
  5990     0A7C                     _UART_write_char:	
  5991                           ;psect for function _UART_write_char
  5992                           
  5993                           
  5994                           ;incstack = 0
  5995                           ; Regs used in _UART_write_char: [wreg]
  5996                           ;UART_write_char@character stored from wreg
  5997     0A7C  1283               	bcf	3,5	;RP0=0, select bank0
  5998     0A7D  1303               	bcf	3,6	;RP1=0, select bank0
  5999     0A7E  00A0               	movwf	UART_write_char@character
  6000     0A7F                     l2833:
  6001     0A7F                     l301:	
  6002                           ;uart.c: 46:   while (TXSTAbits.TRMT == 0);
  6003                           
  6004     0A7F  1683               	bsf	3,5	;RP0=1, select bank1
  6005     0A80  1303               	bcf	3,6	;RP1=0, select bank1
  6006     0A81  1C98               	btfss	24,1	;volatile
  6007     0A82  2A84               	goto	u3021
  6008     0A83  2A85               	goto	u3020
  6009     0A84                     u3021:
  6010     0A84  2A7F               	goto	l301
  6011     0A85                     u3020:
  6012     0A85                     l2835:
  6013                           
  6014                           ;uart.c: 47:   TXREG = character;
  6015     0A85  1283               	bcf	3,5	;RP0=0, select bank0
  6016     0A86  1303               	bcf	3,6	;RP1=0, select bank0
  6017     0A87  0820               	movf	UART_write_char@character,w
  6018     0A88  0099               	movwf	25	;volatile
  6019     0A89                     l304:
  6020     0A89  0008               	return
  6021     0A8A                     __end_of_UART_write_char:
  6022                           
  6023                           	psect	text24
  6024     0B1F                     __ptext24:	
  6025 ;; *************** function _UART_TX_config *****************
  6026 ;; Defined at:
  6027 ;;		line 29 in file "uart.c"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;  baudrate        2    0[BANK0 ] unsigned int 
  6030 ;; Auto vars:     Size  Location     Type
  6031 ;;		None
  6032 ;; Return value:  Size  Location     Type
  6033 ;;                  1    wreg      void 
  6034 ;; Registers used:
  6035 ;;		wreg, status,2
  6036 ;; Tracked objects:
  6037 ;;		On entry : 0/0
  6038 ;;		On exit  : 0/0
  6039 ;;		Unchanged: 0/0
  6040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6041 ;;      Params:         0       2       0       0       0
  6042 ;;      Locals:         0       0       0       0       0
  6043 ;;      Temps:          0       0       0       0       0
  6044 ;;      Totals:         0       2       0       0       0
  6045 ;;Total ram usage:        2 bytes
  6046 ;; Hardware stack levels used: 1
  6047 ;; Hardware stack levels required when called: 2
  6048 ;; This function calls:
  6049 ;;		Nothing
  6050 ;; This function is called by:
  6051 ;;		_main
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055     0B1F                     _UART_TX_config:	
  6056                           ;psect for function _UART_TX_config
  6057                           
  6058     0B1F                     l2607:	
  6059                           ;incstack = 0
  6060                           ; Regs used in _UART_TX_config: [wreg+status,2]
  6061                           
  6062                           
  6063                           ;uart.c: 30:     TXSTAbits.SYNC = 0;
  6064     0B1F  1683               	bsf	3,5	;RP0=1, select bank1
  6065     0B20  1303               	bcf	3,6	;RP1=0, select bank1
  6066     0B21  1218               	bcf	24,4	;volatile
  6067                           
  6068                           ;uart.c: 33:     TXSTAbits.BRGH = 1;
  6069     0B22  1518               	bsf	24,2	;volatile
  6070                           
  6071                           ;uart.c: 34:     BAUDCTLbits.BRG16 = 1;
  6072     0B23  1683               	bsf	3,5	;RP0=1, select bank3
  6073     0B24  1703               	bsf	3,6	;RP1=1, select bank3
  6074     0B25  1587               	bsf	7,3	;volatile
  6075     0B26                     l2609:
  6076                           
  6077                           ;uart.c: 35:     SPBRG = (char)(baudrate & 0x00FF);
  6078     0B26  1283               	bcf	3,5	;RP0=0, select bank0
  6079     0B27  1303               	bcf	3,6	;RP1=0, select bank0
  6080     0B28  0820               	movf	UART_TX_config@baudrate,w
  6081     0B29  1683               	bsf	3,5	;RP0=1, select bank1
  6082     0B2A  1303               	bcf	3,6	;RP1=0, select bank1
  6083     0B2B  0099               	movwf	25	;volatile
  6084     0B2C                     l2611:
  6085                           
  6086                           ;uart.c: 36:     SPBRGH = (char)(baudrate >> 8);
  6087     0B2C  1283               	bcf	3,5	;RP0=0, select bank0
  6088     0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  6089     0B2E  0821               	movf	UART_TX_config@baudrate+1,w
  6090     0B2F  1683               	bsf	3,5	;RP0=1, select bank1
  6091     0B30  1303               	bcf	3,6	;RP1=0, select bank1
  6092     0B31  009A               	movwf	26	;volatile
  6093     0B32                     l2613:
  6094                           
  6095                           ;uart.c: 38:     RCSTAbits.SPEN = 1;
  6096     0B32  1283               	bcf	3,5	;RP0=0, select bank0
  6097     0B33  1303               	bcf	3,6	;RP1=0, select bank0
  6098     0B34  1798               	bsf	24,7	;volatile
  6099     0B35                     l2615:
  6100                           
  6101                           ;uart.c: 39:     RCSTAbits.RX9 = 0;
  6102     0B35  1318               	bcf	24,6	;volatile
  6103     0B36                     l2617:
  6104                           
  6105                           ;uart.c: 40:     RCSTAbits.CREN = 1;
  6106     0B36  1618               	bsf	24,4	;volatile
  6107     0B37                     l2619:
  6108                           
  6109                           ;uart.c: 42:     TXSTAbits.TXEN = 1;
  6110     0B37  1683               	bsf	3,5	;RP0=1, select bank1
  6111     0B38  1303               	bcf	3,6	;RP1=0, select bank1
  6112     0B39  1698               	bsf	24,5	;volatile
  6113     0B3A                     l298:
  6114     0B3A  0008               	return
  6115     0B3B                     __end_of_UART_TX_config:
  6116                           
  6117                           	psect	text25
  6118     0AE8                     __ptext25:	
  6119 ;; *************** function _UART_RX_config *****************
  6120 ;; Defined at:
  6121 ;;		line 13 in file "uart.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;  baudrate        2    0[BANK0 ] unsigned int 
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;		None
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  1    wreg      void 
  6128 ;; Registers used:
  6129 ;;		wreg, status,2
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6135 ;;      Params:         0       2       0       0       0
  6136 ;;      Locals:         0       0       0       0       0
  6137 ;;      Temps:          0       0       0       0       0
  6138 ;;      Totals:         0       2       0       0       0
  6139 ;;Total ram usage:        2 bytes
  6140 ;; Hardware stack levels used: 1
  6141 ;; Hardware stack levels required when called: 2
  6142 ;; This function calls:
  6143 ;;		Nothing
  6144 ;; This function is called by:
  6145 ;;		_main
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149     0AE8                     _UART_RX_config:	
  6150                           ;psect for function _UART_RX_config
  6151                           
  6152     0AE8                     l2591:	
  6153                           ;incstack = 0
  6154                           ; Regs used in _UART_RX_config: [wreg+status,2]
  6155                           
  6156                           
  6157                           ;uart.c: 14:     TXSTAbits.SYNC = 0;
  6158     0AE8  1683               	bsf	3,5	;RP0=1, select bank1
  6159     0AE9  1303               	bcf	3,6	;RP1=0, select bank1
  6160     0AEA  1218               	bcf	24,4	;volatile
  6161                           
  6162                           ;uart.c: 17:     TXSTAbits.BRGH = 1;
  6163     0AEB  1518               	bsf	24,2	;volatile
  6164                           
  6165                           ;uart.c: 18:     BAUDCTLbits.BRG16 = 1;
  6166     0AEC  1683               	bsf	3,5	;RP0=1, select bank3
  6167     0AED  1703               	bsf	3,6	;RP1=1, select bank3
  6168     0AEE  1587               	bsf	7,3	;volatile
  6169     0AEF                     l2593:
  6170                           
  6171                           ;uart.c: 19:     SPBRG = (char)(baudrate & 0x00FF);
  6172     0AEF  1283               	bcf	3,5	;RP0=0, select bank0
  6173     0AF0  1303               	bcf	3,6	;RP1=0, select bank0
  6174     0AF1  0820               	movf	UART_RX_config@baudrate,w
  6175     0AF2  1683               	bsf	3,5	;RP0=1, select bank1
  6176     0AF3  1303               	bcf	3,6	;RP1=0, select bank1
  6177     0AF4  0099               	movwf	25	;volatile
  6178     0AF5                     l2595:
  6179                           
  6180                           ;uart.c: 20:     SPBRGH = (char)(baudrate >> 8);
  6181     0AF5  1283               	bcf	3,5	;RP0=0, select bank0
  6182     0AF6  1303               	bcf	3,6	;RP1=0, select bank0
  6183     0AF7  0821               	movf	UART_RX_config@baudrate+1,w
  6184     0AF8  1683               	bsf	3,5	;RP0=1, select bank1
  6185     0AF9  1303               	bcf	3,6	;RP1=0, select bank1
  6186     0AFA  009A               	movwf	26	;volatile
  6187     0AFB                     l2597:
  6188                           
  6189                           ;uart.c: 22:     RCSTAbits.SPEN = 1;
  6190     0AFB  1283               	bcf	3,5	;RP0=0, select bank0
  6191     0AFC  1303               	bcf	3,6	;RP1=0, select bank0
  6192     0AFD  1798               	bsf	24,7	;volatile
  6193     0AFE                     l2599:
  6194                           
  6195                           ;uart.c: 23:     RCSTAbits.RX9 = 0;
  6196     0AFE  1318               	bcf	24,6	;volatile
  6197     0AFF                     l2601:
  6198                           
  6199                           ;uart.c: 24:     RCSTAbits.CREN = 1;
  6200     0AFF  1618               	bsf	24,4	;volatile
  6201     0B00                     l2603:
  6202                           
  6203                           ;uart.c: 25:     RCSTAbits.FERR = 0;
  6204     0B00  1118               	bcf	24,2	;volatile
  6205     0B01                     l2605:
  6206                           
  6207                           ;uart.c: 26:     RCSTAbits.OERR = 0;
  6208     0B01  1098               	bcf	24,1	;volatile
  6209     0B02                     l295:
  6210     0B02  0008               	return
  6211     0B03                     __end_of_UART_RX_config:
  6212                           
  6213                           	psect	text26
  6214     0CD5                     __ptext26:	
  6215 ;; *************** function _Lcd_Write_String *****************
  6216 ;; Defined at:
  6217 ;;		line 98 in file "LCD.c"
  6218 ;; Parameters:    Size  Location     Type
  6219 ;;  a               2    5[BANK0 ] PTR unsigned char 
  6220 ;;		 -> main@display_temp(10), main@display_alc(10), main@display_bpm(10), STR_3(3), 
  6221 ;;		 -> STR_2(9), STR_1(5), 
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;  i               2   10[BANK0 ] int 
  6224 ;; Return value:  Size  Location     Type
  6225 ;;                  1    wreg      void 
  6226 ;; Registers used:
  6227 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6233 ;;      Params:         0       2       0       0       0
  6234 ;;      Locals:         0       2       0       0       0
  6235 ;;      Temps:          0       3       0       0       0
  6236 ;;      Totals:         0       7       0       0       0
  6237 ;;Total ram usage:        7 bytes
  6238 ;; Hardware stack levels used: 1
  6239 ;; Hardware stack levels required when called: 4
  6240 ;; This function calls:
  6241 ;;		_Lcd_Write_Char
  6242 ;; This function is called by:
  6243 ;;		_main
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247     0CD5                     _Lcd_Write_String:	
  6248                           ;psect for function _Lcd_Write_String
  6249                           
  6250     0CD5                     l2681:	
  6251                           ;incstack = 0
  6252                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6253                           
  6254                           
  6255                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  6256     0CD5  1283               	bcf	3,5	;RP0=0, select bank0
  6257     0CD6  1303               	bcf	3,6	;RP1=0, select bank0
  6258     0CD7  01AA               	clrf	Lcd_Write_String@i
  6259     0CD8  01AB               	clrf	Lcd_Write_String@i+1
  6260     0CD9  2CFE               	goto	l2687
  6261     0CDA                     l2683:
  6262                           
  6263                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  6264     0CDA  082A               	movf	Lcd_Write_String@i,w
  6265     0CDB  0725               	addwf	Lcd_Write_String@a,w
  6266     0CDC  00A8               	movwf	??_Lcd_Write_String+1
  6267     0CDD  0826               	movf	Lcd_Write_String@a+1,w
  6268     0CDE  00A7               	movwf	??_Lcd_Write_String
  6269     0CDF  1803               	skipnc
  6270     0CE0  0AA7               	incf	??_Lcd_Write_String,f
  6271     0CE1  1FAA               	btfss	Lcd_Write_String@i,7
  6272     0CE2  2CE4               	goto	u2800
  6273     0CE3  03A7               	decf	??_Lcd_Write_String,f
  6274     0CE4                     u2800:
  6275     0CE4  1283               	bcf	3,5	;RP0=0, select bank0
  6276     0CE5  1303               	bcf	3,6	;RP1=0, select bank0
  6277     0CE6  0827               	movf	??_Lcd_Write_String,w
  6278     0CE7  00A9               	movwf	??_Lcd_Write_String+2
  6279     0CE8  0829               	movf	??_Lcd_Write_String+2,w
  6280     0CE9  00FF               	movwf	btemp+1
  6281     0CEA  0828               	movf	??_Lcd_Write_String+1,w
  6282     0CEB  0084               	movwf	4
  6283     0CEC  120A  158A  2000  120A  158A  	fcall	stringtab
  6284     0CF1  120A  158A  2426  120A  158A  	fcall	_Lcd_Write_Char
  6285     0CF6                     l2685:
  6286     0CF6  3001               	movlw	1
  6287     0CF7  1283               	bcf	3,5	;RP0=0, select bank0
  6288     0CF8  1303               	bcf	3,6	;RP1=0, select bank0
  6289     0CF9  07AA               	addwf	Lcd_Write_String@i,f
  6290     0CFA  1803               	skipnc
  6291     0CFB  0AAB               	incf	Lcd_Write_String@i+1,f
  6292     0CFC  3000               	movlw	0
  6293     0CFD  07AB               	addwf	Lcd_Write_String@i+1,f
  6294     0CFE                     l2687:
  6295     0CFE  082A               	movf	Lcd_Write_String@i,w
  6296     0CFF  0725               	addwf	Lcd_Write_String@a,w
  6297     0D00  00A8               	movwf	??_Lcd_Write_String+1
  6298     0D01  0826               	movf	Lcd_Write_String@a+1,w
  6299     0D02  00A7               	movwf	??_Lcd_Write_String
  6300     0D03  1803               	skipnc
  6301     0D04  0AA7               	incf	??_Lcd_Write_String,f
  6302     0D05  1FAA               	btfss	Lcd_Write_String@i,7
  6303     0D06  2D08               	goto	u2810
  6304     0D07  03A7               	decf	??_Lcd_Write_String,f
  6305     0D08                     u2810:
  6306     0D08  1283               	bcf	3,5	;RP0=0, select bank0
  6307     0D09  1303               	bcf	3,6	;RP1=0, select bank0
  6308     0D0A  0827               	movf	??_Lcd_Write_String,w
  6309     0D0B  00A9               	movwf	??_Lcd_Write_String+2
  6310     0D0C  0829               	movf	??_Lcd_Write_String+2,w
  6311     0D0D  00FF               	movwf	btemp+1
  6312     0D0E  0828               	movf	??_Lcd_Write_String+1,w
  6313     0D0F  0084               	movwf	4
  6314     0D10  120A  158A  2000  120A  158A  	fcall	stringtab
  6315     0D15  3A00               	xorlw	0
  6316     0D16  1D03               	skipz
  6317     0D17  2D19               	goto	u2821
  6318     0D18  2D1A               	goto	u2820
  6319     0D19                     u2821:
  6320     0D19  2CDA               	goto	l2683
  6321     0D1A                     u2820:
  6322     0D1A                     l120:
  6323     0D1A  0008               	return
  6324     0D1B                     __end_of_Lcd_Write_String:
  6325                           
  6326                           	psect	text27
  6327     0C26                     __ptext27:	
  6328 ;; *************** function _Lcd_Write_Char *****************
  6329 ;; Defined at:
  6330 ;;		line 83 in file "LCD.c"
  6331 ;; Parameters:    Size  Location     Type
  6332 ;;  a               1    wreg     unsigned char 
  6333 ;; Auto vars:     Size  Location     Type
  6334 ;;  a               1    4[BANK0 ] unsigned char 
  6335 ;;  y               1    3[BANK0 ] unsigned char 
  6336 ;;  temp            1    2[BANK0 ] unsigned char 
  6337 ;; Return value:  Size  Location     Type
  6338 ;;                  1    wreg      void 
  6339 ;; Registers used:
  6340 ;;		wreg, status,2, status,0, pclath, cstack
  6341 ;; Tracked objects:
  6342 ;;		On entry : 0/0
  6343 ;;		On exit  : 0/0
  6344 ;;		Unchanged: 0/0
  6345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6346 ;;      Params:         0       0       0       0       0
  6347 ;;      Locals:         0       3       0       0       0
  6348 ;;      Temps:          0       1       0       0       0
  6349 ;;      Totals:         0       4       0       0       0
  6350 ;;Total ram usage:        4 bytes
  6351 ;; Hardware stack levels used: 1
  6352 ;; Hardware stack levels required when called: 3
  6353 ;; This function calls:
  6354 ;;		_Lcd_Port
  6355 ;; This function is called by:
  6356 ;;		_Lcd_Write_String
  6357 ;; This function uses a non-reentrant model
  6358 ;;
  6359                           
  6360     0C26                     _Lcd_Write_Char:	
  6361                           ;psect for function _Lcd_Write_Char
  6362                           
  6363                           
  6364                           ;incstack = 0
  6365                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  6366                           ;Lcd_Write_Char@a stored from wreg
  6367     0C26  1283               	bcf	3,5	;RP0=0, select bank0
  6368     0C27  1303               	bcf	3,6	;RP1=0, select bank0
  6369     0C28  00A4               	movwf	Lcd_Write_Char@a
  6370     0C29                     l2375:
  6371                           
  6372                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  6373     0C29  0824               	movf	Lcd_Write_Char@a,w
  6374     0C2A  390F               	andlw	15
  6375     0C2B  00A2               	movwf	Lcd_Write_Char@temp
  6376                           
  6377                           ;LCD.c: 86:     y = a & 0xF0;
  6378     0C2C  0824               	movf	Lcd_Write_Char@a,w
  6379     0C2D  39F0               	andlw	240
  6380     0C2E  00A3               	movwf	Lcd_Write_Char@y
  6381     0C2F                     l2377:
  6382                           
  6383                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  6384     0C2F  1508               	bsf	8,2	;volatile
  6385     0C30                     l2379:
  6386                           
  6387                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  6388     0C30  0823               	movf	Lcd_Write_Char@y,w
  6389     0C31  00A1               	movwf	??_Lcd_Write_Char
  6390     0C32  3004               	movlw	4
  6391     0C33                     u2365:
  6392     0C33  1003               	clrc
  6393     0C34  0CA1               	rrf	??_Lcd_Write_Char,f
  6394     0C35  3EFF               	addlw	-1
  6395     0C36  1D03               	skipz
  6396     0C37  2C33               	goto	u2365
  6397     0C38  0821               	movf	??_Lcd_Write_Char,w
  6398     0C39  120A  158A  2359  120A  158A  	fcall	_Lcd_Port
  6399     0C3E                     l2381:
  6400                           
  6401                           ;LCD.c: 89:     RD3 = 1;
  6402     0C3E  1283               	bcf	3,5	;RP0=0, select bank0
  6403     0C3F  1303               	bcf	3,6	;RP1=0, select bank0
  6404     0C40  1588               	bsf	8,3	;volatile
  6405     0C41                     l2383:
  6406                           
  6407                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  6408     0C41  3019               	movlw	25
  6409     0C42  1283               	bcf	3,5	;RP0=0, select bank0
  6410     0C43  1303               	bcf	3,6	;RP1=0, select bank0
  6411     0C44  00A1               	movwf	??_Lcd_Write_Char
  6412     0C45                     u3127:
  6413     0C45  0BA1               	decfsz	??_Lcd_Write_Char,f
  6414     0C46  2C45               	goto	u3127
  6415     0C47  2C48               	nop2
  6416     0C48                     l2385:
  6417                           
  6418                           ;LCD.c: 91:     RD3 = 0;
  6419     0C48  1283               	bcf	3,5	;RP0=0, select bank0
  6420     0C49  1303               	bcf	3,6	;RP1=0, select bank0
  6421     0C4A  1188               	bcf	8,3	;volatile
  6422     0C4B                     l2387:
  6423                           
  6424                           ;LCD.c: 92:     Lcd_Port(temp);
  6425     0C4B  0822               	movf	Lcd_Write_Char@temp,w
  6426     0C4C  120A  158A  2359  120A  158A  	fcall	_Lcd_Port
  6427     0C51                     l2389:
  6428                           
  6429                           ;LCD.c: 93:     RD3 = 1;
  6430     0C51  1283               	bcf	3,5	;RP0=0, select bank0
  6431     0C52  1303               	bcf	3,6	;RP1=0, select bank0
  6432     0C53  1588               	bsf	8,3	;volatile
  6433     0C54                     l2391:
  6434                           
  6435                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  6436     0C54  3019               	movlw	25
  6437     0C55  1283               	bcf	3,5	;RP0=0, select bank0
  6438     0C56  1303               	bcf	3,6	;RP1=0, select bank0
  6439     0C57  00A1               	movwf	??_Lcd_Write_Char
  6440     0C58                     u3137:
  6441     0C58  0BA1               	decfsz	??_Lcd_Write_Char,f
  6442     0C59  2C58               	goto	u3137
  6443     0C5A  2C5B               	nop2
  6444     0C5B                     l2393:
  6445                           
  6446                           ;LCD.c: 95:     RD3 = 0;
  6447     0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  6448     0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  6449     0C5D  1188               	bcf	8,3	;volatile
  6450     0C5E                     l114:
  6451     0C5E  0008               	return
  6452     0C5F                     __end_of_Lcd_Write_Char:
  6453                           
  6454                           	psect	text28
  6455     0D61                     __ptext28:	
  6456 ;; *************** function _Lcd_Set_Cursor *****************
  6457 ;; Defined at:
  6458 ;;		line 48 in file "LCD.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;  a               1    wreg     unsigned char 
  6461 ;;  b               1    4[BANK0 ] unsigned char 
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;  a               1    6[BANK0 ] unsigned char 
  6464 ;;  temp            1    9[BANK0 ] unsigned char 
  6465 ;;  y               1    8[BANK0 ] unsigned char 
  6466 ;;  z               1    7[BANK0 ] unsigned char 
  6467 ;; Return value:  Size  Location     Type
  6468 ;;                  1    wreg      void 
  6469 ;; Registers used:
  6470 ;;		wreg, status,2, status,0, pclath, cstack
  6471 ;; Tracked objects:
  6472 ;;		On entry : 0/0
  6473 ;;		On exit  : 0/0
  6474 ;;		Unchanged: 0/0
  6475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6476 ;;      Params:         0       1       0       0       0
  6477 ;;      Locals:         0       4       0       0       0
  6478 ;;      Temps:          0       1       0       0       0
  6479 ;;      Totals:         0       6       0       0       0
  6480 ;;Total ram usage:        6 bytes
  6481 ;; Hardware stack levels used: 1
  6482 ;; Hardware stack levels required when called: 4
  6483 ;; This function calls:
  6484 ;;		_Lcd_Cmd
  6485 ;; This function is called by:
  6486 ;;		_main
  6487 ;; This function uses a non-reentrant model
  6488 ;;
  6489                           
  6490     0D61                     _Lcd_Set_Cursor:	
  6491                           ;psect for function _Lcd_Set_Cursor
  6492                           
  6493                           
  6494                           ;incstack = 0
  6495                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  6496                           ;Lcd_Set_Cursor@a stored from wreg
  6497     0D61  1283               	bcf	3,5	;RP0=0, select bank0
  6498     0D62  1303               	bcf	3,6	;RP1=0, select bank0
  6499     0D63  00A6               	movwf	Lcd_Set_Cursor@a
  6500     0D64                     l2661:
  6501                           
  6502                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  6503     0D64  0326               	decf	Lcd_Set_Cursor@a,w
  6504     0D65  1D03               	btfss	3,2
  6505     0D66  2D68               	goto	u2761
  6506     0D67  2D69               	goto	u2760
  6507     0D68                     u2761:
  6508     0D68  2D88               	goto	l2671
  6509     0D69                     u2760:
  6510     0D69                     l2663:
  6511                           
  6512                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  6513     0D69  0824               	movf	Lcd_Set_Cursor@b,w
  6514     0D6A  3E7F               	addlw	127
  6515     0D6B  00A9               	movwf	Lcd_Set_Cursor@temp
  6516                           
  6517                           ;LCD.c: 52:         z = temp >> 4;
  6518     0D6C  0829               	movf	Lcd_Set_Cursor@temp,w
  6519     0D6D  00A5               	movwf	??_Lcd_Set_Cursor
  6520     0D6E  3004               	movlw	4
  6521     0D6F                     u2775:
  6522     0D6F  1003               	clrc
  6523     0D70  0CA5               	rrf	??_Lcd_Set_Cursor,f
  6524     0D71  3EFF               	addlw	-1
  6525     0D72  1D03               	skipz
  6526     0D73  2D6F               	goto	u2775
  6527     0D74  0825               	movf	??_Lcd_Set_Cursor,w
  6528     0D75  00A7               	movwf	Lcd_Set_Cursor@z
  6529     0D76                     l2665:
  6530                           
  6531                           ;LCD.c: 53:         y = temp & 0x0F;
  6532     0D76  0829               	movf	Lcd_Set_Cursor@temp,w
  6533     0D77  390F               	andlw	15
  6534     0D78  00A8               	movwf	Lcd_Set_Cursor@y
  6535     0D79                     l2667:
  6536                           
  6537                           ;LCD.c: 54:         Lcd_Cmd(z);
  6538     0D79  0827               	movf	Lcd_Set_Cursor@z,w
  6539     0D7A  120A  158A  2303  120A  158A  	fcall	_Lcd_Cmd
  6540     0D7F                     l2669:
  6541                           
  6542                           ;LCD.c: 55:         Lcd_Cmd(y);
  6543     0D7F  1283               	bcf	3,5	;RP0=0, select bank0
  6544     0D80  1303               	bcf	3,6	;RP1=0, select bank0
  6545     0D81  0828               	movf	Lcd_Set_Cursor@y,w
  6546     0D82  120A  158A  2303  120A  158A  	fcall	_Lcd_Cmd
  6547                           
  6548                           ;LCD.c: 56:     } else if (a == 2) {
  6549     0D87  2DAC               	goto	l108
  6550     0D88                     l2671:
  6551     0D88  3002               	movlw	2
  6552     0D89  0626               	xorwf	Lcd_Set_Cursor@a,w
  6553     0D8A  1D03               	btfss	3,2
  6554     0D8B  2D8D               	goto	u2781
  6555     0D8C  2D8E               	goto	u2780
  6556     0D8D                     u2781:
  6557     0D8D  2DAC               	goto	l108
  6558     0D8E                     u2780:
  6559     0D8E                     l2673:
  6560                           
  6561                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  6562     0D8E  0824               	movf	Lcd_Set_Cursor@b,w
  6563     0D8F  3EBF               	addlw	191
  6564     0D90  00A9               	movwf	Lcd_Set_Cursor@temp
  6565                           
  6566                           ;LCD.c: 58:         z = temp >> 4;
  6567     0D91  0829               	movf	Lcd_Set_Cursor@temp,w
  6568     0D92  00A5               	movwf	??_Lcd_Set_Cursor
  6569     0D93  3004               	movlw	4
  6570     0D94                     u2795:
  6571     0D94  1003               	clrc
  6572     0D95  0CA5               	rrf	??_Lcd_Set_Cursor,f
  6573     0D96  3EFF               	addlw	-1
  6574     0D97  1D03               	skipz
  6575     0D98  2D94               	goto	u2795
  6576     0D99  0825               	movf	??_Lcd_Set_Cursor,w
  6577     0D9A  00A7               	movwf	Lcd_Set_Cursor@z
  6578     0D9B                     l2675:
  6579                           
  6580                           ;LCD.c: 59:         y = temp & 0x0F;
  6581     0D9B  0829               	movf	Lcd_Set_Cursor@temp,w
  6582     0D9C  390F               	andlw	15
  6583     0D9D  00A8               	movwf	Lcd_Set_Cursor@y
  6584     0D9E                     l2677:
  6585                           
  6586                           ;LCD.c: 60:         Lcd_Cmd(z);
  6587     0D9E  0827               	movf	Lcd_Set_Cursor@z,w
  6588     0D9F  120A  158A  2303  120A  158A  	fcall	_Lcd_Cmd
  6589     0DA4                     l2679:
  6590                           
  6591                           ;LCD.c: 61:         Lcd_Cmd(y);
  6592     0DA4  1283               	bcf	3,5	;RP0=0, select bank0
  6593     0DA5  1303               	bcf	3,6	;RP1=0, select bank0
  6594     0DA6  0828               	movf	Lcd_Set_Cursor@y,w
  6595     0DA7  120A  158A  2303  120A  158A  	fcall	_Lcd_Cmd
  6596     0DAC                     l108:
  6597     0DAC  0008               	return
  6598     0DAD                     __end_of_Lcd_Set_Cursor:
  6599                           
  6600                           	psect	text29
  6601     0E57                     __ptext29:	
  6602 ;; *************** function _Lcd_Init *****************
  6603 ;; Defined at:
  6604 ;;		line 65 in file "LCD.c"
  6605 ;; Parameters:    Size  Location     Type
  6606 ;;		None
  6607 ;; Auto vars:     Size  Location     Type
  6608 ;;		None
  6609 ;; Return value:  Size  Location     Type
  6610 ;;                  1    wreg      void 
  6611 ;; Registers used:
  6612 ;;		wreg, status,2, status,0, pclath, cstack
  6613 ;; Tracked objects:
  6614 ;;		On entry : 0/0
  6615 ;;		On exit  : 0/0
  6616 ;;		Unchanged: 0/0
  6617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6618 ;;      Params:         0       0       0       0       0
  6619 ;;      Locals:         0       0       0       0       0
  6620 ;;      Temps:          0       2       0       0       0
  6621 ;;      Totals:         0       2       0       0       0
  6622 ;;Total ram usage:        2 bytes
  6623 ;; Hardware stack levels used: 1
  6624 ;; Hardware stack levels required when called: 4
  6625 ;; This function calls:
  6626 ;;		_Lcd_Cmd
  6627 ;;		_Lcd_Port
  6628 ;; This function is called by:
  6629 ;;		_main
  6630 ;; This function uses a non-reentrant model
  6631 ;;
  6632                           
  6633     0E57                     _Lcd_Init:	
  6634                           ;psect for function _Lcd_Init
  6635                           
  6636     0E57                     l2649:	
  6637                           ;incstack = 0
  6638                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  6639                           
  6640                           
  6641                           ;LCD.c: 66:     Lcd_Port(0x00);
  6642     0E57  3000               	movlw	0
  6643     0E58  120A  158A  2359  120A  158A  	fcall	_Lcd_Port
  6644     0E5D                     l2651:
  6645                           
  6646                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  6647     0E5D  3034               	movlw	52
  6648     0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  6649     0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  6650     0E60  00A5               	movwf	??_Lcd_Init+1
  6651     0E61  30F1               	movlw	241
  6652     0E62  00A4               	movwf	??_Lcd_Init
  6653     0E63                     u3147:
  6654     0E63  0BA4               	decfsz	??_Lcd_Init,f
  6655     0E64  2E63               	goto	u3147
  6656     0E65  0BA5               	decfsz	??_Lcd_Init+1,f
  6657     0E66  2E63               	goto	u3147
  6658     0E67                     l2653:
  6659                           
  6660                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  6661     0E67  3003               	movlw	3
  6662     0E68  120A  158A  2303  120A  158A  	fcall	_Lcd_Cmd
  6663                           
  6664                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  6665     0E6D  300D               	movlw	13
  6666     0E6E  1283               	bcf	3,5	;RP0=0, select bank0
  6667     0E6F  1303               	bcf	3,6	;RP1=0, select bank0
  6668     0E70  00A5               	movwf	??_Lcd_Init+1
  6669     0E71  30FB               	movlw	251
  6670     0E72  00A4               	movwf	??_Lcd_Init
  6671     0E73                     u3157:
  6672     0E73  0BA4               	decfsz	??_Lcd_Init,f
  6673     0E74  2E73               	goto	u3157
  6674     0E75  0BA5               	decfsz	??_Lcd_Init+1,f
  6675     0E76  2E73               	goto	u3157
  6676     0E77                     l2655:
  6677                           
  6678                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  6679     0E77  3003               	movlw	3
  6680     0E78  120A  158A  2303  120A  158A  	fcall	_Lcd_Cmd
  6681     0E7D                     l2657:
  6682                           
  6683                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  6684     0E7D  301D               	movlw	29
  6685     0E7E  1283               	bcf	3,5	;RP0=0, select bank0
  6686     0E7F  1303               	bcf	3,6	;RP1=0, select bank0
  6687     0E80  00A5               	movwf	??_Lcd_Init+1
  6688     0E81  3090               	movlw	144
  6689     0E82  00A4               	movwf	??_Lcd_Init
  6690     0E83                     u3167:
  6691     0E83  0BA4               	decfsz	??_Lcd_Init,f
  6692     0E84  2E83               	goto	u3167
  6693     0E85  0BA5               	decfsz	??_Lcd_Init+1,f
  6694     0E86  2E83               	goto	u3167
  6695     0E87  0000               	nop
  6696                           
  6697                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  6698     0E88  3003               	movlw	3
  6699     0E89  120A  158A  2303  120A  158A  	fcall	_Lcd_Cmd
  6700                           
  6701                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  6702     0E8E  3002               	movlw	2
  6703     0E8F  120A  158A  2303  120A  158A  	fcall	_Lcd_Cmd
  6704                           
  6705                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  6706     0E94  3002               	movlw	2
  6707     0E95  120A  158A  2303  120A  158A  	fcall	_Lcd_Cmd
  6708                           
  6709                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  6710     0E9A  3008               	movlw	8
  6711     0E9B  120A  158A  2303  120A  158A  	fcall	_Lcd_Cmd
  6712                           
  6713                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  6714     0EA0  3000               	movlw	0
  6715     0EA1  120A  158A  2303  120A  158A  	fcall	_Lcd_Cmd
  6716                           
  6717                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  6718     0EA6  300C               	movlw	12
  6719     0EA7  120A  158A  2303  120A  158A  	fcall	_Lcd_Cmd
  6720                           
  6721                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  6722     0EAC  3000               	movlw	0
  6723     0EAD  120A  158A  2303  120A  158A  	fcall	_Lcd_Cmd
  6724                           
  6725                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  6726     0EB2  3006               	movlw	6
  6727     0EB3  120A  158A  2303  120A  158A  	fcall	_Lcd_Cmd
  6728     0EB8                     l111:
  6729     0EB8  0008               	return
  6730     0EB9                     __end_of_Lcd_Init:
  6731                           
  6732                           	psect	text30
  6733     0A6F                     __ptext30:	
  6734 ;; *************** function _Lcd_Clear *****************
  6735 ;; Defined at:
  6736 ;;		line 43 in file "LCD.c"
  6737 ;; Parameters:    Size  Location     Type
  6738 ;;		None
  6739 ;; Auto vars:     Size  Location     Type
  6740 ;;		None
  6741 ;; Return value:  Size  Location     Type
  6742 ;;                  1    wreg      void 
  6743 ;; Registers used:
  6744 ;;		wreg, status,2, status,0, pclath, cstack
  6745 ;; Tracked objects:
  6746 ;;		On entry : 0/0
  6747 ;;		On exit  : 0/0
  6748 ;;		Unchanged: 0/0
  6749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6750 ;;      Params:         0       0       0       0       0
  6751 ;;      Locals:         0       0       0       0       0
  6752 ;;      Temps:          0       0       0       0       0
  6753 ;;      Totals:         0       0       0       0       0
  6754 ;;Total ram usage:        0 bytes
  6755 ;; Hardware stack levels used: 1
  6756 ;; Hardware stack levels required when called: 4
  6757 ;; This function calls:
  6758 ;;		_Lcd_Cmd
  6759 ;; This function is called by:
  6760 ;;		_main
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764     0A6F                     _Lcd_Clear:	
  6765                           ;psect for function _Lcd_Clear
  6766                           
  6767     0A6F                     l2659:	
  6768                           ;incstack = 0
  6769                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  6770                           
  6771                           
  6772                           ;LCD.c: 44:     Lcd_Cmd(0);
  6773     0A6F  3000               	movlw	0
  6774     0A70  120A  158A  2303  120A  158A  	fcall	_Lcd_Cmd
  6775                           
  6776                           ;LCD.c: 45:     Lcd_Cmd(1);
  6777     0A75  3001               	movlw	1
  6778     0A76  120A  158A  2303  120A  158A  	fcall	_Lcd_Cmd
  6779     0A7B                     l102:
  6780     0A7B  0008               	return
  6781     0A7C                     __end_of_Lcd_Clear:
  6782                           
  6783                           	psect	text31
  6784     0B03                     __ptext31:	
  6785 ;; *************** function _Lcd_Cmd *****************
  6786 ;; Defined at:
  6787 ;;		line 35 in file "LCD.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;  a               1    wreg     unsigned char 
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;  a               1    3[BANK0 ] unsigned char 
  6792 ;; Return value:  Size  Location     Type
  6793 ;;                  1    wreg      void 
  6794 ;; Registers used:
  6795 ;;		wreg, status,2, status,0, pclath, cstack
  6796 ;; Tracked objects:
  6797 ;;		On entry : 0/0
  6798 ;;		On exit  : 0/0
  6799 ;;		Unchanged: 0/0
  6800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6801 ;;      Params:         0       0       0       0       0
  6802 ;;      Locals:         0       1       0       0       0
  6803 ;;      Temps:          0       2       0       0       0
  6804 ;;      Totals:         0       3       0       0       0
  6805 ;;Total ram usage:        3 bytes
  6806 ;; Hardware stack levels used: 1
  6807 ;; Hardware stack levels required when called: 3
  6808 ;; This function calls:
  6809 ;;		_Lcd_Port
  6810 ;; This function is called by:
  6811 ;;		_Lcd_Clear
  6812 ;;		_Lcd_Set_Cursor
  6813 ;;		_Lcd_Init
  6814 ;;		_Lcd_Shift_Right
  6815 ;;		_Lcd_Shift_Left
  6816 ;; This function uses a non-reentrant model
  6817 ;;
  6818                           
  6819     0B03                     _Lcd_Cmd:	
  6820                           ;psect for function _Lcd_Cmd
  6821                           
  6822                           
  6823                           ;incstack = 0
  6824                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  6825                           ;Lcd_Cmd@a stored from wreg
  6826     0B03  1283               	bcf	3,5	;RP0=0, select bank0
  6827     0B04  1303               	bcf	3,6	;RP1=0, select bank0
  6828     0B05  00A3               	movwf	Lcd_Cmd@a
  6829     0B06                     l2365:
  6830                           
  6831                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  6832     0B06  1108               	bcf	8,2	;volatile
  6833     0B07                     l2367:
  6834                           
  6835                           ;LCD.c: 37:     Lcd_Port(a);
  6836     0B07  0823               	movf	Lcd_Cmd@a,w
  6837     0B08  120A  158A  2359  120A  158A  	fcall	_Lcd_Port
  6838     0B0D                     l2369:
  6839                           
  6840                           ;LCD.c: 38:     RD3 = 1;
  6841     0B0D  1283               	bcf	3,5	;RP0=0, select bank0
  6842     0B0E  1303               	bcf	3,6	;RP1=0, select bank0
  6843     0B0F  1588               	bsf	8,3	;volatile
  6844     0B10                     l2371:
  6845                           
  6846                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  6847     0B10  300B               	movlw	11
  6848     0B11  1283               	bcf	3,5	;RP0=0, select bank0
  6849     0B12  1303               	bcf	3,6	;RP1=0, select bank0
  6850     0B13  00A2               	movwf	??_Lcd_Cmd+1
  6851     0B14  3061               	movlw	97
  6852     0B15  00A1               	movwf	??_Lcd_Cmd
  6853     0B16                     u3177:
  6854     0B16  0BA1               	decfsz	??_Lcd_Cmd,f
  6855     0B17  2B16               	goto	u3177
  6856     0B18  0BA2               	decfsz	??_Lcd_Cmd+1,f
  6857     0B19  2B16               	goto	u3177
  6858     0B1A  2B1B               	nop2
  6859     0B1B                     l2373:
  6860                           
  6861                           ;LCD.c: 40:     RD3 = 0;
  6862     0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  6863     0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  6864     0B1D  1188               	bcf	8,3	;volatile
  6865     0B1E                     l99:
  6866     0B1E  0008               	return
  6867     0B1F                     __end_of_Lcd_Cmd:
  6868                           
  6869                           	psect	text32
  6870     0B59                     __ptext32:	
  6871 ;; *************** function _Lcd_Port *****************
  6872 ;; Defined at:
  6873 ;;		line 13 in file "LCD.c"
  6874 ;; Parameters:    Size  Location     Type
  6875 ;;  a               1    wreg     unsigned char 
  6876 ;; Auto vars:     Size  Location     Type
  6877 ;;  a               1    0[BANK0 ] unsigned char 
  6878 ;; Return value:  Size  Location     Type
  6879 ;;                  1    wreg      void 
  6880 ;; Registers used:
  6881 ;;		wreg
  6882 ;; Tracked objects:
  6883 ;;		On entry : 0/0
  6884 ;;		On exit  : 0/0
  6885 ;;		Unchanged: 0/0
  6886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6887 ;;      Params:         0       0       0       0       0
  6888 ;;      Locals:         0       1       0       0       0
  6889 ;;      Temps:          0       0       0       0       0
  6890 ;;      Totals:         0       1       0       0       0
  6891 ;;Total ram usage:        1 bytes
  6892 ;; Hardware stack levels used: 1
  6893 ;; Hardware stack levels required when called: 2
  6894 ;; This function calls:
  6895 ;;		Nothing
  6896 ;; This function is called by:
  6897 ;;		_Lcd_Cmd
  6898 ;;		_Lcd_Init
  6899 ;;		_Lcd_Write_Char
  6900 ;; This function uses a non-reentrant model
  6901 ;;
  6902                           
  6903     0B59                     _Lcd_Port:	
  6904                           ;psect for function _Lcd_Port
  6905                           
  6906                           
  6907                           ;incstack = 0
  6908                           ; Regs used in _Lcd_Port: [wreg]
  6909                           ;Lcd_Port@a stored from wreg
  6910     0B59  1283               	bcf	3,5	;RP0=0, select bank0
  6911     0B5A  1303               	bcf	3,6	;RP1=0, select bank0
  6912     0B5B  00A0               	movwf	Lcd_Port@a
  6913     0B5C                     l2065:
  6914                           
  6915                           ;LCD.c: 14:     if (a & 1)
  6916     0B5C  1C20               	btfss	Lcd_Port@a,0
  6917     0B5D  2B5F               	goto	u1611
  6918     0B5E  2B60               	goto	u1610
  6919     0B5F                     u1611:
  6920     0B5F  2B62               	goto	l88
  6921     0B60                     u1610:
  6922     0B60                     l2067:
  6923                           
  6924                           ;LCD.c: 15:         RD4 = 1;
  6925     0B60  1608               	bsf	8,4	;volatile
  6926     0B61  2B63               	goto	l89
  6927     0B62                     l88:	
  6928                           ;LCD.c: 16:     else
  6929                           
  6930                           
  6931                           ;LCD.c: 17:         RD4 = 0;
  6932     0B62  1208               	bcf	8,4	;volatile
  6933     0B63                     l89:
  6934                           
  6935                           ;LCD.c: 19:     if (a & 2)
  6936     0B63  1CA0               	btfss	Lcd_Port@a,1
  6937     0B64  2B66               	goto	u1621
  6938     0B65  2B67               	goto	u1620
  6939     0B66                     u1621:
  6940     0B66  2B69               	goto	l90
  6941     0B67                     u1620:
  6942     0B67                     l2069:
  6943                           
  6944                           ;LCD.c: 20:         RD5 = 1;
  6945     0B67  1688               	bsf	8,5	;volatile
  6946     0B68  2B6A               	goto	l91
  6947     0B69                     l90:	
  6948                           ;LCD.c: 21:     else
  6949                           
  6950                           
  6951                           ;LCD.c: 22:         RD5 = 0;
  6952     0B69  1288               	bcf	8,5	;volatile
  6953     0B6A                     l91:
  6954                           
  6955                           ;LCD.c: 24:     if (a & 4)
  6956     0B6A  1D20               	btfss	Lcd_Port@a,2
  6957     0B6B  2B6D               	goto	u1631
  6958     0B6C  2B6E               	goto	u1630
  6959     0B6D                     u1631:
  6960     0B6D  2B70               	goto	l92
  6961     0B6E                     u1630:
  6962     0B6E                     l2071:
  6963                           
  6964                           ;LCD.c: 25:         RD6 = 1;
  6965     0B6E  1708               	bsf	8,6	;volatile
  6966     0B6F  2B71               	goto	l93
  6967     0B70                     l92:	
  6968                           ;LCD.c: 26:     else
  6969                           
  6970                           
  6971                           ;LCD.c: 27:         RD6 = 0;
  6972     0B70  1308               	bcf	8,6	;volatile
  6973     0B71                     l93:
  6974                           
  6975                           ;LCD.c: 29:     if (a & 8)
  6976     0B71  1DA0               	btfss	Lcd_Port@a,3
  6977     0B72  2B74               	goto	u1641
  6978     0B73  2B75               	goto	u1640
  6979     0B74                     u1641:
  6980     0B74  2B77               	goto	l94
  6981     0B75                     u1640:
  6982     0B75                     l2073:
  6983                           
  6984                           ;LCD.c: 30:         RD7 = 1;
  6985     0B75  1788               	bsf	8,7	;volatile
  6986     0B76  2B78               	goto	l96
  6987     0B77                     l94:	
  6988                           ;LCD.c: 31:     else
  6989                           
  6990                           
  6991                           ;LCD.c: 32:         RD7 = 0;
  6992     0B77  1388               	bcf	8,7	;volatile
  6993     0B78                     l96:
  6994     0B78  0008               	return
  6995     0B79                     __end_of_Lcd_Port:
  6996                           
  6997                           	psect	text33
  6998     0C5F                     __ptext33:	
  6999 ;; *************** function _I2C_Master_Init *****************
  7000 ;; Defined at:
  7001 ;;		line 16 in file "I2C.c"
  7002 ;; Parameters:    Size  Location     Type
  7003 ;;  c               4   14[BANK0 ] const unsigned long 
  7004 ;; Auto vars:     Size  Location     Type
  7005 ;;		None
  7006 ;; Return value:  Size  Location     Type
  7007 ;;                  1    wreg      void 
  7008 ;; Registers used:
  7009 ;;		wreg, status,2, status,0, pclath, cstack
  7010 ;; Tracked objects:
  7011 ;;		On entry : 0/0
  7012 ;;		On exit  : 0/0
  7013 ;;		Unchanged: 0/0
  7014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7015 ;;      Params:         0       4       0       0       0
  7016 ;;      Locals:         0       0       0       0       0
  7017 ;;      Temps:          0       4       0       0       0
  7018 ;;      Totals:         0       8       0       0       0
  7019 ;;Total ram usage:        8 bytes
  7020 ;; Hardware stack levels used: 1
  7021 ;; Hardware stack levels required when called: 3
  7022 ;; This function calls:
  7023 ;;		___lldiv
  7024 ;; This function is called by:
  7025 ;;		_main
  7026 ;; This function uses a non-reentrant model
  7027 ;;
  7028                           
  7029     0C5F                     _I2C_Master_Init:	
  7030                           ;psect for function _I2C_Master_Init
  7031                           
  7032     0C5F                     l2579:	
  7033                           ;incstack = 0
  7034                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  7035                           
  7036                           
  7037                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  7038     0C5F  3028               	movlw	40
  7039     0C60  1283               	bcf	3,5	;RP0=0, select bank0
  7040     0C61  1303               	bcf	3,6	;RP1=0, select bank0
  7041     0C62  0094               	movwf	20	;volatile
  7042     0C63                     l2581:
  7043                           
  7044                           ;I2C.c: 19:     SSPCON2 = 0;
  7045     0C63  1683               	bsf	3,5	;RP0=1, select bank1
  7046     0C64  1303               	bcf	3,6	;RP1=0, select bank1
  7047     0C65  0191               	clrf	17	;volatile
  7048     0C66                     l2583:
  7049                           
  7050                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  7051     0C66  1283               	bcf	3,5	;RP0=0, select bank0
  7052     0C67  1303               	bcf	3,6	;RP1=0, select bank0
  7053     0C68  082E               	movf	I2C_Master_Init@c,w
  7054     0C69  00B2               	movwf	??_I2C_Master_Init
  7055     0C6A  082F               	movf	I2C_Master_Init@c+1,w
  7056     0C6B  00B3               	movwf	??_I2C_Master_Init+1
  7057     0C6C  0830               	movf	I2C_Master_Init@c+2,w
  7058     0C6D  00B4               	movwf	??_I2C_Master_Init+2
  7059     0C6E  0831               	movf	I2C_Master_Init@c+3,w
  7060     0C6F  00B5               	movwf	??_I2C_Master_Init+3
  7061     0C70  3002               	movlw	2
  7062     0C71                     u2745:
  7063     0C71  1003               	clrc
  7064     0C72  0DB2               	rlf	??_I2C_Master_Init,f
  7065     0C73  0DB3               	rlf	??_I2C_Master_Init+1,f
  7066     0C74  0DB4               	rlf	??_I2C_Master_Init+2,f
  7067     0C75  0DB5               	rlf	??_I2C_Master_Init+3,f
  7068     0C76                     u2740:
  7069     0C76  3EFF               	addlw	-1
  7070     0C77  1D03               	skipz
  7071     0C78  2C71               	goto	u2745
  7072     0C79  0835               	movf	??_I2C_Master_Init+3,w
  7073     0C7A  00A3               	movwf	___lldiv@divisor+3
  7074     0C7B  0834               	movf	??_I2C_Master_Init+2,w
  7075     0C7C  00A2               	movwf	___lldiv@divisor+2
  7076     0C7D  0833               	movf	??_I2C_Master_Init+1,w
  7077     0C7E  00A1               	movwf	___lldiv@divisor+1
  7078     0C7F  0832               	movf	??_I2C_Master_Init,w
  7079     0C80  00A0               	movwf	___lldiv@divisor
  7080     0C81  3000               	movlw	0
  7081     0C82  00A7               	movwf	___lldiv@dividend+3
  7082     0C83  307A               	movlw	122
  7083     0C84  00A6               	movwf	___lldiv@dividend+2
  7084     0C85  3012               	movlw	18
  7085     0C86  00A5               	movwf	___lldiv@dividend+1
  7086     0C87  3000               	movlw	0
  7087     0C88  00A4               	movwf	___lldiv@dividend
  7088     0C89  120A  158A  2720  120A  158A  	fcall	___lldiv
  7089     0C8E  1283               	bcf	3,5	;RP0=0, select bank0
  7090     0C8F  1303               	bcf	3,6	;RP1=0, select bank0
  7091     0C90  0820               	movf	?___lldiv,w
  7092     0C91  3EFF               	addlw	255
  7093     0C92  1683               	bsf	3,5	;RP0=1, select bank1
  7094     0C93  1303               	bcf	3,6	;RP1=0, select bank1
  7095     0C94  0093               	movwf	19	;volatile
  7096     0C95                     l2585:
  7097                           
  7098                           ;I2C.c: 21:     SSPSTAT = 0;
  7099     0C95  0194               	clrf	20	;volatile
  7100     0C96                     l2587:
  7101                           
  7102                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  7103     0C96  1587               	bsf	7,3	;volatile
  7104     0C97                     l2589:
  7105                           
  7106                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  7107     0C97  1607               	bsf	7,4	;volatile
  7108     0C98                     l165:
  7109     0C98  0008               	return
  7110     0C99                     __end_of_I2C_Master_Init:
  7111                           
  7112                           	psect	text34
  7113     0F20                     __ptext34:	
  7114 ;; *************** function ___lldiv *****************
  7115 ;; Defined at:
  7116 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  7117 ;; Parameters:    Size  Location     Type
  7118 ;;  divisor         4    0[BANK0 ] unsigned long 
  7119 ;;  dividend        4    4[BANK0 ] unsigned long 
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;  quotient        4    9[BANK0 ] unsigned long 
  7122 ;;  counter         1   13[BANK0 ] unsigned char 
  7123 ;; Return value:  Size  Location     Type
  7124 ;;                  4    0[BANK0 ] unsigned long 
  7125 ;; Registers used:
  7126 ;;		wreg, status,2, status,0
  7127 ;; Tracked objects:
  7128 ;;		On entry : 0/0
  7129 ;;		On exit  : 0/0
  7130 ;;		Unchanged: 0/0
  7131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7132 ;;      Params:         0       8       0       0       0
  7133 ;;      Locals:         0       5       0       0       0
  7134 ;;      Temps:          0       1       0       0       0
  7135 ;;      Totals:         0      14       0       0       0
  7136 ;;Total ram usage:       14 bytes
  7137 ;; Hardware stack levels used: 1
  7138 ;; Hardware stack levels required when called: 2
  7139 ;; This function calls:
  7140 ;;		Nothing
  7141 ;; This function is called by:
  7142 ;;		_I2C_Master_Init
  7143 ;; This function uses a non-reentrant model
  7144 ;;
  7145                           
  7146     0F20                     ___lldiv:	
  7147                           ;psect for function ___lldiv
  7148                           
  7149     0F20                     l2477:	
  7150                           ;incstack = 0
  7151                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7152                           
  7153     0F20  3000               	movlw	0
  7154     0F21  1283               	bcf	3,5	;RP0=0, select bank0
  7155     0F22  1303               	bcf	3,6	;RP1=0, select bank0
  7156     0F23  00AC               	movwf	___lldiv@quotient+3
  7157     0F24  3000               	movlw	0
  7158     0F25  00AB               	movwf	___lldiv@quotient+2
  7159     0F26  3000               	movlw	0
  7160     0F27  00AA               	movwf	___lldiv@quotient+1
  7161     0F28  3000               	movlw	0
  7162     0F29  00A9               	movwf	___lldiv@quotient
  7163     0F2A  0823               	movf	___lldiv@divisor+3,w
  7164     0F2B  0422               	iorwf	___lldiv@divisor+2,w
  7165     0F2C  0421               	iorwf	___lldiv@divisor+1,w
  7166     0F2D  0420               	iorwf	___lldiv@divisor,w
  7167     0F2E  1903               	skipnz
  7168     0F2F  2F31               	goto	u2511
  7169     0F30  2F32               	goto	u2510
  7170     0F31                     u2511:
  7171     0F31  2F7F               	goto	l2497
  7172     0F32                     u2510:
  7173     0F32                     l2479:
  7174     0F32  01AD               	clrf	___lldiv@counter
  7175     0F33  0AAD               	incf	___lldiv@counter,f
  7176     0F34  2F42               	goto	l2483
  7177     0F35                     l2481:
  7178     0F35  3001               	movlw	1
  7179     0F36  00A8               	movwf	??___lldiv
  7180     0F37                     u2525:
  7181     0F37  1003               	clrc
  7182     0F38  0DA0               	rlf	___lldiv@divisor,f
  7183     0F39  0DA1               	rlf	___lldiv@divisor+1,f
  7184     0F3A  0DA2               	rlf	___lldiv@divisor+2,f
  7185     0F3B  0DA3               	rlf	___lldiv@divisor+3,f
  7186     0F3C  0BA8               	decfsz	??___lldiv,f
  7187     0F3D  2F37               	goto	u2525
  7188     0F3E  3001               	movlw	1
  7189     0F3F  00A8               	movwf	??___lldiv
  7190     0F40  0828               	movf	??___lldiv,w
  7191     0F41  07AD               	addwf	___lldiv@counter,f
  7192     0F42                     l2483:
  7193     0F42  1FA3               	btfss	___lldiv@divisor+3,7
  7194     0F43  2F45               	goto	u2531
  7195     0F44  2F46               	goto	u2530
  7196     0F45                     u2531:
  7197     0F45  2F35               	goto	l2481
  7198     0F46                     u2530:
  7199     0F46                     l2485:
  7200     0F46  3001               	movlw	1
  7201     0F47  00A8               	movwf	??___lldiv
  7202     0F48                     u2545:
  7203     0F48  1003               	clrc
  7204     0F49  0DA9               	rlf	___lldiv@quotient,f
  7205     0F4A  0DAA               	rlf	___lldiv@quotient+1,f
  7206     0F4B  0DAB               	rlf	___lldiv@quotient+2,f
  7207     0F4C  0DAC               	rlf	___lldiv@quotient+3,f
  7208     0F4D  0BA8               	decfsz	??___lldiv,f
  7209     0F4E  2F48               	goto	u2545
  7210     0F4F                     l2487:
  7211     0F4F  0823               	movf	___lldiv@divisor+3,w
  7212     0F50  0227               	subwf	___lldiv@dividend+3,w
  7213     0F51  1D03               	skipz
  7214     0F52  2F5D               	goto	u2555
  7215     0F53  0822               	movf	___lldiv@divisor+2,w
  7216     0F54  0226               	subwf	___lldiv@dividend+2,w
  7217     0F55  1D03               	skipz
  7218     0F56  2F5D               	goto	u2555
  7219     0F57  0821               	movf	___lldiv@divisor+1,w
  7220     0F58  0225               	subwf	___lldiv@dividend+1,w
  7221     0F59  1D03               	skipz
  7222     0F5A  2F5D               	goto	u2555
  7223     0F5B  0820               	movf	___lldiv@divisor,w
  7224     0F5C  0224               	subwf	___lldiv@dividend,w
  7225     0F5D                     u2555:
  7226     0F5D  1C03               	skipc
  7227     0F5E  2F60               	goto	u2551
  7228     0F5F  2F61               	goto	u2550
  7229     0F60                     u2551:
  7230     0F60  2F70               	goto	l2493
  7231     0F61                     u2550:
  7232     0F61                     l2489:
  7233     0F61  0820               	movf	___lldiv@divisor,w
  7234     0F62  02A4               	subwf	___lldiv@dividend,f
  7235     0F63  0821               	movf	___lldiv@divisor+1,w
  7236     0F64  1C03               	skipc
  7237     0F65  0F21               	incfsz	___lldiv@divisor+1,w
  7238     0F66  02A5               	subwf	___lldiv@dividend+1,f
  7239     0F67  0822               	movf	___lldiv@divisor+2,w
  7240     0F68  1C03               	skipc
  7241     0F69  0F22               	incfsz	___lldiv@divisor+2,w
  7242     0F6A  02A6               	subwf	___lldiv@dividend+2,f
  7243     0F6B  0823               	movf	___lldiv@divisor+3,w
  7244     0F6C  1C03               	skipc
  7245     0F6D  0F23               	incfsz	___lldiv@divisor+3,w
  7246     0F6E  02A7               	subwf	___lldiv@dividend+3,f
  7247     0F6F                     l2491:
  7248     0F6F  1429               	bsf	___lldiv@quotient,0
  7249     0F70                     l2493:
  7250     0F70  3001               	movlw	1
  7251     0F71                     u2565:
  7252     0F71  1003               	clrc
  7253     0F72  0CA3               	rrf	___lldiv@divisor+3,f
  7254     0F73  0CA2               	rrf	___lldiv@divisor+2,f
  7255     0F74  0CA1               	rrf	___lldiv@divisor+1,f
  7256     0F75  0CA0               	rrf	___lldiv@divisor,f
  7257     0F76  3EFF               	addlw	-1
  7258     0F77  1D03               	skipz
  7259     0F78  2F71               	goto	u2565
  7260     0F79                     l2495:
  7261     0F79  3001               	movlw	1
  7262     0F7A  02AD               	subwf	___lldiv@counter,f
  7263     0F7B  1D03               	btfss	3,2
  7264     0F7C  2F7E               	goto	u2571
  7265     0F7D  2F7F               	goto	u2570
  7266     0F7E                     u2571:
  7267     0F7E  2F46               	goto	l2485
  7268     0F7F                     u2570:
  7269     0F7F                     l2497:
  7270     0F7F  082C               	movf	___lldiv@quotient+3,w
  7271     0F80  00A3               	movwf	?___lldiv+3
  7272     0F81  082B               	movf	___lldiv@quotient+2,w
  7273     0F82  00A2               	movwf	?___lldiv+2
  7274     0F83  082A               	movf	___lldiv@quotient+1,w
  7275     0F84  00A1               	movwf	?___lldiv+1
  7276     0F85  0829               	movf	___lldiv@quotient,w
  7277     0F86  00A0               	movwf	?___lldiv
  7278     0F87                     l516:
  7279     0F87  0008               	return
  7280     0F88                     __end_of___lldiv:
  7281                           
  7282                           	psect	text35
  7283     0B3B                     __ptext35:	
  7284 ;; *************** function _isr *****************
  7285 ;; Defined at:
  7286 ;;		line 50 in file "main.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;		None
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;		None
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  1    wreg      void 
  7293 ;; Registers used:
  7294 ;;		wreg, pclath, cstack
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7300 ;;      Params:         0       0       0       0       0
  7301 ;;      Locals:         0       0       0       0       0
  7302 ;;      Temps:          4       0       0       0       0
  7303 ;;      Totals:         4       0       0       0       0
  7304 ;;Total ram usage:        4 bytes
  7305 ;; Hardware stack levels used: 1
  7306 ;; Hardware stack levels required when called: 1
  7307 ;; This function calls:
  7308 ;;		_UART_read_char
  7309 ;; This function is called by:
  7310 ;;		Interrupt level 1
  7311 ;; This function uses a non-reentrant model
  7312 ;;
  7313                           
  7314     0B3B                     _isr:	
  7315                           ;psect for function _isr
  7316                           
  7317     0B3B                     i1l2837:
  7318                           
  7319                           ;main.c: 52:     bpm = UART_read_char();
  7320     0B3B  120A  158A  2298  120A  158A  	fcall	_UART_read_char
  7321     0B40  0871               	movf	?_UART_read_char+1,w
  7322     0B41  1683               	bsf	3,5	;RP0=1, select bank1
  7323     0B42  1303               	bcf	3,6	;RP1=0, select bank1
  7324     0B43  00C8               	movwf	(_bpm+1)^(0+128)
  7325     0B44  0870               	movf	?_UART_read_char,w
  7326     0B45  00C7               	movwf	_bpm^(0+128)
  7327     0B46                     i1l2839:
  7328                           
  7329                           ;main.c: 53:   PIR1bits.RCIF = 0;
  7330     0B46  1283               	bcf	3,5	;RP0=0, select bank0
  7331     0B47  1303               	bcf	3,6	;RP1=0, select bank0
  7332     0B48  128C               	bcf	12,5	;volatile
  7333     0B49                     i1l2841:
  7334                           
  7335                           ;main.c: 54:   _delay((unsigned long)((10)*(8000000/4000.0)));
  7336     0B49  301A               	movlw	26
  7337     0B4A  00F5               	movwf	??_isr+1
  7338     0B4B  30F8               	movlw	248
  7339     0B4C  00F4               	movwf	??_isr
  7340     0B4D                     u318_27:
  7341     0B4D  0BF4               	decfsz	??_isr,f
  7342     0B4E  2B4D               	goto	u318_27
  7343     0B4F  0BF5               	decfsz	??_isr+1,f
  7344     0B50  2B4D               	goto	u318_27
  7345     0B51  0000               	nop
  7346     0B52                     i1l63:
  7347     0B52  0877               	movf	??_isr+3,w
  7348     0B53  008A               	movwf	10
  7349     0B54  0E76               	swapf	??_isr+2,w
  7350     0B55  0083               	movwf	3
  7351     0B56  0EFE               	swapf	btemp,f
  7352     0B57  0E7E               	swapf	btemp,w
  7353     0B58  0009               	retfie
  7354     0B59                     __end_of_isr:
  7355                           
  7356                           	psect	intentry
  7357     0004                     __pintentry:	
  7358                           ;incstack = 0
  7359                           ; Regs used in _isr: [wreg+pclath+cstack]
  7360                           
  7361     0004                     interrupt_function:
  7362     007E                     saved_w	set	btemp
  7363     0004  00FE               	movwf	btemp
  7364     0005  0E03               	swapf	3,w
  7365     0006  00F6               	movwf	??_isr+2
  7366     0007  080A               	movf	10,w
  7367     0008  00F7               	movwf	??_isr+3
  7368     0009  120A  158A  2B3B   	ljmp	_isr
  7369                           
  7370                           	psect	text36
  7371     0A98                     __ptext36:	
  7372 ;; *************** function _UART_read_char *****************
  7373 ;; Defined at:
  7374 ;;		line 50 in file "uart.c"
  7375 ;; Parameters:    Size  Location     Type
  7376 ;;		None
  7377 ;; Auto vars:     Size  Location     Type
  7378 ;;		None
  7379 ;; Return value:  Size  Location     Type
  7380 ;;                  2    0[COMMON] int 
  7381 ;; Registers used:
  7382 ;;		wreg
  7383 ;; Tracked objects:
  7384 ;;		On entry : 0/0
  7385 ;;		On exit  : 0/0
  7386 ;;		Unchanged: 0/0
  7387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7388 ;;      Params:         2       0       0       0       0
  7389 ;;      Locals:         0       0       0       0       0
  7390 ;;      Temps:          2       0       0       0       0
  7391 ;;      Totals:         4       0       0       0       0
  7392 ;;Total ram usage:        4 bytes
  7393 ;; Hardware stack levels used: 1
  7394 ;; This function calls:
  7395 ;;		Nothing
  7396 ;; This function is called by:
  7397 ;;		_isr
  7398 ;; This function uses a non-reentrant model
  7399 ;;
  7400                           
  7401     0A98                     _UART_read_char:	
  7402                           ;psect for function _UART_read_char
  7403                           
  7404     0A98                     i1l2573:	
  7405                           ;incstack = 0
  7406                           ; Regs used in _UART_read_char: [wreg]
  7407                           
  7408     0A98                     i1l307:	
  7409                           ;uart.c: 51:     while (PIR1bits.RCIF == 0);
  7410                           
  7411     0A98  1283               	bcf	3,5	;RP0=0, select bank0
  7412     0A99  1303               	bcf	3,6	;RP1=0, select bank0
  7413     0A9A  1E8C               	btfss	12,5	;volatile
  7414     0A9B  2A9D               	goto	u273_21
  7415     0A9C  2A9E               	goto	u273_20
  7416     0A9D                     u273_21:
  7417     0A9D  2A98               	goto	i1l307
  7418     0A9E                     u273_20:
  7419     0A9E                     i1l309:
  7420                           
  7421                           ;uart.c: 52:     PIR1bits.RCIF = 0;
  7422     0A9E  128C               	bcf	12,5	;volatile
  7423     0A9F                     i1l2575:
  7424                           
  7425                           ;uart.c: 53:     return RCREG;
  7426     0A9F  081A               	movf	26,w	;volatile
  7427     0AA0  00F2               	movwf	??_UART_read_char
  7428     0AA1  01F3               	clrf	??_UART_read_char+1
  7429     0AA2  0872               	movf	??_UART_read_char,w
  7430     0AA3  00F0               	movwf	?_UART_read_char
  7431     0AA4  0873               	movf	??_UART_read_char+1,w
  7432     0AA5  00F1               	movwf	?_UART_read_char+1
  7433     0AA6                     i1l310:
  7434     0AA6  0008               	return
  7435     0AA7                     __end_of_UART_read_char:
  7436     007E                     btemp	set	126	;btemp
  7437     007E                     wtemp0	set	126
  7438                           
  7439                           	psect	idloc
  7440                           
  7441                           ;Config register IDLOC0 @ 0x2000
  7442                           ;	unspecified, using default values
  7443     2000                     	org	8192
  7444     2000  3FFF               	dw	16383
  7445                           
  7446                           ;Config register IDLOC1 @ 0x2001
  7447                           ;	unspecified, using default values
  7448     2001                     	org	8193
  7449     2001  3FFF               	dw	16383
  7450                           
  7451                           ;Config register IDLOC2 @ 0x2002
  7452                           ;	unspecified, using default values
  7453     2002                     	org	8194
  7454     2002  3FFF               	dw	16383
  7455                           
  7456                           ;Config register IDLOC3 @ 0x2003
  7457                           ;	unspecified, using default values
  7458     2003                     	org	8195
  7459     2003  3FFF               	dw	16383
  7460                           
  7461                           	psect	config
  7462                           
  7463                           ;Config register CONFIG1 @ 0x2007
  7464                           ;	Oscillator Selection bits
  7465                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  7466                           ;	Watchdog Timer Enable bit
  7467                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  7468                           ;	Power-up Timer Enable bit
  7469                           ;	PWRTE = OFF, PWRT disabled
  7470                           ;	RE3/MCLR pin function select bit
  7471                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  7472                           ;	Code Protection bit
  7473                           ;	CP = OFF, Program memory code protection is disabled
  7474                           ;	Data Code Protection bit
  7475                           ;	CPD = OFF, Data memory code protection is disabled
  7476                           ;	Brown Out Reset Selection bits
  7477                           ;	BOREN = OFF, BOR disabled
  7478                           ;	Internal External Switchover bit
  7479                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  7480                           ;	Fail-Safe Clock Monitor Enabled bit
  7481                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  7482                           ;	Low Voltage Programming Enable bit
  7483                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  7484                           ;	In-Circuit Debugger Mode bit
  7485                           ;	DEBUG = 0x1, unprogramme  7486     2007                     	org	8199
  7487     2007  20D4               	dw	8404
  7488                           
  7489                           ;Config register CONFIG2 @ 0x2008
  7490                           ;	Brown-out Reset Selection bit
  7491                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  7492                           ;	Flash Program Memory Self Write Enable bits
  7493                           ;	WRT = OFF, Write protection off
  7494     2008                     	org	8200
  7495     2008  3FFF               	dw	16383

Data Sizes:
    Strings     21
    Constant    10
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     54      60
    BANK1            80     39      44
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> trunc@expon(BANK0[2]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> main@display_temp(BANK1[10]), main@display_alc(BANK1[10]), main@display_bpm(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    dht11_read@ptemp	PTR unsigned char  size(1) Largest target is 1
		 -> temp(BANK1[1]), 

    dht11_read@phum	PTR unsigned char  size(1) Largest target is 1
		 -> humid(BANK1[1]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 10
		 -> main@display_temp(BANK1[10]), main@display_alc(BANK1[10]), main@display_bpm(BANK1[10]), STR_3(CODE[3]), 
		 -> STR_2(CODE[9]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_UART_read_char

Critical Paths under _main in BANK0

    _main->_round
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _round->___flsub
    _trunc->___fltol
    _frexp->___fleq
    ___fltol->___xxtofl
    ___flsub->_trunc
    _dht11_read->___bmul
    _adc_RO->_adc_read
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                43    43      0   13368
                                             50 BANK0      4     4      0
                                              0 BANK1     39    39      0
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                     _UART_RX_config
                     _UART_TX_config
                    _UART_write_char
                            ___fltol
                           ___xxtofl
                             _adc_RO
                        _adc_channel
                          _adc_setup
                       _dht11_config
                         _dht11_read
                              _round
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    20      3    2031
                                             14 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _round                                                8     4      4    6935
                                             42 BANK0      8     4      4
                            ___fladd
                            ___flsub
                              _trunc
 ---------------------------------------------------------------------------------
 (2) _trunc                                               10     6      4    1974
                                             24 BANK0     10     6      4
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                7     2      5     728
                                             12 BANK0      7     2      5
                             ___fleq
 ---------------------------------------------------------------------------------
 (4) ___fleq                                              12     4      8     368
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     550
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     381
                                             14 BANK0     10     6      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             34 BANK0      8     0      8
                            ___fladd
                              _trunc (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (1) _dht11_read                                           6     5      1     534
                                              4 BANK0      6     5      1
                             ___bmul
                    _dht11_read_byte
 ---------------------------------------------------------------------------------
 (2) _dht11_read_byte                                      2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     244
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _dht11_config                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_setup                                            2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _adc_channel                                          2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _adc_RO                                               2     2      0      44
                                              2 BANK0      2     2      0
                         _adc_output
                           _adc_read
 ---------------------------------------------------------------------------------
 (2) _adc_read                                             2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _adc_output                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_write_char                                      1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_TX_config                                       2     0      2     120
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _UART_RX_config                                       2     0      2     120
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     724
                                              5 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     836
                                              4 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0       0
                                              4 COMMON     4     4      0
                     _UART_read_char
 ---------------------------------------------------------------------------------
 (6) _UART_read_char                                       4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _UART_RX_config
   _UART_TX_config
   _UART_write_char
   ___fltol
     ___xxtofl (ARG)
   ___xxtofl
   _adc_RO
     _adc_output
     _adc_read
   _adc_channel
   _adc_setup
   _dht11_config
   _dht11_read
     ___bmul
     _dht11_read_byte
   _round
     ___fladd
     ___flsub
       ___fladd
       _trunc (ARG)
         ___fltol
         ___xxtofl
         _frexp
           ___fleq
     _trunc
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _isr (ROOT)
   _UART_read_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      72       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     36      3C       5       75.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     27      2C       7       55.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      72      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Mar 10 22:52:23 2023

                       pc 0002            ___bmul@product 0022               _SSPSTATbits 0094  
                      _BF 04A0                        l90 0B69                        l91 0B6A  
                      l92 0B70                        l93 0B71                        l94 0B77  
                      l96 0B78                        l88 0B62                        l89 0B63  
                      l99 0B1E                        fsr 0004       ___wmul@multiplicand 0022  
                     TMR0 0001                       l102 0A7B                       l111 0EB8  
                     l120 0D1A                       l114 0C5E                       l108 0DAC  
                     l301 0A7F                       l304 0A89                       l240 0C25  
                     l250 06AD                       l251 06B4                       l252 06BB  
                     l260 071F                       l244 068A                       l340 0A65  
                     l332 0BF3                       l165 0C98                       l253 06C2  
                     l270 0AD0                       l254 06C9                       l246 0691  
                     l238 0C02                       l334 0BDF                       l263 0A97  
                     l255 06D0                       l247 0698                       l239 0C05  
                     l343 0740                       l256 06D7                       l248 069F  
                     l352 075A                       l257 06DE                       l249 06A6  
                     l337 0BE3                       l329 0BD2                       l258 06E5  
                     l506 0AE7                       l346 07A9                       l267 0A6E  
                     l516 0F87                       l348 074D                       l295 0B02  
                     l480 0BAB                       l298 0B3A                       l650 0DE7  
                     l482 0BC3                       l651 0DFC                       l804 0211  
                     l476 05CE                       l815 0271                       l807 024F  
                     l816 027B                       l752 0D60                       l673 0FEA  
                     l913 05F3                       l649 0DCB                       l666 0FFF  
                     l762 0CD4                       l819 0B9C                       l915 0688  
                     l676 0FFF                       l773 007F                       l933 0ABA  
                     l926 0652                       l927 065E                       l919 0636  
                     l951 07FD                       l944 0E56                       l777 0102  
                     l794 01CB                       l786 027B                       l938 0F1F  
                     l779 00DB                       l798 01EF                       _GIE 005F  
                     _RD3 0043                       _RD4 0044                       _RD5 0045  
                     _RD6 0046                       _RD7 0047                       _bpm 00C7  
                     _isr 0B3B                       fsr0 0004                       indf 0000  
            ___fltol@exp1 0037                      l2111 0024                      l2201 00EC  
                    l2121 0037                      l2113 0029                      l2105 0FDF  
                    l2211 010B                      l2203 00ED                      l2131 004F  
                    l2123 003C                      l2115 002D                      l2107 0FEF  
                    l2301 0276                      l2221 0133                      l2205 00F6  
                    l2141 0061                      l2133 0052                      l2125 0044  
                    l2117 0031                      l2109 0FF4                      l2061 0DFB  
                    l2053 0DAD                      l2071 0B6E                      l2303 027A  
                    l2231 014A                      l2223 013A                      l2215 0114  
                    l2207 00FA                      l2151 0075                      l2143 0062  
                    l2135 0058                      l2127 0045                      l2119 0032  
                    l2311 05EB                      l2055 0DC3                      l2073 0B75  
                    l2065 0B5C                      l2401 0A6C                      l2241 01AE  
                    l2225 013C                      l2217 012B                      l2209 0106  
                    l2233 014F                      l2161 008F                      l2145 0067  
                    l2153 0077                      l2137 0059                      l2129 0047  
                    l2081 0F9C                      l2321 0614                      l2313 05FB  
                    l2305 05D2                      l2057 0DDF                      l2067 0B60  
                    l2403 0A6D                      l2251 01E1                      l2235 0165  
                    l2243 01BD                      l2227 0140                      l2219 012F  
                    l2171 0099                      l2163 0091                      l2155 0085  
                    l2147 006C                      l2139 005D                      l2091 0FBE  
                    l2083 0FAF                      l2075 0F88                      l2331 0648  
                    l2323 061B                      l2307 05D7                      l2059 0DF9  
                    l2069 0B67                      l2421 0BD6                      l2413 0BC8  
                    l2261 01F8                      l2253 01EA                      l2245 01D3  
                    l2237 01A3                      l2229 0141                      l2181 00A3  
                    l2173 009B                      l2165 0093                      l2157 0089  
                    l2149 0074                      l2085 0FB0                      l2077 0F93  
                    l2341 067B                      l2333 064C                      l2325 061F  
                    l2317 0604                      l2309 05DB                      l2501 0D1B  
                    l2431 0BEC                      l2423 0BD8                      l2415 0BCA  
                    l2407 0BC4                      l2271 0208                      l2263 01FD  
                    l2255 01EE                      l2247 01D8                      l2239 01A9  
                    l2191 00AC                      l2183 00A5                      l2175 009D  
                    l2167 0095                      l2159 008D                      l2087 0FB8  
                    l2343 067F                      l2335 0656                      l2327 062D  
                    l2319 0607                      l2351 07C5                      l2511 0D33  
                    l2503 0D1F                      l2601 0AFF                      l2433 0BF2  
                    l2417 0BD0                      l2281 0229                      l2273 020E  
                    l2257 01F3                      l2265 01FF                      l2193 00C3  
                    l2185 00A7                      l2177 009F                      l2169 0097  
                    l2097 0FC6                      l2089 0FBA                      l2345 0680  
                    l2337 0660                      l2329 063D                      l2361 07FC  
                    l2521 0D56                      l2513 0D37                      l2505 0D25  
                    l2441 0AB1                      l2371 0B10                      l2603 0B00  
                    l2611 0B2C                      l2291 0261                      l2283 022D  
                    l2259 01F6                      l2267 0203                      l2195 00DF  
                    l2187 00A9                      l2179 00A1                      l2099 0FD8  
                    l2339 0676                      l2355 07CE                      l2515 0D48  
                    l2507 0D28                      l2523 0D5C                      l2531 0CA4  
                    l2451 0BA1                      l2443 0AB7                      l2373 0B1B  
                    l2365 0B06                      l2381 0C3E                      l2605 0B01  
                    l2613 0B32                      l2621 0A60                      l2429 0BE6  
                    l2701 0732                      l2293 0266                      l2285 024B  
                    l2277 0216                      l2269 0204                      l2197 00E6  
                    l2189 00AB                      l2357 07EB                      l2349 07AA  
                    l2517 0D4E                      l2509 0D2F                      l2541 0CC3  
                    l2533 0CAB                      l2453 0BA5                      l2445 0AB9  
                    l2437 0AAA                      l2367 0B07                      l2391 0C54  
                    l2383 0C41                      l2375 0C29                      l2615 0B35  
                    l2607 0B1F                      l2631 0C12                      l2623 0BF7  
                    l2471 0ADF                      l2463 0AD4                      l2711 0746  
                    l2703 0735                      l2295 0267                      l2287 0254  
                    l2279 021B                      l2199 00E8                      l2551 0B7D  
                    l2359 07F8                      l2519 0D4F                      l2543 0CCA  
                    l2535 0CAF                      l2527 0C99                      l2455 0BB2  
                    l2439 0AAB                      l2481 0F35                      l2369 0B0D  
                    l2393 0C5B                      l2385 0C48                      l2377 0C2F  
                    l2617 0B36                      l2609 0B26                      l2633 0C14  
                    l2625 0BFC                      l2473 0AE6                      l2465 0AD5  
                    l2721 075E                      l2705 0739                      l2297 026B  
                    l2289 0259                      l2537 0CB3                      l2529 0CA1  
                    l2545 0CD0                      l2457 0BB9                      l2449 0B9D  
                    l2801 054C                      l2491 0F6F                      l2483 0F42  
                    l2651 0E5D                      l2387 0C4B                      l2379 0C30  
                    l2619 0B37                      l2395 0A8D                      l2643 06EC  
                    l2635 0C1B                      l2627 0C08                      l2467 0AD9  
                    l2731 0769                      l2715 0751                      l2299 026D  
                    l2563 0E1D                      l2555 0DFD                      l2539 0CBD  
                    l2459 0BBF                      l2811 056B                      l2803 0558  
                    l2493 0F70                      l2485 0F46                      l2477 0F20  
                    l2581 0C63                      l2653 0E67                      l2661 0D64  
                    l2389 0C51                      l2397 0A96                      l2637 0C1E  
                    l2629 0C0C                      l2469 0ADD                      l2733 0771  
                    l2717 0753                      l2709 0744                      l2549 0B79  
                    l2565 0E26                      l2557 0E0E                      l2821 05B1  
                    l2813 0577                      l2805 055C                      l2901 0353  
                    l2495 0F79                      l2487 0F4F                      l2479 0F32  
                    l2583 0C66                      l2655 0E77                      l2663 0D69  
                    l2671 0D88                      l2591 0AE8                      l2399 0A66  
                    l2639 0689                      l2743 078B                      l2735 0775  
                    l2727 075F                      l2567 0E27                      l2559 0E14  
                    l2751 0F08                      l2815 057A                      l2807 0562  
                    l2823 05BA                      l2911 03D6                      l2903 0361  
                    l2489 0F61                      l2497 0F7F                      l2585 0C95  
                    l2657 0E7D                      l2649 0E57                      l2673 0D8E  
                    l2665 0D76                      l2681 0CD5                      l2593 0AEF  
                    l2833 0A7F                      l2737 077B                      l2569 0E4E  
                    l2817 05A8                      l2809 0567                      l2825 05CA  
                    l2761 0493                      l2921 0441                      l2913 03F7  
                    l2905 036A                      l2587 0C96                      l2579 0C5F  
                    l2659 0A6F                      l2675 0D9B                      l2667 0D79  
                    l2683 0CDA                      l2595 0AF5                      l2835 0A85  
                    l2691 0AC4                      l2739 0784                      l2747 0EB9  
                    l2819 05AD                      l2771 04C4                      l2763 0498  
                    l2755 0485                      l2931 0476                      l2923 044C  
                    l2915 040D                      l2907 0374                      l2851 029B  
                    l2843 027C                      l2589 0C97                      l2677 0D9E  
                    l2669 0D7F                      l2685 0CF6                      l2597 0AFB  
                    l2693 0ACB                      l2749 0EE9                      l2773 04D7  
                    l2781 04F1                      l2765 049B                      l2757 0488  
                    l2925 0456                      l2917 0422                      l2909 03A3  
                    l2861 02AE                      l2853 02A6                      l2845 028B  
                    l2679 0DA4                      l2687 0CFE                      l2599 0AFE  
                    l2783 050D                      l2775 04DB                      l2767 04AB  
                    l2759 048E                      l2927 0461                      l2919 0437  
                    l2871 02D4                      l2863 02BC                      l2855 02A9  
                    l2847 028E                      l2689 0ABE                      l2697 0723  
                    l2793 051B                      l2785 0515                      l2777 04EC  
                    l2769 04AF                      l2929 046B                      l2881 02EC  
                    l2873 02D5                      l2865 02C1                      l2857 02AC  
                    l2849 0290                      l2699 0727                      l2787 0519  
                    l2891 031E                      l2883 02F1                      l2875 02D8  
                    l2867 02C7                      l2859 02AD                      l2797 0537  
                    l2893 0329                      l2885 0300                      l2877 02DB  
                    l2869 02D1                      l2991 06F3                      l2799 0541  
                    l2895 0333                      l2887 030F                      l2879 02DE  
                    l2897 033E                      l2889 0314                      l2899 0348  
                    l2989 0505                      ?_isr 0070                      STR_1 0823  
                    STR_2 081A                      STR_3 082C                      STR_4 0828  
                    STR_5 0828                      STR_6 0828                      u2000 0190  
                    u2001 0191                      u2010 01AE                      u2002 0196  
                    u2011 01AD                      u2003 0197                      u2100 020E  
                    u2020 01D3                      u2101 020D                      u2021 01D2  
                    u2110 0215                      u2030 01D8                      u2111 0214  
                    u2031 01D7                      u2200 027A                      u2120 021B  
                    u3000 05BA                      u2201 0279                      u2121 021A  
                    u3001 05B9                      u2130 022D                      u2050 01EE  
                    u2210 05D7                      u3010 05CA                      u2131 022C  
                    u2051 01ED                      u2211 05D6                      u3011 05C9  
                    u3020 0A85                      u2140 023C                      u2060 01F3  
                    u2300 0652                      u2220 05DB                      u3021 0A84  
                    u2061 01F2                      u2045 01E3                      u2301 0651  
                    u2221 05DA                      u2150 024B                      u2070 01FD  
                    u2310 0656                      u2230 05FB                      u2151 024A  
                    u2071 01FC                      u2311 0655                      u2231 05FA  
                    u2400 0BDE                      u2160 0254                      u2080 0203  
                    u2320 066B                      u1600 0DF9                      u2401 0BDD  
                    u2161 0253                      u2145 0237                      u2081 0202  
                    u1601 0DF8                      u1610 0B60                      u2410 0BE3  
                    u2170 0259                      u2090 0208                      u2330 067B  
                    u2250 061A                      u1611 0B5F                      u3107 0C22  
                    u2411 0BE2                      u2171 0258                      u2091 0207  
                    u2331 067A                      u2251 0619                      u1620 0B67  
                    u2500 0AE6                      u2420 0BF2                      u2180 0266  
                    u1700 0FD7                      u2340 067F                      u1621 0B66  
                    u3117 0AC8                      u2501 0AE5                      u2421 0BF1  
                    u2181 0265                      u1701 0FD6                      u2341 067E  
                    u2325 0666                      u2245 060C                      u1605 0DF5  
                    u3037 02B6                      u2510 0F32                      u1630 0B6E  
                    u2190 026B                      u1710 0FDE                      u2270 063C  
                    u2350 07C5                      u2430 0AB1                      u2511 0F31  
                    u1631 0B6D                      u3127 0C45                      u2191 026A  
                    u1711 0FDD                      u2271 063B                      u2351 07C4  
                    u2431 0AB0                      u3047 02E6                      u1640 0B75  
                    u1800 0067                      u2600 0D37                      u2440 0AB7  
                    u1641 0B74                      u3137 0C58                      u1801 0066  
                    u2265 062E                      u2601 0D36                      u2441 0AB6  
                    u3057 02F9                      u2530 0F46                      u2370 0A6C  
                    u1810 006C                      u1730 0FEF                      u1650 0F93  
                    u2290 064C                      u2450 0BA5                      u2531 0F45  
                    u3147 0E63                      u2371 0A6B                      u1811 006B  
                    u1731 0FEE                      u1651 0F92                      u2291 064B  
                    u2451 0BA4                      u3067 0308                      u2380 0BD0  
                    u1900 0102                      u1820 0085                      u1740 0FF4  
                    u1660 0FAA                      u1580 0DC3                      u2620 0D48  
                    u2700 0CD0                      u2525 0F37                      u3157 0E73  
                    u2365 0C33                      u2381 0BCF                      u1901 0101  
                    u1821 0084                      u1741 0FF3                      u1725 0FE1  
                    u2285 0641                      u1581 0DC2                      u2621 0D47  
                    u2701 0CCF                      u3077 035B                      u2550 0F61  
                    u2390 0BD6                      u1910 0106                      u1830 0089  
                    u1750 0031                      u1670 0FBE                      u1590 0DDF  
                    u2710 0E14                      u2551 0F60                      u3167 0E83  
                    u2391 0BD5                      u3087 072D                      u1911 0105  
                    u1831 0088                      u1751 0030                      u1671 0FBD  
                    u1591 0DDE                      u2711 0E13                      u2615 0D38  
                    u2800 0CE4                      u1920 010B                      u1840 00C3  
                    u1760 0037                      u1680 0FC5                      u2720 0E26  
                    u2640 0D5C                      u2480 0BBF                      u2545 0F48  
                    u3177 0B16                      u3097 0C18                      u1921 010A  
                    u1841 00C2                      u1761 0036                      u1681 0FC4  
                    u1665 0FA5                      u2721 0E25                      u2641 0D5B  
                    u2625 0D44                      u2481 0BBE                      u2465 0BAC  
                    u2570 0F7F                      u2810 0D08                      u2490 0AD9  
                    u1850 00CE                      u1770 003C                      u2650 0CA1  
                    u2571 0F7E                      u2555 0F5D                      u2491 0AD8  
                    u1931 011D                      u1851 00CC                      u1771 003B  
                    u2635 0D50                      u2651 0CA0                      u2475 0BB3  
                    u2740 0C76                      u2820 0D1A                      u2900 077B  
                    u1940 012F                      u1932 0124                      u1860 00CF  
                    u1780 0058                      u2580 0D25                      u2565 0F71  
                    u2821 0D19                      u2901 077A                      u1941 012E  
                    u1933 012B                      u1845 00BF                      u1781 0057  
                    u2581 0D24                      u2750 0BFC                      u2910 078A  
                    u2830 073F                      u1950 0133                      u1870 00DF  
                    u1790 0061                      u2670 0CB3                      u2751 0BFB  
                    u2911 0789                      u2831 073E                      u1951 0132  
                    u1871 00DE                      u1791 0060                      u1695 0FC7  
                    u2671 0CB2                      u2760 0D69                      u2840 0744  
                    u1960 0140                      u1880 00EC                      u2680 0CBD  
                    u2920 048E                      u2745 0C71                      u2761 0D68  
                    u2841 0743                      u1961 013F                      u1881 00EB  
                    u2681 0CBC                      u2665 0CA5                      u2921 048D  
                    u2850 074C                      u2930 04AB                      u2851 074B  
                    u2595 0D29                      u2931 04AA                      _PEIE 005E  
                    u2780 0D8E                      u2860 0751                      u1980 0165  
                    u2940 04EB                      u2781 0D8D                      u2861 0750  
                    u1981 0164                      u2685 0CB9                      u2941 04EA  
                    u2870 0759                      u2950 0536                      u2775 0D6F  
                    u2871 0758                      u1991 017C                      u1983 0161  
                    u1975 0143                      u1895 00EF                      u2695 0CC4  
                    u2951 0535                      u2880 075E                      u1992 017D  
                    u2960 0541                      u2881 075D                      u1993 0182  
                    u2961 0540                      u2890 0768                      u1994 0183  
                    u2970 054C                      u2795 0D94                      u2891 0767  
                    u1995 0188                      u2971 054B                      u2955 0532  
                    u1996 0189                      u2980 0562                      u2981 0561  
                    u2990 0577                      i1l63 0B52                      u2991 0576  
                    u2975 0548                      _TMR0 0001         ?_Lcd_Write_String 0025  
                    _main 027C                      _temp 00CA                      btemp 007E  
                    start 000C        ??_Lcd_Write_String 0027           __end_of_Lcd_Cmd 0B1F  
       ___bmul@multiplier 0023                     ??_isr 0074          ?_I2C_Master_Init 002E  
            _dht11_config 0A60             ___fltol@sign1 0036           __end_of___fladd 027C  
                   ?_main 0070           __end_of___flsub 0B9D           __end_of___fltol 1000  
                   _ANSEL 0188           __end_of___lldiv 0F88           __end_of___lwdiv 0D61  
                   i1l310 0AA6                     i1l307 0A98                     i1l309 0A9E  
         __end_of___lwmod 0CD5                     _RCREG 001A                     _SPBRG 0099  
                   _PORTC 0007                     _PORTD 0008                     _TRISD 0088  
                   _SSPIE 0463                     _SSPIF 0063                     _TXREG 0019  
         __end_of_dpowers 081A                     _frexp 07AA                     _errno 0078  
                   _humid 00CB           __end_of_isdigit 0ABB                     _round 0EB9  
                   _trunc 0DFD                     pclath 000A                     status 0003  
                   wtemp0 007E           __end_of_sprintf 05CF          __end_of_Lcd_Init 0EB9  
        __end_of_Lcd_Port 0B79           __initialization 000F              __end_of_main 0482  
                  ??_main 0052                    ?_frexp 002C                    _ADRESH 001E  
                  ?_round 004A                    _ANSELH 0189                    ?_trunc 0038  
        __end_of_adc_read 0A98                    i1l2573 0A98                    i1l2575 0A9F  
                  i1l2841 0B49                    i1l2837 0B3B                    i1l2839 0B46  
                  u318_27 0B4D                    u273_20 0A9E                    u273_21 0A9D  
               ??_Lcd_Cmd 0021                    _SPBRGH 009A                    _SSPADD 0093  
                  _TRISC3 043B                    _TRISC4 043C                    _SSPCON 0014  
                  _SSPBUF 0013          __end_of___xxtofl 0689                    _adc_RO 0ABB  
                  ___bmul 0AD1                    ___fleq 0DAD                 ??___fladd 0028  
                  ___wmul 0B9D                 ??___flsub 004A                 ??___fltol 0032  
               ??___lldiv 0028                 ??___lwdiv 0024                 ??___lwmod 002C  
          dht11_read@phum 0028                 ??_isdigit 0020           _UART_write_char 0A7C  
                  saved_w 007E                    round@f 004E                    round@x 004A  
               ??_sprintf 0031                    trunc@i 003C                    trunc@x 0038  
         Lcd_Set_Cursor@a 0026           Lcd_Set_Cursor@b 0024           Lcd_Set_Cursor@y 0028  
         Lcd_Set_Cursor@z 0027             adc_RO@channel 0023              ___xxtofl@arg 002A  
            ___xxtofl@exp 0029              ___xxtofl@val 0020                ___fleq@ff1 0020  
              ___fleq@ff2 0024   __end_of__initialization 0020         __end_of_Lcd_Clear 0A7C  
              ___fltol@f1 002E       ___bmul@multiplicand 0020            __pcstackCOMMON 0070  
              _dht11_byte 0056                _dht11_read 0720             __end_of_frexp 07FE  
           __end_of_round 0F20             __end_of_trunc 0E57                _adc_output 0A66  
          _Lcd_Set_Cursor 0D61            _OPTION_REGbits 0081                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070                   ??_frexp 0031              sprintf@width 0039  
                 ??_round 004E                   ??_trunc 003C                __pbssBANK0 0056  
              __pbssBANK1 00C7                __pmaintext 027C             ??_adc_channel 0022  
                 ?_adc_RO 0070                   ?___bmul 0020                   ?___fleq 0020  
                 ?___wmul 0020                __pintentry 0004   __end_of_UART_write_char 0A8A  
  __end_of_Lcd_Set_Cursor 0DAD                 ?_adc_read 0070          main@display_temp 00B4  
       __end_of_adc_setup 0C26        dht11_read@checksum 0027                 ?___xxtofl 0020  
              ??_Lcd_Init 0024                ??_Lcd_Port 0020                   _SSPCON2 0091  
                 _SSPSTAT 0094                __stringtab 0800            _Lcd_Write_Char 0C26  
                 _Lcd_Cmd 0B03            _UART_RX_config 0AE8            _UART_TX_config 0B1F  
             ?_dht11_read 0024                   ___fladd 0024                   ___flsub 0B79  
                 ___fltol 0F88                   ___lldiv 0F20                   ___lwdiv 0D1B  
                 ___lwmod 0C99               ?_adc_output 0070                   _alcohol 00C9  
               _ANSELbits 0188           ?_Lcd_Set_Cursor 0024                ??_adc_read 0020  
                 __ptext1 0482                   __ptext2 0AA7                   __ptext3 0B9D  
                 __ptext4 0C99                   __ptext5 0D1B                   __ptext6 0EB9  
                 __ptext7 0DFD                   __ptext8 07AA                   __ptext9 0DAD  
     __end_of_adc_channel 0720                   _dpowers 0810           dht11_read@ptemp 0024  
                 _isdigit 0AA7                ??___xxtofl 0024         ??_dht11_read_byte 0020  
                 _sprintf 0482    __end_of_Lcd_Write_Char 0C5F      end_of_initialization 0020  
      adc_channel@channel 0020    __end_of_UART_RX_config 0B03    __end_of_UART_TX_config 0B3B  
         ___lldiv@divisor 0020           ___lldiv@counter 002D                 _RCSTAbits 0018  
        I2C_Master_Init@c 002E                 Lcd_Port@a 0020          ?_UART_write_char 0070  
          adc_setup@inter 0021                 _PORTAbits 0005                 _PORTDbits 0008  
             ___fladd@grs 0033             ___xxtofl@sign 0028                 _TRISAbits 0085  
               _TRISBbits 0086                 _TRISCbits 0087                 _TRISEbits 0089  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0025         Lcd_Write_String@i 002A  
         ?_UART_RX_config 0020           ?_UART_TX_config 0020                 _TXSTAbits 0098  
               _Lcd_Clear 0A6F               _adc_channel 0689    UART_RX_config@baudrate 0020  
          __end_of_adc_RO 0AD1            __end_of___bmul 0AE8            __end_of___fleq 0DFD  
          __end_of___wmul 0BC4            _UART_read_char 0A98          _Lcd_Write_String 0CD5  
             _BAUDCTLbits 0187       start_initialization 000F               __end_of_isr 0B59  
              frexp@value 002C         ??_I2C_Master_Init 0032                ?_Lcd_Clear 0070  
                ??_adc_RO 0022                  ??___bmul 0021                  ??___fleq 0028  
  __end_of_UART_read_char 0AA7                  ??___wmul 0024             ?_dht11_config 0070  
         Lcd_Write_Char@a 0024           Lcd_Write_Char@y 0023                 ___fladd@a 0024  
               ___fladd@b 0020               __pbssCOMMON 0078           adc_read@channel 0021  
               ___flsub@a 0042                 ___flsub@b 0046                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK1 00A0                 _dht11_aux 005B  
            _isdigit$1515 0020                 _adc_setup 0BF4                  ?_Lcd_Cmd 0070  
             dht11_read@i 0029               sprintf@flag 0034               sprintf@prec 0038  
               _main$1773 00BE                 _main$1774 00C2          ___lwdiv@dividend 0022  
        ??_Lcd_Set_Cursor 0025              ??_dht11_read 0025                  ?___fladd 0020  
         ?_UART_read_char 0070                  ?___flsub 0042                  ?___fltol 002E  
                ?___lldiv 0020            ??_dht11_config 0020                  ?___lwdiv 0020  
                ?___lwmod 0028           main@display_alc 00A0           main@display_bpm 00AA  
         _dht11_read_byte 0BC4              ??_adc_output 0020                 __pstrings 0800  
                ?_isdigit 0070          ___lwdiv@quotient 0025                ?_adc_setup 0070  
                ?_sprintf 002E        __end_of_dht11_read 07AA         interrupt_function 0004  
          ___wmul@product 0024        __end_of_adc_output 0A6F                  _PIE1bits 008C  
                Lcd_Cmd@a 0023                  _PIR1bits 000C               ??_Lcd_Clear 0024  
              _ADCON0bits 001F               __stringbase 080F                _ADCON1bits 009F  
       ___wmul@multiplier 0020          ??_Lcd_Write_Char 0021          ??_UART_RX_config 0022  
                _Lcd_Init 0E57                  _Lcd_Port 0B59          ??_UART_TX_config 0022  
__end_of_Lcd_Write_String 0D1B                 frexp@eptr 0030   __end_of_dht11_read_byte 0BF4  
            ?_adc_channel 0020        __end_of__stringtab 0810                  _adc_read 0A8A  
              _ANSELHbits 0189                sprintf@val 0036           _I2C_Master_Init 0C5F  
                ___xxtofl 05CF           ___lwdiv@divisor 0020           ___lwdiv@counter 0027  
                __ptext10 05CF                  __ptext11 0F88                  __ptext20 0ABB  
                __ptext12 0B79                  __ptext21 0A8A                  __ptext13 0024  
                __ptext30 0A6F                  __ptext22 0A66                  __ptext14 0720  
                __ptext31 0B03                  __ptext23 0A7C                  __ptext15 0BC4  
                __ptext32 0B59                  __ptext24 0B1F                  __ptext16 0AD1  
                __ptext33 0C5F                  __ptext25 0AE8                  __ptext17 0A60  
                __ptext34 0F20                  __ptext26 0CD5                  __ptext18 0BF4  
                __ptext35 0B3B                  __ptext27 0C26                  __ptext19 0689  
                __ptext36 0A98                  __ptext28 0D61                  __ptext29 0E57  
             ??_adc_setup 0020      __end_of_dht11_config 0A66                trunc@expon 0040  
  UART_TX_config@baudrate 0020          dht11_read_byte@i 0021           main@temperature 00C6  
              _INTCONbits 000B                  isdigit@c 0021        Lcd_Write_Char@temp 0022  
                intlevel1 0000                 sprintf@ap 0035                 sprintf@sp 003B  
        ___lwmod@dividend 002A          ___lldiv@dividend 0024          ??_UART_read_char 0072  
               stringcode 080A                _OSCCONbits 008F          ?_dht11_read_byte 0070  
 __end_of_I2C_Master_Init 0C99        Lcd_Set_Cursor@temp 0029                  sprintf@c 003C  
                sprintf@f 002E          ___lldiv@quotient 0029           ___lwmod@divisor 0028  
         ___lwmod@counter 002D                  stringdir 080A                  stringtab 0800  
             _SSPCON2bits 0091  UART_write_char@character 0020             ___fladd@signs 0030  
       ??_UART_write_char 0020              ___fladd@aexp 0031              ___fladd@bexp 0032  
              _SSPCONbits 0014  
